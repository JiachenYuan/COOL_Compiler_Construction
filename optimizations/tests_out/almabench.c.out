Running complicated test: almabench.c
UnitSCCP running on anpm
Visiting BB: 
VisitInstr:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5
VisitInstr:   %3 = call double @llvm.fabs.f64(double %2)
Check LatCell: 0
In Meet:   %3 = call double @llvm.fabs.f64(double %2), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call double @llvm.fabs.f64(double %2)
VisitInstr:   %4 = fcmp ult double %3, 0x400921FB54442D18
CmpInst:   %4 = fcmp ult double %3, 0x400921FB54442D18
Check LatCell: 0
In Meet:   %4 = fcmp ult double %3, 0x400921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = fcmp ult double %3, 0x400921FB54442D18
VisitInstr:   %5 = fcmp olt double %0, 0.000000e+00
CmpInst:   %5 = fcmp olt double %0, 0.000000e+00
Check LatCell: 0
In Meet:   %5 = fcmp olt double %0, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = fcmp olt double %0, 0.000000e+00
VisitInstr:   %6 = select i1 %5, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select:   %6 = select i1 %5, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select LatCond: -1, 0x0
Select LatTrue: 0, 0x558d5460a740
Select LatFals: 0, 0x558d54609b20
Check LatCell: 0
In Meet:   %6 = select i1 %5, double 0xC01921FB54442D18, double 0x401921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = select i1 %5, double 0xC01921FB54442D18, double 0x401921FB54442D18
VisitInstr:   %7 = fsub double %2, %6
BinaryOp:   %7 = fsub double %2, %6
Check LatCell: 0
In Meet:   %7 = fsub double %2, %6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = fsub double %2, %6
VisitInstr:   %.0 = select i1 %4, double %2, double %7
Select:   %.0 = select i1 %4, double %2, double %7
Select LatCond: -1, 0x0
Select LatTrue: -1, 0x0
Select LatFals: -1, 0x0
Check LatCell: 0
In Meet:   %.0 = select i1 %4, double %2, double %7, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.0 = select i1 %4, double %2, double %7
VisitInstr:   ret double %.0
Check LatCell: 0
In Meet:   ret double %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %.0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on anpm
******************************************************
UnitLoopAnalysis running on anpm
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitSCCP running on planetpv
Visiting BB: 
VisitInstr:   %4 = load double, ptr %0, align 8
Check LatCell: 0
In Meet:   %4 = load double, ptr %0, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = load double, ptr %0, align 8
VisitInstr:   %5 = fadd double %4, 0xC142B42C80000000
BinaryOp:   %5 = fadd double %4, 0xC142B42C80000000
Check LatCell: 0
In Meet:   %5 = fadd double %4, 0xC142B42C80000000, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = fadd double %4, 0xC142B42C80000000
VisitInstr:   %6 = getelementptr inbounds double, ptr %0, i64 1
GetElementPtr:   %6 = getelementptr inbounds double, ptr %0, i64 1
Check LatCell: 0
In Meet:   %6 = getelementptr inbounds double, ptr %0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = getelementptr inbounds double, ptr %0, i64 1
VisitInstr:   %7 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %7 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = load double, ptr %6, align 8
VisitInstr:   %8 = fadd double %5, %7
BinaryOp:   %8 = fadd double %5, %7
Check LatCell: 0
In Meet:   %8 = fadd double %5, %7, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = fadd double %5, %7
VisitInstr:   %9 = fdiv double %8, 3.652500e+05
BinaryOp:   %9 = fdiv double %8, 3.652500e+05
Check LatCell: 0
In Meet:   %9 = fdiv double %8, 3.652500e+05, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = fdiv double %8, 3.652500e+05
VisitInstr:   %10 = sext i32 %1 to i64
UnaryOp:   %10 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %10 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = sext i32 %1 to i64
VisitInstr:   %11 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10
GetElementPtr:   %11 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10
VisitInstr:   %12 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %12 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load double, ptr %11, align 8
VisitInstr:   %13 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 1
GetElementPtr:   %13 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 1
VisitInstr:   %14 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %13, align 8
VisitInstr:   %15 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 2
GetElementPtr:   %15 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %10, i64 2
VisitInstr:   %16 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %16 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load double, ptr %15, align 8
VisitInstr:   %17 = call double @llvm.fmuladd.f64(double %16, double %9, double %14)
Check LatCell: 0
In Meet:   %17 = call double @llvm.fmuladd.f64(double %16, double %9, double %14), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = call double @llvm.fmuladd.f64(double %16, double %9, double %14)
VisitInstr:   %18 = call double @llvm.fmuladd.f64(double %17, double %9, double %12)
Check LatCell: 0
In Meet:   %18 = call double @llvm.fmuladd.f64(double %17, double %9, double %12), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = call double @llvm.fmuladd.f64(double %17, double %9, double %12)
VisitInstr:   %19 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10
GetElementPtr:   %19 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10
Check LatCell: 0
In Meet:   %19 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10
VisitInstr:   %20 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %20 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = load double, ptr %19, align 8
VisitInstr:   %21 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 1
GetElementPtr:   %21 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 1
VisitInstr:   %22 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %21, align 8
VisitInstr:   %23 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 2
GetElementPtr:   %23 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %23 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %10, i64 2
VisitInstr:   %24 = load double, ptr %23, align 8
Check LatCell: 0
In Meet:   %24 = load double, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = load double, ptr %23, align 8
VisitInstr:   %25 = call double @llvm.fmuladd.f64(double %24, double %9, double %22)
Check LatCell: 0
In Meet:   %25 = call double @llvm.fmuladd.f64(double %24, double %9, double %22), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = call double @llvm.fmuladd.f64(double %24, double %9, double %22)
VisitInstr:   %26 = fmul double %25, %9
BinaryOp:   %26 = fmul double %25, %9
Check LatCell: 0
In Meet:   %26 = fmul double %25, %9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = fmul double %25, %9
VisitInstr:   %27 = call double @llvm.fmuladd.f64(double %20, double 3.600000e+03, double %26)
Check LatCell: 0
In Meet:   %27 = call double @llvm.fmuladd.f64(double %20, double 3.600000e+03, double %26), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = call double @llvm.fmuladd.f64(double %20, double 3.600000e+03, double %26)
VisitInstr:   %28 = fmul double %27, 0x3ED455A5B2FF8F9D
BinaryOp:   %28 = fmul double %27, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %28 = fmul double %27, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = fmul double %27, 0x3ED455A5B2FF8F9D
VisitInstr:   %29 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10
GetElementPtr:   %29 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10
VisitInstr:   %30 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %30 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = load double, ptr %29, align 8
VisitInstr:   %31 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 1
GetElementPtr:   %31 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %31 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 1
VisitInstr:   %32 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %32 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = load double, ptr %31, align 8
VisitInstr:   %33 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 2
GetElementPtr:   %33 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %33 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %10, i64 2
VisitInstr:   %34 = load double, ptr %33, align 8
Check LatCell: 0
In Meet:   %34 = load double, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = load double, ptr %33, align 8
VisitInstr:   %35 = call double @llvm.fmuladd.f64(double %34, double %9, double %32)
Check LatCell: 0
In Meet:   %35 = call double @llvm.fmuladd.f64(double %34, double %9, double %32), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = call double @llvm.fmuladd.f64(double %34, double %9, double %32)
VisitInstr:   %36 = call double @llvm.fmuladd.f64(double %35, double %9, double %30)
Check LatCell: 0
In Meet:   %36 = call double @llvm.fmuladd.f64(double %35, double %9, double %30), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = call double @llvm.fmuladd.f64(double %35, double %9, double %30)
VisitInstr:   %37 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10
GetElementPtr:   %37 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10
Check LatCell: 0
In Meet:   %37 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10
VisitInstr:   %38 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %38 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = load double, ptr %37, align 8
VisitInstr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 1
GetElementPtr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 1
VisitInstr:   %40 = load double, ptr %39, align 8
Check LatCell: 0
In Meet:   %40 = load double, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load double, ptr %39, align 8
VisitInstr:   %41 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 2
GetElementPtr:   %41 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %41 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %10, i64 2
VisitInstr:   %42 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %42 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load double, ptr %41, align 8
VisitInstr:   %43 = call double @llvm.fmuladd.f64(double %42, double %9, double %40)
Check LatCell: 0
In Meet:   %43 = call double @llvm.fmuladd.f64(double %42, double %9, double %40), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = call double @llvm.fmuladd.f64(double %42, double %9, double %40)
VisitInstr:   %44 = fmul double %43, %9
BinaryOp:   %44 = fmul double %43, %9
Check LatCell: 0
In Meet:   %44 = fmul double %43, %9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = fmul double %43, %9
VisitInstr:   %45 = call double @llvm.fmuladd.f64(double %38, double 3.600000e+03, double %44)
Check LatCell: 0
In Meet:   %45 = call double @llvm.fmuladd.f64(double %38, double 3.600000e+03, double %44), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = call double @llvm.fmuladd.f64(double %38, double 3.600000e+03, double %44)
VisitInstr:   %46 = fmul double %45, 0x3ED455A5B2FF8F9D
BinaryOp:   %46 = fmul double %45, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %46 = fmul double %45, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = fmul double %45, 0x3ED455A5B2FF8F9D
VisitInstr:   %47 = call double @anpm(double noundef %46)
Check LatCell: 0
In Meet:   %47 = call double @anpm(double noundef %46), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = call double @anpm(double noundef %46)
VisitInstr:   %48 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10
GetElementPtr:   %48 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10
Check LatCell: 0
In Meet:   %48 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10
VisitInstr:   %49 = load double, ptr %48, align 8
Check LatCell: 0
In Meet:   %49 = load double, ptr %48, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load double, ptr %48, align 8
VisitInstr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 1
GetElementPtr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 1
VisitInstr:   %51 = load double, ptr %50, align 8
Check LatCell: 0
In Meet:   %51 = load double, ptr %50, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = load double, ptr %50, align 8
VisitInstr:   %52 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 2
GetElementPtr:   %52 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %52 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %10, i64 2
VisitInstr:   %53 = load double, ptr %52, align 8
Check LatCell: 0
In Meet:   %53 = load double, ptr %52, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load double, ptr %52, align 8
VisitInstr:   %54 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10
GetElementPtr:   %54 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10
VisitInstr:   %55 = load double, ptr %54, align 8
Check LatCell: 0
In Meet:   %55 = load double, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load double, ptr %54, align 8
VisitInstr:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 1
GetElementPtr:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 1
Check LatCell: 0
In Meet:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 1
VisitInstr:   %57 = load double, ptr %56, align 8
Check LatCell: 0
In Meet:   %57 = load double, ptr %56, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = load double, ptr %56, align 8
VisitInstr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 2
GetElementPtr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 2
Check LatCell: 0
In Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %10, i64 2
VisitInstr:   %59 = load double, ptr %58, align 8
Check LatCell: 0
In Meet:   %59 = load double, ptr %58, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = load double, ptr %58, align 8
VisitInstr:   %60 = call double @llvm.fmuladd.f64(double %59, double %9, double %57)
Check LatCell: 0
In Meet:   %60 = call double @llvm.fmuladd.f64(double %59, double %9, double %57), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = call double @llvm.fmuladd.f64(double %59, double %9, double %57)
VisitInstr:   %61 = fmul double %60, %9
BinaryOp:   %61 = fmul double %60, %9
Check LatCell: 0
In Meet:   %61 = fmul double %60, %9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = fmul double %60, %9
VisitInstr:   %62 = call double @llvm.fmuladd.f64(double %55, double 3.600000e+03, double %61)
Check LatCell: 0
In Meet:   %62 = call double @llvm.fmuladd.f64(double %55, double 3.600000e+03, double %61), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = call double @llvm.fmuladd.f64(double %55, double 3.600000e+03, double %61)
VisitInstr:   %63 = fmul double %62, 0x3ED455A5B2FF8F9D
BinaryOp:   %63 = fmul double %62, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %63 = fmul double %62, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = fmul double %62, 0x3ED455A5B2FF8F9D
VisitInstr:   %64 = call double @anpm(double noundef %63)
Check LatCell: 0
In Meet:   %64 = call double @anpm(double noundef %63), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = call double @anpm(double noundef %63)
VisitInstr:   %65 = fmul double %9, 0x3FD702A41F2E9970
BinaryOp:   %65 = fmul double %9, 0x3FD702A41F2E9970
Check LatCell: 0
In Meet:   %65 = fmul double %9, 0x3FD702A41F2E9970, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = fmul double %9, 0x3FD702A41F2E9970
VisitInstr:   br label %66
BranchInst:   br label %66
In AddEdge: 0x558d5460b0c0, 0x558d5461e700, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
PHI:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
VisitInstr:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
PHI:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.02 = phi double [ %18, %3 ], [ %93, %68 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
VisitInstr:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
PHI:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.01 = phi double [ %28, %3 ], [ %90, %68 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
VisitInstr:   %67 = icmp ult i32 %.03, 8
CmpInst:   %67 = icmp ult i32 %.03, 8
Check LatCell: 0
In Meet:   %67 = icmp ult i32 %.03, 8, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %67 = icmp ult i32 %.03, 8
VisitInstr:   br i1 %67, label %68, label %95
BranchInst:   br i1 %67, label %68, label %95
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d5461e650, 0x558d5461e990, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %69 = zext i32 %.03 to i64
UnaryOp:   %69 = zext i32 %.03 to i64
Check LatCell: 0
In Meet:   %69 = zext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x558d5461a050)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %69 = zext i32 %.03 to i64
VisitInstr:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
GetElementPtr:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
VisitInstr:   %71 = load double, ptr %70, align 8
Check LatCell: 0
In Meet:   %71 = load double, ptr %70, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = load double, ptr %70, align 8
VisitInstr:   %72 = fmul double %71, %65
BinaryOp:   %72 = fmul double %71, %65
Check LatCell: 0
In Meet:   %72 = fmul double %71, %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = fmul double %71, %65
VisitInstr:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
GetElementPtr:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
VisitInstr:   %74 = load double, ptr %73, align 8
Check LatCell: 0
In Meet:   %74 = load double, ptr %73, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = load double, ptr %73, align 8
VisitInstr:   %75 = fmul double %74, %65
BinaryOp:   %75 = fmul double %74, %65
Check LatCell: 0
In Meet:   %75 = fmul double %74, %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = fmul double %74, %65
VisitInstr:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
GetElementPtr:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
VisitInstr:   %77 = load double, ptr %76, align 8
Check LatCell: 0
In Meet:   %77 = load double, ptr %76, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = load double, ptr %76, align 8
VisitInstr:   %78 = call double @cos(double noundef %72) #5
Check LatCell: 0
In Meet:   %78 = call double @cos(double noundef %72) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = call double @cos(double noundef %72) #5
VisitInstr:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
GetElementPtr:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
VisitInstr:   %80 = load double, ptr %79, align 8
Check LatCell: 0
In Meet:   %80 = load double, ptr %79, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load double, ptr %79, align 8
VisitInstr:   %81 = call double @sin(double noundef %72) #5
Check LatCell: 0
In Meet:   %81 = call double @sin(double noundef %72) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = call double @sin(double noundef %72) #5
VisitInstr:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
GetElementPtr:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
VisitInstr:   %83 = load double, ptr %82, align 8
Check LatCell: 0
In Meet:   %83 = load double, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = load double, ptr %82, align 8
VisitInstr:   %84 = call double @cos(double noundef %75) #5
Check LatCell: 0
In Meet:   %84 = call double @cos(double noundef %75) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = call double @cos(double noundef %75) #5
VisitInstr:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
GetElementPtr:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
Check LatCell: 0
In Meet:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
VisitInstr:   %86 = load double, ptr %85, align 8
Check LatCell: 0
In Meet:   %86 = load double, ptr %85, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = load double, ptr %85, align 8
VisitInstr:   %87 = call double @sin(double noundef %75) #5
Check LatCell: 0
In Meet:   %87 = call double @sin(double noundef %75) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = call double @sin(double noundef %75) #5
VisitInstr:   %88 = fmul double %86, %87
BinaryOp:   %88 = fmul double %86, %87
Check LatCell: 0
In Meet:   %88 = fmul double %86, %87, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = fmul double %86, %87
VisitInstr:   %89 = call double @llvm.fmuladd.f64(double %83, double %84, double %88)
Check LatCell: 0
In Meet:   %89 = call double @llvm.fmuladd.f64(double %83, double %84, double %88), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = call double @llvm.fmuladd.f64(double %83, double %84, double %88)
VisitInstr:   %90 = call double @llvm.fmuladd.f64(double %89, double 0x3E7AD7F29ABCAF48, double %.01)
Check LatCell: 0
In Meet:   %90 = call double @llvm.fmuladd.f64(double %89, double 0x3E7AD7F29ABCAF48, double %.01), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = call double @llvm.fmuladd.f64(double %89, double 0x3E7AD7F29ABCAF48, double %.01)
Adding SSA:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
VisitInstr:   %91 = fmul double %80, %81
BinaryOp:   %91 = fmul double %80, %81
Check LatCell: 0
In Meet:   %91 = fmul double %80, %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = fmul double %80, %81
VisitInstr:   %92 = call double @llvm.fmuladd.f64(double %77, double %78, double %91)
Check LatCell: 0
In Meet:   %92 = call double @llvm.fmuladd.f64(double %77, double %78, double %91), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = call double @llvm.fmuladd.f64(double %77, double %78, double %91)
VisitInstr:   %93 = call double @llvm.fmuladd.f64(double %92, double 0x3E7AD7F29ABCAF48, double %.02)
Check LatCell: 0
In Meet:   %93 = call double @llvm.fmuladd.f64(double %92, double 0x3E7AD7F29ABCAF48, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = call double @llvm.fmuladd.f64(double %92, double 0x3E7AD7F29ABCAF48, double %.02)
Adding SSA:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
VisitInstr:   %94 = add nuw nsw i32 %.03, 1
BinaryOp:   %94 = add nuw nsw i32 %.03, 1
Check LatCell: 0
In Meet:   %94 = add nuw nsw i32 %.03, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %94 = add nuw nsw i32 %.03, 1
Adding SSA:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
VisitInstr:   br label %66, !llvm.loop !6
BranchInst:   br label %66, !llvm.loop !6
In AddEdge: 0x558d5461e850, 0x558d546215d0, 0
Adding edge:  -> 
Visiting SSA:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
VisitInstr:   %.01 = phi double [ %28, %3 ], [ %90, %68 ]
Visiting SSA:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
VisitInstr:   %.02 = phi double [ %18, %3 ], [ %93, %68 ]
Visiting SSA:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
PHI:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
PHI LatOp: 0, 0x558d546198b0
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
Adding SSA:   %69 = zext i32 %.03 to i64
Adding SSA:   %67 = icmp ult i32 %.03, 8
Adding SSA:   %94 = add nuw nsw i32 %.03, 1
Visiting SSA:   %69 = zext i32 %.03 to i64
VisitInstr:   %69 = zext i32 %.03 to i64
UnaryOp:   %69 = zext i32 %.03 to i64
Check LatCell: 1
In Meet:   %69 = zext i32 %.03 to i64, Lat1: (0, 0x558d5461a050), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %69 = zext i32 %.03 to i64
Adding SSA:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
Adding SSA:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
Adding SSA:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
Adding SSA:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
Adding SSA:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
Adding SSA:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
Visiting SSA:   %67 = icmp ult i32 %.03, 8
VisitInstr:   %67 = icmp ult i32 %.03, 8
CmpInst:   %67 = icmp ult i32 %.03, 8
Check LatCell: 1
In Meet:   %67 = icmp ult i32 %.03, 8, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %67 = icmp ult i32 %.03, 8
Adding SSA:   br i1 %67, label %68, label %95
Visiting SSA:   %94 = add nuw nsw i32 %.03, 1
VisitInstr:   %94 = add nuw nsw i32 %.03, 1
BinaryOp:   %94 = add nuw nsw i32 %.03, 1
Check LatCell: 1
In Meet:   %94 = add nuw nsw i32 %.03, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %94 = add nuw nsw i32 %.03, 1
Adding SSA:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
Visiting SSA:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
VisitInstr:   %85 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %69
Visiting SSA:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
VisitInstr:   %82 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %69
Visiting SSA:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
VisitInstr:   %79 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 %69
Visiting SSA:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
VisitInstr:   %76 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 %69
Visiting SSA:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
VisitInstr:   %73 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %69
Visiting SSA:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
VisitInstr:   %70 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 %69
Visiting SSA:   br i1 %67, label %68, label %95
VisitInstr:   br i1 %67, label %68, label %95
BranchInst:   br i1 %67, label %68, label %95
In BranchInst: -1, 0x0
In AddEdge: 0x558d5461e650, 0x558d5461e990, 0
In AddEdge: 0x558d5461e650, 0x558d5461e990, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %96 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 8
GetElementPtr:   %96 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 8
Check LatCell: 0
In Meet:   %96 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %10, i64 8
VisitInstr:   %97 = load double, ptr %96, align 8
Check LatCell: 0
In Meet:   %97 = load double, ptr %96, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = load double, ptr %96, align 8
VisitInstr:   %98 = fmul double %97, %65
BinaryOp:   %98 = fmul double %97, %65
Check LatCell: 0
In Meet:   %98 = fmul double %97, %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = fmul double %97, %65
VisitInstr:   %99 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 8
GetElementPtr:   %99 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 8
Check LatCell: 0
In Meet:   %99 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %10, i64 8
VisitInstr:   %100 = load double, ptr %99, align 8
Check LatCell: 0
In Meet:   %100 = load double, ptr %99, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = load double, ptr %99, align 8
VisitInstr:   %101 = call double @cos(double noundef %98) #5
Check LatCell: 0
In Meet:   %101 = call double @cos(double noundef %98) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = call double @cos(double noundef %98) #5
VisitInstr:   %102 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 8
GetElementPtr:   %102 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 8
Check LatCell: 0
In Meet:   %102 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %102 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %10, i64 8
VisitInstr:   %103 = load double, ptr %102, align 8
Check LatCell: 0
In Meet:   %103 = load double, ptr %102, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = load double, ptr %102, align 8
VisitInstr:   %104 = call double @sin(double noundef %98) #5
Check LatCell: 0
In Meet:   %104 = call double @sin(double noundef %98) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = call double @sin(double noundef %98) #5
VisitInstr:   br label %105
BranchInst:   br label %105
In AddEdge: 0x558d5461e8a0, 0x558d54623c50, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
PHI:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
PHI LatOp: 0, 0x558d546198e0
Check LatCell: 0
In Meet:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198e0)
Lat2.second: i32 8
Meet:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
VisitInstr:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
PHI:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
VisitInstr:   %106 = icmp ult i32 %.14, 10
CmpInst:   %106 = icmp ult i32 %.14, 10
Check LatCell: 0
In Meet:   %106 = icmp ult i32 %.14, 10, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %106 = icmp ult i32 %.14, 10
VisitInstr:   br i1 %106, label %107, label %123
BranchInst:   br i1 %106, label %107, label %123
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d54623be0, 0x558d54623ee0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %108 = zext i32 %.14 to i64
UnaryOp:   %108 = zext i32 %.14 to i64
Check LatCell: 0
In Meet:   %108 = zext i32 %.14 to i64, Lat1: (1, 0x0), Lat2: (0, 0x558d5460b470)
Lat2.second: i32 zext (i32 8 to i32)
Meet:   %108 = zext i32 %.14 to i64
VisitInstr:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
GetElementPtr:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
Check LatCell: 0
In Meet:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
VisitInstr:   %110 = load double, ptr %109, align 8
Check LatCell: 0
In Meet:   %110 = load double, ptr %109, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %110 = load double, ptr %109, align 8
VisitInstr:   %111 = fmul double %110, %65
BinaryOp:   %111 = fmul double %110, %65
Check LatCell: 0
In Meet:   %111 = fmul double %110, %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = fmul double %110, %65
VisitInstr:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
GetElementPtr:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
Check LatCell: 0
In Meet:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
VisitInstr:   %113 = load double, ptr %112, align 8
Check LatCell: 0
In Meet:   %113 = load double, ptr %112, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %113 = load double, ptr %112, align 8
VisitInstr:   %114 = call double @cos(double noundef %111) #5
Check LatCell: 0
In Meet:   %114 = call double @cos(double noundef %111) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = call double @cos(double noundef %111) #5
VisitInstr:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
GetElementPtr:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
Check LatCell: 0
In Meet:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
VisitInstr:   %116 = load double, ptr %115, align 8
Check LatCell: 0
In Meet:   %116 = load double, ptr %115, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = load double, ptr %115, align 8
VisitInstr:   %117 = call double @sin(double noundef %111) #5
Check LatCell: 0
In Meet:   %117 = call double @sin(double noundef %111) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %117 = call double @sin(double noundef %111) #5
VisitInstr:   %118 = fmul double %116, %117
BinaryOp:   %118 = fmul double %116, %117
Check LatCell: 0
In Meet:   %118 = fmul double %116, %117, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = fmul double %116, %117
VisitInstr:   %119 = call double @llvm.fmuladd.f64(double %113, double %114, double %118)
Check LatCell: 0
In Meet:   %119 = call double @llvm.fmuladd.f64(double %113, double %114, double %118), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = call double @llvm.fmuladd.f64(double %113, double %114, double %118)
VisitInstr:   %120 = fmul double %9, %119
BinaryOp:   %120 = fmul double %9, %119
Check LatCell: 0
In Meet:   %120 = fmul double %9, %119, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = fmul double %9, %119
VisitInstr:   %121 = call double @llvm.fmuladd.f64(double %120, double 0x3E7AD7F29ABCAF48, double %.1)
Check LatCell: 0
In Meet:   %121 = call double @llvm.fmuladd.f64(double %120, double 0x3E7AD7F29ABCAF48, double %.1), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = call double @llvm.fmuladd.f64(double %120, double 0x3E7AD7F29ABCAF48, double %.1)
Adding SSA:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
VisitInstr:   %122 = add nuw nsw i32 %.14, 1
BinaryOp:   %122 = add nuw nsw i32 %.14, 1
Check LatCell: 0
In Meet:   %122 = add nuw nsw i32 %.14, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d546201b0)
Lat2.second: i32 9
Meet:   %122 = add nuw nsw i32 %.14, 1
Adding SSA:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
VisitInstr:   br label %105, !llvm.loop !8
BranchInst:   br label %105, !llvm.loop !8
In AddEdge: 0x558d54623da0, 0x558d54625660, 0
Adding edge:  -> 
Visiting SSA:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
Visiting SSA:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
VisitInstr:   %.1 = phi double [ %.01, %95 ], [ %121, %107 ]
Visiting SSA:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
VisitInstr:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
PHI:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
PHI LatOp: 0, 0x558d546198e0
PHI LatOp: 0, 0x558d546201b0
Check LatCell: 1
In Meet:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ], Lat1: (0, 0x558d546198e0), Lat2: (-1, 0x0)
Lat1.second: i32 8
Meet:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
Adding SSA:   %108 = zext i32 %.14 to i64
Adding SSA:   %106 = icmp ult i32 %.14, 10
Adding SSA:   %122 = add nuw nsw i32 %.14, 1
Visiting SSA:   %108 = zext i32 %.14 to i64
VisitInstr:   %108 = zext i32 %.14 to i64
UnaryOp:   %108 = zext i32 %.14 to i64
Check LatCell: 1
In Meet:   %108 = zext i32 %.14 to i64, Lat1: (0, 0x558d5460b470), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 8 to i32)
Meet:   %108 = zext i32 %.14 to i64
Adding SSA:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
Adding SSA:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
Adding SSA:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
Visiting SSA:   %106 = icmp ult i32 %.14, 10
VisitInstr:   %106 = icmp ult i32 %.14, 10
CmpInst:   %106 = icmp ult i32 %.14, 10
Check LatCell: 1
In Meet:   %106 = icmp ult i32 %.14, 10, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %106 = icmp ult i32 %.14, 10
Adding SSA:   br i1 %106, label %107, label %123
Visiting SSA:   %122 = add nuw nsw i32 %.14, 1
VisitInstr:   %122 = add nuw nsw i32 %.14, 1
BinaryOp:   %122 = add nuw nsw i32 %.14, 1
Check LatCell: 1
In Meet:   %122 = add nuw nsw i32 %.14, 1, Lat1: (0, 0x558d546201b0), Lat2: (-1, 0x0)
Lat1.second: i32 9
Meet:   %122 = add nuw nsw i32 %.14, 1
Adding SSA:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
Visiting SSA:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
VisitInstr:   %115 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %10, i64 %108
Visiting SSA:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
VisitInstr:   %112 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %10, i64 %108
Visiting SSA:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
VisitInstr:   %109 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %10, i64 %108
Visiting SSA:   br i1 %106, label %107, label %123
VisitInstr:   br i1 %106, label %107, label %123
BranchInst:   br i1 %106, label %107, label %123
In BranchInst: -1, 0x0
In AddEdge: 0x558d54623be0, 0x558d54623ee0, 0
In AddEdge: 0x558d54623be0, 0x558d54623ee0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %124 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %124 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %124 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5
VisitInstr:   %125 = fsub double %124, %47
BinaryOp:   %125 = fsub double %124, %47
Check LatCell: 0
In Meet:   %125 = fsub double %124, %47, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = fsub double %124, %47
VisitInstr:   %126 = call double @sin(double noundef %125) #5
Check LatCell: 0
In Meet:   %126 = call double @sin(double noundef %125) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %126 = call double @sin(double noundef %125) #5
VisitInstr:   %127 = call double @llvm.fmuladd.f64(double %36, double %126, double %125)
Check LatCell: 0
In Meet:   %127 = call double @llvm.fmuladd.f64(double %36, double %126, double %125), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %127 = call double @llvm.fmuladd.f64(double %36, double %126, double %125)
VisitInstr:   br label %128
BranchInst:   br label %128
In AddEdge: 0x558d54623df0, 0x558d54626100, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
PHI:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
VisitInstr:   %.0 = phi double [ %127, %123 ], [ %136, %128 ]
PHI:   %.0 = phi double [ %127, %123 ], [ %136, %128 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.0 = phi double [ %127, %123 ], [ %136, %128 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.0 = phi double [ %127, %123 ], [ %136, %128 ]
VisitInstr:   %129 = fsub double %125, %.0
BinaryOp:   %129 = fsub double %125, %.0
Check LatCell: 0
In Meet:   %129 = fsub double %125, %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %129 = fsub double %125, %.0
VisitInstr:   %130 = call double @sin(double noundef %.0) #5
Check LatCell: 0
In Meet:   %130 = call double @sin(double noundef %.0) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %130 = call double @sin(double noundef %.0) #5
VisitInstr:   %131 = call double @llvm.fmuladd.f64(double %36, double %130, double %129)
Check LatCell: 0
In Meet:   %131 = call double @llvm.fmuladd.f64(double %36, double %130, double %129), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %131 = call double @llvm.fmuladd.f64(double %36, double %130, double %129)
VisitInstr:   %132 = call double @cos(double noundef %.0) #5
Check LatCell: 0
In Meet:   %132 = call double @cos(double noundef %.0) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %132 = call double @cos(double noundef %.0) #5
VisitInstr:   %133 = fneg double %36
UnaryOp:   %133 = fneg double %36
Check LatCell: 0
In Meet:   %133 = fneg double %36, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %133 = fneg double %36
VisitInstr:   %134 = call double @llvm.fmuladd.f64(double %133, double %132, double 1.000000e+00)
Check LatCell: 0
In Meet:   %134 = call double @llvm.fmuladd.f64(double %133, double %132, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %134 = call double @llvm.fmuladd.f64(double %133, double %132, double 1.000000e+00)
VisitInstr:   %135 = fdiv double %131, %134
BinaryOp:   %135 = fdiv double %131, %134
Check LatCell: 0
In Meet:   %135 = fdiv double %131, %134, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %135 = fdiv double %131, %134
VisitInstr:   %136 = fadd double %.0, %135
BinaryOp:   %136 = fadd double %.0, %135
Check LatCell: 0
In Meet:   %136 = fadd double %.0, %135, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %136 = fadd double %.0, %135
VisitInstr:   %137 = add nuw nsw i32 %.2, 1
BinaryOp:   %137 = add nuw nsw i32 %.2, 1
Check LatCell: 0
In Meet:   %137 = add nuw nsw i32 %.2, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %137 = add nuw nsw i32 %.2, 1
VisitInstr:   %138 = icmp ugt i32 %.2, 8
CmpInst:   %138 = icmp ugt i32 %.2, 8
Check LatCell: 0
In Meet:   %138 = icmp ugt i32 %.2, 8, Lat1: (1, 0x0), Lat2: (0, 0x558d5461d0b0)
Lat2.second: i1 false
Meet:   %138 = icmp ugt i32 %.2, 8
VisitInstr:   %139 = call double @llvm.fabs.f64(double %135)
Check LatCell: 0
In Meet:   %139 = call double @llvm.fabs.f64(double %135), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %139 = call double @llvm.fabs.f64(double %135)
VisitInstr:   %140 = fcmp olt double %139, 0x3D719799812DEA11
CmpInst:   %140 = fcmp olt double %139, 0x3D719799812DEA11
Check LatCell: 0
In Meet:   %140 = fcmp olt double %139, 0x3D719799812DEA11, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %140 = fcmp olt double %139, 0x3D719799812DEA11
VisitInstr:   %or.cond = select i1 %138, i1 true, i1 %140
Select:   %or.cond = select i1 %138, i1 true, i1 %140
Select LatCond: 0, 0x558d5461d0b0
Select LatTrue: 0, 0x558d5461bbf0
Select LatFals: -1, 0x0
Check LatCell: 0
In Meet:   %or.cond = select i1 %138, i1 true, i1 %140, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %or.cond = select i1 %138, i1 true, i1 %140
VisitInstr:   br i1 %or.cond, label %141, label %128
BranchInst:   br i1 %or.cond, label %141, label %128
In BranchInst: -1, 0x0
In AddEdge: 0x558d54626090, 0x558d546270a0, 0
Adding edge:  -> 
In AddEdge: 0x558d54626090, 0x558d546270a0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %142 = fmul double %103, %104
BinaryOp:   %142 = fmul double %103, %104
Check LatCell: 0
In Meet:   %142 = fmul double %103, %104, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %142 = fmul double %103, %104
VisitInstr:   %143 = call double @llvm.fmuladd.f64(double %100, double %101, double %142)
Check LatCell: 0
In Meet:   %143 = call double @llvm.fmuladd.f64(double %100, double %101, double %142), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %143 = call double @llvm.fmuladd.f64(double %100, double %101, double %142)
VisitInstr:   %144 = fmul double %9, %143
BinaryOp:   %144 = fmul double %9, %143
Check LatCell: 0
In Meet:   %144 = fmul double %9, %143, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %144 = fmul double %9, %143
VisitInstr:   %145 = call double @llvm.fmuladd.f64(double %144, double 0x3E7AD7F29ABCAF48, double %.02)
Check LatCell: 0
In Meet:   %145 = call double @llvm.fmuladd.f64(double %144, double 0x3E7AD7F29ABCAF48, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %145 = call double @llvm.fmuladd.f64(double %144, double 0x3E7AD7F29ABCAF48, double %.02)
VisitInstr:   %146 = call double @llvm.fmuladd.f64(double %53, double %9, double %51)
Check LatCell: 0
In Meet:   %146 = call double @llvm.fmuladd.f64(double %53, double %9, double %51), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %146 = call double @llvm.fmuladd.f64(double %53, double %9, double %51)
VisitInstr:   %147 = fmul double %146, %9
BinaryOp:   %147 = fmul double %146, %9
Check LatCell: 0
In Meet:   %147 = fmul double %146, %9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %147 = fmul double %146, %9
VisitInstr:   %148 = call double @llvm.fmuladd.f64(double %49, double 3.600000e+03, double %147)
Check LatCell: 0
In Meet:   %148 = call double @llvm.fmuladd.f64(double %49, double 3.600000e+03, double %147), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %148 = call double @llvm.fmuladd.f64(double %49, double 3.600000e+03, double %147)
VisitInstr:   %149 = fmul double %148, 0x3ED455A5B2FF8F9D
BinaryOp:   %149 = fmul double %148, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %149 = fmul double %148, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %149 = fmul double %148, 0x3ED455A5B2FF8F9D
VisitInstr:   %150 = fmul double %136, 5.000000e-01
BinaryOp:   %150 = fmul double %136, 5.000000e-01
Check LatCell: 0
In Meet:   %150 = fmul double %136, 5.000000e-01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %150 = fmul double %136, 5.000000e-01
VisitInstr:   %151 = fadd double %36, 1.000000e+00
BinaryOp:   %151 = fadd double %36, 1.000000e+00
Check LatCell: 0
In Meet:   %151 = fadd double %36, 1.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %151 = fadd double %36, 1.000000e+00
VisitInstr:   %152 = fsub double 1.000000e+00, %36
BinaryOp:   %152 = fsub double 1.000000e+00, %36
Check LatCell: 0
In Meet:   %152 = fsub double 1.000000e+00, %36, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %152 = fsub double 1.000000e+00, %36
VisitInstr:   %153 = fdiv double %151, %152
BinaryOp:   %153 = fdiv double %151, %152
Check LatCell: 0
In Meet:   %153 = fdiv double %151, %152, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %153 = fdiv double %151, %152
VisitInstr:   %154 = call double @sqrt(double noundef %153) #5
Check LatCell: 0
In Meet:   %154 = call double @sqrt(double noundef %153) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %154 = call double @sqrt(double noundef %153) #5
VisitInstr:   %155 = call double @sin(double noundef %150) #5
Check LatCell: 0
In Meet:   %155 = call double @sin(double noundef %150) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %155 = call double @sin(double noundef %150) #5
VisitInstr:   %156 = fmul double %154, %155
BinaryOp:   %156 = fmul double %154, %155
Check LatCell: 0
In Meet:   %156 = fmul double %154, %155, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %156 = fmul double %154, %155
VisitInstr:   %157 = call double @cos(double noundef %150) #5
Check LatCell: 0
In Meet:   %157 = call double @cos(double noundef %150) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %157 = call double @cos(double noundef %150) #5
VisitInstr:   %158 = call double @atan2(double noundef %156, double noundef %157) #5
Check LatCell: 0
In Meet:   %158 = call double @atan2(double noundef %156, double noundef %157) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %158 = call double @atan2(double noundef %156, double noundef %157) #5
VisitInstr:   %159 = fmul double %158, 2.000000e+00
BinaryOp:   %159 = fmul double %158, 2.000000e+00
Check LatCell: 0
In Meet:   %159 = fmul double %158, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %159 = fmul double %158, 2.000000e+00
VisitInstr:   %160 = call double @cos(double noundef %136) #5
Check LatCell: 0
In Meet:   %160 = call double @cos(double noundef %136) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %160 = call double @cos(double noundef %136) #5
VisitInstr:   %161 = call double @llvm.fmuladd.f64(double %133, double %160, double 1.000000e+00)
Check LatCell: 0
In Meet:   %161 = call double @llvm.fmuladd.f64(double %133, double %160, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %161 = call double @llvm.fmuladd.f64(double %133, double %160, double 1.000000e+00)
VisitInstr:   %162 = fmul double %145, %161
BinaryOp:   %162 = fmul double %145, %161
Check LatCell: 0
In Meet:   %162 = fmul double %145, %161, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %162 = fmul double %145, %161
VisitInstr:   %163 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %10
GetElementPtr:   %163 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %10
Check LatCell: 0
In Meet:   %163 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %163 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %10
VisitInstr:   %164 = load double, ptr %163, align 8
Check LatCell: 0
In Meet:   %164 = load double, ptr %163, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %164 = load double, ptr %163, align 8
VisitInstr:   %165 = fdiv double 1.000000e+00, %164
BinaryOp:   %165 = fdiv double 1.000000e+00, %164
Check LatCell: 0
In Meet:   %165 = fdiv double 1.000000e+00, %164, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %165 = fdiv double 1.000000e+00, %164
VisitInstr:   %166 = fadd double %165, 1.000000e+00
BinaryOp:   %166 = fadd double %165, 1.000000e+00
Check LatCell: 0
In Meet:   %166 = fadd double %165, 1.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %166 = fadd double %165, 1.000000e+00
VisitInstr:   %167 = fmul double %145, %145
BinaryOp:   %167 = fmul double %145, %145
Check LatCell: 0
In Meet:   %167 = fmul double %145, %145, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %167 = fmul double %145, %145
VisitInstr:   %168 = fmul double %167, %145
BinaryOp:   %168 = fmul double %167, %145
Check LatCell: 0
In Meet:   %168 = fmul double %167, %145, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %168 = fmul double %167, %145
VisitInstr:   %169 = fdiv double %166, %168
BinaryOp:   %169 = fdiv double %166, %168
Check LatCell: 0
In Meet:   %169 = fdiv double %166, %168, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %169 = fdiv double %166, %168
VisitInstr:   %170 = call double @sqrt(double noundef %169) #5
Check LatCell: 0
In Meet:   %170 = call double @sqrt(double noundef %169) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %170 = call double @sqrt(double noundef %169) #5
VisitInstr:   %171 = fmul double %170, 0x3F919D6D51A6B69A
BinaryOp:   %171 = fmul double %170, 0x3F919D6D51A6B69A
Check LatCell: 0
In Meet:   %171 = fmul double %170, 0x3F919D6D51A6B69A, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %171 = fmul double %170, 0x3F919D6D51A6B69A
VisitInstr:   %172 = fmul double %149, 5.000000e-01
BinaryOp:   %172 = fmul double %149, 5.000000e-01
Check LatCell: 0
In Meet:   %172 = fmul double %149, 5.000000e-01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %172 = fmul double %149, 5.000000e-01
VisitInstr:   %173 = call double @sin(double noundef %172) #5
Check LatCell: 0
In Meet:   %173 = call double @sin(double noundef %172) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %173 = call double @sin(double noundef %172) #5
VisitInstr:   %174 = call double @cos(double noundef %64) #5
Check LatCell: 0
In Meet:   %174 = call double @cos(double noundef %64) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %174 = call double @cos(double noundef %64) #5
VisitInstr:   %175 = fmul double %173, %174
BinaryOp:   %175 = fmul double %173, %174
Check LatCell: 0
In Meet:   %175 = fmul double %173, %174, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %175 = fmul double %173, %174
VisitInstr:   %176 = call double @sin(double noundef %64) #5
Check LatCell: 0
In Meet:   %176 = call double @sin(double noundef %64) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %176 = call double @sin(double noundef %64) #5
VisitInstr:   %177 = fmul double %173, %176
BinaryOp:   %177 = fmul double %173, %176
Check LatCell: 0
In Meet:   %177 = fmul double %173, %176, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %177 = fmul double %173, %176
VisitInstr:   %178 = fadd double %159, %47
BinaryOp:   %178 = fadd double %159, %47
Check LatCell: 0
In Meet:   %178 = fadd double %159, %47, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %178 = fadd double %159, %47
VisitInstr:   %179 = call double @sin(double noundef %178) #5
Check LatCell: 0
In Meet:   %179 = call double @sin(double noundef %178) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %179 = call double @sin(double noundef %178) #5
VisitInstr:   %180 = call double @cos(double noundef %178) #5
Check LatCell: 0
In Meet:   %180 = call double @cos(double noundef %178) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %180 = call double @cos(double noundef %178) #5
VisitInstr:   %181 = fneg double %175
UnaryOp:   %181 = fneg double %175
Check LatCell: 0
In Meet:   %181 = fneg double %175, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %181 = fneg double %175
VisitInstr:   %182 = fmul double %179, %181
BinaryOp:   %182 = fmul double %179, %181
Check LatCell: 0
In Meet:   %182 = fmul double %179, %181, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %182 = fmul double %179, %181
VisitInstr:   %183 = call double @llvm.fmuladd.f64(double %177, double %180, double %182)
Check LatCell: 0
In Meet:   %183 = call double @llvm.fmuladd.f64(double %177, double %180, double %182), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %183 = call double @llvm.fmuladd.f64(double %177, double %180, double %182)
VisitInstr:   %184 = fmul double %183, 2.000000e+00
BinaryOp:   %184 = fmul double %183, 2.000000e+00
Check LatCell: 0
In Meet:   %184 = fmul double %183, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %184 = fmul double %183, 2.000000e+00
VisitInstr:   %185 = call double @llvm.fmuladd.f64(double %133, double %36, double 1.000000e+00)
Check LatCell: 0
In Meet:   %185 = call double @llvm.fmuladd.f64(double %133, double %36, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %185 = call double @llvm.fmuladd.f64(double %133, double %36, double 1.000000e+00)
VisitInstr:   %186 = call double @sqrt(double noundef %185) #5
Check LatCell: 0
In Meet:   %186 = call double @sqrt(double noundef %185) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %186 = call double @sqrt(double noundef %185) #5
VisitInstr:   %187 = fdiv double %145, %186
BinaryOp:   %187 = fdiv double %145, %186
Check LatCell: 0
In Meet:   %187 = fdiv double %145, %186, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %187 = fdiv double %145, %186
VisitInstr:   %188 = call double @cos(double noundef %172) #5
Check LatCell: 0
In Meet:   %188 = call double @cos(double noundef %172) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %188 = call double @cos(double noundef %172) #5
VisitInstr:   %189 = call double @sin(double noundef %47) #5
Check LatCell: 0
In Meet:   %189 = call double @sin(double noundef %47) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %189 = call double @sin(double noundef %47) #5
VisitInstr:   %190 = call double @llvm.fmuladd.f64(double %36, double %189, double %179)
Check LatCell: 0
In Meet:   %190 = call double @llvm.fmuladd.f64(double %36, double %189, double %179), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %190 = call double @llvm.fmuladd.f64(double %36, double %189, double %179)
VisitInstr:   %191 = fmul double %190, %187
BinaryOp:   %191 = fmul double %190, %187
Check LatCell: 0
In Meet:   %191 = fmul double %190, %187, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %191 = fmul double %190, %187
VisitInstr:   %192 = call double @cos(double noundef %47) #5
Check LatCell: 0
In Meet:   %192 = call double @cos(double noundef %47) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %192 = call double @cos(double noundef %47) #5
VisitInstr:   %193 = call double @llvm.fmuladd.f64(double %36, double %192, double %180)
Check LatCell: 0
In Meet:   %193 = call double @llvm.fmuladd.f64(double %36, double %192, double %180), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %193 = call double @llvm.fmuladd.f64(double %36, double %192, double %180)
VisitInstr:   %194 = fmul double %193, %187
BinaryOp:   %194 = fmul double %193, %187
Check LatCell: 0
In Meet:   %194 = fmul double %193, %187, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %194 = fmul double %193, %187
VisitInstr:   %195 = fmul double %177, 2.000000e+00
BinaryOp:   %195 = fmul double %177, 2.000000e+00
Check LatCell: 0
In Meet:   %195 = fmul double %177, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %195 = fmul double %177, 2.000000e+00
VisitInstr:   %196 = fmul double %195, %175
BinaryOp:   %196 = fmul double %195, %175
Check LatCell: 0
In Meet:   %196 = fmul double %195, %175, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %196 = fmul double %195, %175
VisitInstr:   %197 = fneg double %184
UnaryOp:   %197 = fneg double %184
Check LatCell: 0
In Meet:   %197 = fneg double %184, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %197 = fneg double %184
VisitInstr:   %198 = call double @llvm.fmuladd.f64(double %197, double %177, double %180)
Check LatCell: 0
In Meet:   %198 = call double @llvm.fmuladd.f64(double %197, double %177, double %180), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %198 = call double @llvm.fmuladd.f64(double %197, double %177, double %180)
VisitInstr:   %199 = fmul double %162, %198
BinaryOp:   %199 = fmul double %162, %198
Check LatCell: 0
In Meet:   %199 = fmul double %162, %198, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %199 = fmul double %162, %198
VisitInstr:   %200 = call double @llvm.fmuladd.f64(double %184, double %175, double %179)
Check LatCell: 0
In Meet:   %200 = call double @llvm.fmuladd.f64(double %184, double %175, double %179), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %200 = call double @llvm.fmuladd.f64(double %184, double %175, double %179)
VisitInstr:   %201 = fmul double %162, %200
BinaryOp:   %201 = fmul double %162, %200
Check LatCell: 0
In Meet:   %201 = fmul double %162, %200, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %201 = fmul double %162, %200
VisitInstr:   %202 = fmul double %188, %197
BinaryOp:   %202 = fmul double %188, %197
Check LatCell: 0
In Meet:   %202 = fmul double %188, %197, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %202 = fmul double %188, %197
VisitInstr:   %203 = fmul double %162, %202
BinaryOp:   %203 = fmul double %162, %202
Check LatCell: 0
In Meet:   %203 = fmul double %162, %202, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %203 = fmul double %162, %202
VisitInstr:   store double %199, ptr %2, align 8
Check LatCell: 0
In Meet:   store double %199, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %199, ptr %2, align 8
VisitInstr:   %204 = fmul double %203, 0xBFD9752E50F4B399
BinaryOp:   %204 = fmul double %203, 0xBFD9752E50F4B399
Check LatCell: 0
In Meet:   %204 = fmul double %203, 0xBFD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %204 = fmul double %203, 0xBFD9752E50F4B399
VisitInstr:   %205 = call double @llvm.fmuladd.f64(double %201, double 0x3FED5C0357681EF3, double %204)
Check LatCell: 0
In Meet:   %205 = call double @llvm.fmuladd.f64(double %201, double 0x3FED5C0357681EF3, double %204), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %205 = call double @llvm.fmuladd.f64(double %201, double 0x3FED5C0357681EF3, double %204)
VisitInstr:   %206 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
GetElementPtr:   %206 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
Check LatCell: 0
In Meet:   %206 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %206 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
VisitInstr:   store double %205, ptr %206, align 8
Check LatCell: 0
In Meet:   store double %205, ptr %206, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %205, ptr %206, align 8
VisitInstr:   %207 = fmul double %203, 0x3FED5C0357681EF3
BinaryOp:   %207 = fmul double %203, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %207 = fmul double %203, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %207 = fmul double %203, 0x3FED5C0357681EF3
VisitInstr:   %208 = call double @llvm.fmuladd.f64(double %201, double 0x3FD9752E50F4B399, double %207)
Check LatCell: 0
In Meet:   %208 = call double @llvm.fmuladd.f64(double %201, double 0x3FD9752E50F4B399, double %207), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %208 = call double @llvm.fmuladd.f64(double %201, double 0x3FD9752E50F4B399, double %207)
VisitInstr:   %209 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
GetElementPtr:   %209 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
Check LatCell: 0
In Meet:   %209 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %209 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
VisitInstr:   store double %208, ptr %209, align 8
Check LatCell: 0
In Meet:   store double %208, ptr %209, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %208, ptr %209, align 8
VisitInstr:   %210 = call double @llvm.fmuladd.f64(double %195, double %177, double -1.000000e+00)
Check LatCell: 0
In Meet:   %210 = call double @llvm.fmuladd.f64(double %195, double %177, double -1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %210 = call double @llvm.fmuladd.f64(double %195, double %177, double -1.000000e+00)
VisitInstr:   %211 = fmul double %196, %194
BinaryOp:   %211 = fmul double %196, %194
Check LatCell: 0
In Meet:   %211 = fmul double %196, %194, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %211 = fmul double %196, %194
VisitInstr:   %212 = call double @llvm.fmuladd.f64(double %210, double %191, double %211)
Check LatCell: 0
In Meet:   %212 = call double @llvm.fmuladd.f64(double %210, double %191, double %211), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %212 = call double @llvm.fmuladd.f64(double %210, double %191, double %211)
VisitInstr:   %213 = fmul double %171, %212
BinaryOp:   %213 = fmul double %171, %212
Check LatCell: 0
In Meet:   %213 = fmul double %171, %212, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %213 = fmul double %171, %212
VisitInstr:   %214 = fmul double %175, -2.000000e+00
BinaryOp:   %214 = fmul double %175, -2.000000e+00
Check LatCell: 0
In Meet:   %214 = fmul double %175, -2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %214 = fmul double %175, -2.000000e+00
VisitInstr:   %215 = call double @llvm.fmuladd.f64(double %214, double %175, double 1.000000e+00)
Check LatCell: 0
In Meet:   %215 = call double @llvm.fmuladd.f64(double %214, double %175, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %215 = call double @llvm.fmuladd.f64(double %214, double %175, double 1.000000e+00)
VisitInstr:   %216 = fneg double %196
UnaryOp:   %216 = fneg double %196
Check LatCell: 0
In Meet:   %216 = fneg double %196, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %216 = fneg double %196
VisitInstr:   %217 = fmul double %191, %216
BinaryOp:   %217 = fmul double %191, %216
Check LatCell: 0
In Meet:   %217 = fmul double %191, %216, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %217 = fmul double %191, %216
VisitInstr:   %218 = call double @llvm.fmuladd.f64(double %215, double %194, double %217)
Check LatCell: 0
In Meet:   %218 = call double @llvm.fmuladd.f64(double %215, double %194, double %217), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %218 = call double @llvm.fmuladd.f64(double %215, double %194, double %217)
VisitInstr:   %219 = fmul double %171, %218
BinaryOp:   %219 = fmul double %171, %218
Check LatCell: 0
In Meet:   %219 = fmul double %171, %218, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %219 = fmul double %171, %218
VisitInstr:   %220 = fmul double %188, 2.000000e+00
BinaryOp:   %220 = fmul double %188, 2.000000e+00
Check LatCell: 0
In Meet:   %220 = fmul double %188, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %220 = fmul double %188, 2.000000e+00
VisitInstr:   %221 = fmul double %175, %194
BinaryOp:   %221 = fmul double %175, %194
Check LatCell: 0
In Meet:   %221 = fmul double %175, %194, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %221 = fmul double %175, %194
VisitInstr:   %222 = call double @llvm.fmuladd.f64(double %177, double %191, double %221)
Check LatCell: 0
In Meet:   %222 = call double @llvm.fmuladd.f64(double %177, double %191, double %221), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %222 = call double @llvm.fmuladd.f64(double %177, double %191, double %221)
VisitInstr:   %223 = fmul double %220, %222
BinaryOp:   %223 = fmul double %220, %222
Check LatCell: 0
In Meet:   %223 = fmul double %220, %222, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %223 = fmul double %220, %222
VisitInstr:   %224 = fmul double %171, %223
BinaryOp:   %224 = fmul double %171, %223
Check LatCell: 0
In Meet:   %224 = fmul double %171, %223, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %224 = fmul double %171, %223
VisitInstr:   %225 = getelementptr inbounds [3 x double], ptr %2, i64 1
GetElementPtr:   %225 = getelementptr inbounds [3 x double], ptr %2, i64 1
Check LatCell: 0
In Meet:   %225 = getelementptr inbounds [3 x double], ptr %2, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %225 = getelementptr inbounds [3 x double], ptr %2, i64 1
VisitInstr:   store double %213, ptr %225, align 8
Check LatCell: 0
In Meet:   store double %213, ptr %225, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %213, ptr %225, align 8
VisitInstr:   %226 = fmul double %224, 0xBFD9752E50F4B399
BinaryOp:   %226 = fmul double %224, 0xBFD9752E50F4B399
Check LatCell: 0
In Meet:   %226 = fmul double %224, 0xBFD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %226 = fmul double %224, 0xBFD9752E50F4B399
VisitInstr:   %227 = call double @llvm.fmuladd.f64(double %219, double 0x3FED5C0357681EF3, double %226)
Check LatCell: 0
In Meet:   %227 = call double @llvm.fmuladd.f64(double %219, double 0x3FED5C0357681EF3, double %226), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %227 = call double @llvm.fmuladd.f64(double %219, double 0x3FED5C0357681EF3, double %226)
VisitInstr:   %228 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 1
GetElementPtr:   %228 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 1
Check LatCell: 0
In Meet:   %228 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %228 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 1
VisitInstr:   store double %227, ptr %228, align 8
Check LatCell: 0
In Meet:   store double %227, ptr %228, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %227, ptr %228, align 8
VisitInstr:   %229 = fmul double %224, 0x3FED5C0357681EF3
BinaryOp:   %229 = fmul double %224, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %229 = fmul double %224, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %229 = fmul double %224, 0x3FED5C0357681EF3
VisitInstr:   %230 = call double @llvm.fmuladd.f64(double %219, double 0x3FD9752E50F4B399, double %229)
Check LatCell: 0
In Meet:   %230 = call double @llvm.fmuladd.f64(double %219, double 0x3FD9752E50F4B399, double %229), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %230 = call double @llvm.fmuladd.f64(double %219, double 0x3FD9752E50F4B399, double %229)
VisitInstr:   %231 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 2
GetElementPtr:   %231 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 2
Check LatCell: 0
In Meet:   %231 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %231 = getelementptr inbounds [3 x double], ptr %2, i64 1, i64 2
VisitInstr:   store double %230, ptr %231, align 8
Check LatCell: 0
In Meet:   store double %230, ptr %231, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %230, ptr %231, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
PHI:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
PHI LatOp: 0, 0x558d546198b0
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
Adding SSA:   %138 = icmp ugt i32 %.2, 8
Adding SSA:   %137 = add nuw nsw i32 %.2, 1
VisitInstr:   %.0 = phi double [ %127, %123 ], [ %136, %128 ]
VisitInstr:   %129 = fsub double %125, %.0
VisitInstr:   %130 = call double @sin(double noundef %.0) #5
VisitInstr:   %131 = call double @llvm.fmuladd.f64(double %36, double %130, double %129)
VisitInstr:   %132 = call double @cos(double noundef %.0) #5
VisitInstr:   %133 = fneg double %36
VisitInstr:   %134 = call double @llvm.fmuladd.f64(double %133, double %132, double 1.000000e+00)
VisitInstr:   %135 = fdiv double %131, %134
VisitInstr:   %136 = fadd double %.0, %135
VisitInstr:   %137 = add nuw nsw i32 %.2, 1
BinaryOp:   %137 = add nuw nsw i32 %.2, 1
Check LatCell: 1
In Meet:   %137 = add nuw nsw i32 %.2, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %137 = add nuw nsw i32 %.2, 1
Adding SSA:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
VisitInstr:   %138 = icmp ugt i32 %.2, 8
CmpInst:   %138 = icmp ugt i32 %.2, 8
Check LatCell: 1
In Meet:   %138 = icmp ugt i32 %.2, 8, Lat1: (0, 0x558d5461d0b0), Lat2: (-1, 0x0)
Lat1.second: i1 false
Meet:   %138 = icmp ugt i32 %.2, 8
Adding SSA:   %or.cond = select i1 %138, i1 true, i1 %140
VisitInstr:   %139 = call double @llvm.fabs.f64(double %135)
VisitInstr:   %140 = fcmp olt double %139, 0x3D719799812DEA11
VisitInstr:   %or.cond = select i1 %138, i1 true, i1 %140
VisitInstr:   br i1 %or.cond, label %141, label %128
BranchInst:   br i1 %or.cond, label %141, label %128
In BranchInst: -1, 0x0
In AddEdge: 0x558d54626090, 0x558d546270a0, 0
In AddEdge: 0x558d54626090, 0x558d546270a0, 1
Visiting SSA:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
VisitInstr:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
Visiting SSA:   %138 = icmp ugt i32 %.2, 8
VisitInstr:   %138 = icmp ugt i32 %.2, 8
Visiting SSA:   %137 = add nuw nsw i32 %.2, 1
VisitInstr:   %137 = add nuw nsw i32 %.2, 1
Visiting SSA:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
VisitInstr:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
Visiting SSA:   %or.cond = select i1 %138, i1 true, i1 %140
VisitInstr:   %or.cond = select i1 %138, i1 true, i1 %140
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on planetpv
******************************************************
UnitLoopAnalysis running on planetpv
[LoopLoopAnalysis] parent loop header is:   %.03 = phi i32 [ 0, %3 ], [ %94, %68 ]
[LoopLoopAnalysis] parent loop header is:   %.14 = phi i32 [ 8, %95 ], [ %122, %107 ]
[LoopLoopAnalysis] parent loop header is:   %.2 = phi i32 [ 0, %123 ], [ %137, %128 ]
Instruction to be moved:   %133 = fneg double %36
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 1
UnitSCCP running on radecdist
Visiting BB: 
VisitInstr:   %3 = load double, ptr %0, align 8
Check LatCell: 0
In Meet:   %3 = load double, ptr %0, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = load double, ptr %0, align 8
VisitInstr:   %4 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 1
GetElementPtr:   %4 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 1
Check LatCell: 0
In Meet:   %4 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 1
VisitInstr:   %5 = load double, ptr %4, align 8
Check LatCell: 0
In Meet:   %5 = load double, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = load double, ptr %4, align 8
VisitInstr:   %6 = fmul double %5, %5
BinaryOp:   %6 = fmul double %5, %5
Check LatCell: 0
In Meet:   %6 = fmul double %5, %5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = fmul double %5, %5
VisitInstr:   %7 = call double @llvm.fmuladd.f64(double %3, double %3, double %6)
Check LatCell: 0
In Meet:   %7 = call double @llvm.fmuladd.f64(double %3, double %3, double %6), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = call double @llvm.fmuladd.f64(double %3, double %3, double %6)
VisitInstr:   %8 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
GetElementPtr:   %8 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
VisitInstr:   %9 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %9 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load double, ptr %8, align 8
VisitInstr:   %10 = call double @llvm.fmuladd.f64(double %9, double %9, double %7)
Check LatCell: 0
In Meet:   %10 = call double @llvm.fmuladd.f64(double %9, double %9, double %7), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = call double @llvm.fmuladd.f64(double %9, double %9, double %7)
VisitInstr:   %11 = call double @sqrt(double noundef %10) #5
Check LatCell: 0
In Meet:   %11 = call double @sqrt(double noundef %10) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = call double @sqrt(double noundef %10) #5
VisitInstr:   %12 = getelementptr inbounds double, ptr %1, i64 2
GetElementPtr:   %12 = getelementptr inbounds double, ptr %1, i64 2
Check LatCell: 0
In Meet:   %12 = getelementptr inbounds double, ptr %1, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = getelementptr inbounds double, ptr %1, i64 2
VisitInstr:   store double %11, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %11, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %11, ptr %12, align 8
VisitInstr:   %13 = load double, ptr %4, align 8
Check LatCell: 0
In Meet:   %13 = load double, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load double, ptr %4, align 8
VisitInstr:   %14 = load double, ptr %0, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %0, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %0, align 8
VisitInstr:   %15 = call double @atan2(double noundef %13, double noundef %14) #5
Check LatCell: 0
In Meet:   %15 = call double @atan2(double noundef %13, double noundef %14) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = call double @atan2(double noundef %13, double noundef %14) #5
VisitInstr:   %16 = fmul double %15, 0x400E8EC8A4AEACC4
BinaryOp:   %16 = fmul double %15, 0x400E8EC8A4AEACC4
Check LatCell: 0
In Meet:   %16 = fmul double %15, 0x400E8EC8A4AEACC4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = fmul double %15, 0x400E8EC8A4AEACC4
VisitInstr:   store double %16, ptr %1, align 8
Check LatCell: 0
In Meet:   store double %16, ptr %1, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %16, ptr %1, align 8
VisitInstr:   %17 = fcmp olt double %16, 0.000000e+00
CmpInst:   %17 = fcmp olt double %16, 0.000000e+00
Check LatCell: 0
In Meet:   %17 = fcmp olt double %16, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = fcmp olt double %16, 0.000000e+00
VisitInstr:   br i1 %17, label %18, label %20
BranchInst:   br i1 %17, label %18, label %20
In BranchInst: -1, 0x0
In AddEdge: 0x558d5462f0b0, 0x558d546312c0, 0
Adding edge:  -> 
In AddEdge: 0x558d5462f0b0, 0x558d546312c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %19 = fadd double %16, 2.400000e+01
BinaryOp:   %19 = fadd double %16, 2.400000e+01
Check LatCell: 0
In Meet:   %19 = fadd double %16, 2.400000e+01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = fadd double %16, 2.400000e+01
VisitInstr:   store double %19, ptr %1, align 8
Check LatCell: 0
In Meet:   store double %19, ptr %1, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %19, ptr %1, align 8
VisitInstr:   br label %20
BranchInst:   br label %20
In AddEdge: 0x558d54631140, 0x558d546315d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %21 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %21 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = load double, ptr %8, align 8
VisitInstr:   %22 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %12, align 8
VisitInstr:   %23 = fdiv double %21, %22
BinaryOp:   %23 = fdiv double %21, %22
Check LatCell: 0
In Meet:   %23 = fdiv double %21, %22, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = fdiv double %21, %22
VisitInstr:   %24 = call double @asin(double noundef %23) #5
Check LatCell: 0
In Meet:   %24 = call double @asin(double noundef %23) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = call double @asin(double noundef %23) #5
VisitInstr:   %25 = fmul double %24, 0x404CA5DC1A63C1F8
BinaryOp:   %25 = fmul double %24, 0x404CA5DC1A63C1F8
Check LatCell: 0
In Meet:   %25 = fmul double %24, 0x404CA5DC1A63C1F8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = fmul double %24, 0x404CA5DC1A63C1F8
VisitInstr:   %26 = getelementptr inbounds double, ptr %1, i64 1
GetElementPtr:   %26 = getelementptr inbounds double, ptr %1, i64 1
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds double, ptr %1, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds double, ptr %1, i64 1
VisitInstr:   store double %25, ptr %26, align 8
Check LatCell: 0
In Meet:   store double %25, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %25, ptr %26, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %21 = load double, ptr %8, align 8
VisitInstr:   %22 = load double, ptr %12, align 8
VisitInstr:   %23 = fdiv double %21, %22
VisitInstr:   %24 = call double @asin(double noundef %23) #5
VisitInstr:   %25 = fmul double %24, 0x404CA5DC1A63C1F8
VisitInstr:   %26 = getelementptr inbounds double, ptr %1, i64 1
VisitInstr:   store double %25, ptr %26, align 8
VisitInstr:   ret void
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on radecdist
******************************************************
UnitLoopAnalysis running on radecdist
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 1
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = alloca [2 x double], align 16
Check LatCell: 0
In Meet:   %3 = alloca [2 x double], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca [2 x double], align 16
VisitInstr:   %4 = alloca [2 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %4 = alloca [2 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca [2 x [3 x double]], align 16
VisitInstr:   %5 = alloca [8 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %5 = alloca [8 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca [8 x [3 x double]], align 16
VisitInstr:   %6 = icmp sgt i32 %0, 1
CmpInst:   %6 = icmp sgt i32 %0, 1
Check LatCell: 0
In Meet:   %6 = icmp sgt i32 %0, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = icmp sgt i32 %0, 1
VisitInstr:   br i1 %6, label %7, label %15
BranchInst:   br i1 %6, label %7, label %15
In BranchInst: -1, 0x0
In AddEdge: 0x558d54632070, 0x558d54632a60, 0
Adding edge:  -> 
In AddEdge: 0x558d54632070, 0x558d54632a60, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
PHI:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 0
In Meet:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ], Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
VisitInstr:   %8 = icmp slt i32 %.02, %0
CmpInst:   %8 = icmp slt i32 %.02, %0
Check LatCell: 0
In Meet:   %8 = icmp slt i32 %.02, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = icmp slt i32 %.02, %0
VisitInstr:   br i1 %8, label %9, label %15
BranchInst:   br i1 %8, label %9, label %15
In BranchInst: -1, 0x0
In AddEdge: 0x558d54632b40, 0x558d54632e20, 0
Adding edge:  -> 
In AddEdge: 0x558d54632b40, 0x558d54632e20, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %16
BranchInst:   br label %16
In AddEdge: 0x558d54632970, 0x558d546338e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %10 = getelementptr inbounds ptr, ptr %1, i64 1
GetElementPtr:   %10 = getelementptr inbounds ptr, ptr %1, i64 1
Check LatCell: 0
In Meet:   %10 = getelementptr inbounds ptr, ptr %1, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = getelementptr inbounds ptr, ptr %1, i64 1
VisitInstr:   %11 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %11 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = load ptr, ptr %10, align 8
VisitInstr:   %12 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %11, ptr noundef nonnull dereferenceable(4) @.str) #5
Check LatCell: 0
In Meet:   %12 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %11, ptr noundef nonnull dereferenceable(4) @.str) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %11, ptr noundef nonnull dereferenceable(4) @.str) #5
VisitInstr:   %.not = icmp eq i32 %12, 0
CmpInst:   %.not = icmp eq i32 %12, 0
Check LatCell: 0
In Meet:   %.not = icmp eq i32 %12, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.not = icmp eq i32 %12, 0
VisitInstr:   br i1 %.not, label %15, label %13
BranchInst:   br i1 %.not, label %15, label %13
In BranchInst: -1, 0x0
In AddEdge: 0x558d54632ce0, 0x558d546332f0, 0
Adding edge:  -> 
In AddEdge: 0x558d54632ce0, 0x558d546332f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %16
BranchInst:   br label %16
In AddEdge: 0x558d54632970, 0x558d546338e0, 0
Visiting BB: 
VisitInstr:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
PHI:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
VisitInstr:   %17 = icmp ult i32 %.13, 20
CmpInst:   %17 = icmp ult i32 %.13, 20
Check LatCell: 0
In Meet:   %17 = icmp ult i32 %.13, 20, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %17 = icmp ult i32 %.13, 20
VisitInstr:   br i1 %17, label %18, label %35
BranchInst:   br i1 %17, label %18, label %35
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d54633870, 0x558d54633b60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %14 = add nuw nsw i32 %.02, 1
BinaryOp:   %14 = add nuw nsw i32 %.02, 1
Check LatCell: 0
In Meet:   %14 = add nuw nsw i32 %.02, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54639240)
Lat2.second: i32 2
Meet:   %14 = add nuw nsw i32 %.02, 1
Adding SSA:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
VisitInstr:   br label %7, !llvm.loop !6
BranchInst:   br label %7, !llvm.loop !6
In AddEdge: 0x558d54633470, 0x558d546336e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store double 0x4142B42C80000000, ptr %3, align 16
Check LatCell: 0
In Meet:   store double 0x4142B42C80000000, ptr %3, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0x4142B42C80000000, ptr %3, align 16
VisitInstr:   %19 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
GetElementPtr:   %19 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
Check LatCell: 0
In Meet:   %19 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
VisitInstr:   store double 0.000000e+00, ptr %19, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %19, align 8
VisitInstr:   br label %20
BranchInst:   br label %20
In AddEdge: 0x558d54633a60, 0x558d54633f50, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
PHI:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
VisitInstr:   %21 = icmp ult i32 %.01, 36525
CmpInst:   %21 = icmp ult i32 %.01, 36525
Check LatCell: 0
In Meet:   %21 = icmp ult i32 %.01, 36525, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %21 = icmp ult i32 %.01, 36525
VisitInstr:   br i1 %21, label %22, label %33
BranchInst:   br i1 %21, label %22, label %33
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d54633ee0, 0x558d54634210, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %23 = load double, ptr %3, align 16
Check LatCell: 0
In Meet:   %23 = load double, ptr %3, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load double, ptr %3, align 16
VisitInstr:   %24 = fadd double %23, 1.000000e+00
BinaryOp:   %24 = fadd double %23, 1.000000e+00
Check LatCell: 0
In Meet:   %24 = fadd double %23, 1.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = fadd double %23, 1.000000e+00
VisitInstr:   store double %24, ptr %3, align 16
Check LatCell: 0
In Meet:   store double %24, ptr %3, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %24, ptr %3, align 16
VisitInstr:   br label %25
BranchInst:   br label %25
In AddEdge: 0x558d546340d0, 0x558d546345b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
PHI:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
VisitInstr:   %26 = icmp ult i32 %.0, 8
CmpInst:   %26 = icmp ult i32 %.0, 8
Check LatCell: 0
In Meet:   %26 = icmp ult i32 %.0, 8, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %26 = icmp ult i32 %.0, 8
VisitInstr:   br i1 %26, label %27, label %31
BranchInst:   br i1 %26, label %27, label %31
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d54634540, 0x558d54634840, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4)
Check LatCell: 0
In Meet:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4)
VisitInstr:   %28 = zext i32 %.0 to i64
UnaryOp:   %28 = zext i32 %.0 to i64
Check LatCell: 0
In Meet:   %28 = zext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x558d5461a050)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %28 = zext i32 %.0 to i64
VisitInstr:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
GetElementPtr:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
VisitInstr:   call void @radecdist(ptr noundef nonnull %4, ptr noundef nonnull %29)
Check LatCell: 0
In Meet:   call void @radecdist(ptr noundef nonnull %4, ptr noundef nonnull %29), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @radecdist(ptr noundef nonnull %4, ptr noundef nonnull %29)
VisitInstr:   %30 = add nuw nsw i32 %.0, 1
BinaryOp:   %30 = add nuw nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %30 = add nuw nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %30 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
VisitInstr:   br label %25, !llvm.loop !8
BranchInst:   br label %25, !llvm.loop !8
In AddEdge: 0x558d54634700, 0x558d54635280, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
VisitInstr:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
PHI:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
PHI LatOp: 0, 0x558d54639240
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ], Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
Adding SSA:   %14 = add nuw nsw i32 %.02, 1
Adding SSA:   %8 = icmp slt i32 %.02, %0
Visiting SSA:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
VisitInstr:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
PHI:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
PHI LatOp: 0, 0x558d546198b0
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
Adding SSA:   %28 = zext i32 %.0 to i64
Adding SSA:   %26 = icmp ult i32 %.0, 8
Adding SSA:   %30 = add nuw nsw i32 %.0, 1
Adding SSA:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4)
Visiting SSA:   %14 = add nuw nsw i32 %.02, 1
VisitInstr:   %14 = add nuw nsw i32 %.02, 1
BinaryOp:   %14 = add nuw nsw i32 %.02, 1
Check LatCell: 1
In Meet:   %14 = add nuw nsw i32 %.02, 1, Lat1: (0, 0x558d54639240), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %14 = add nuw nsw i32 %.02, 1
Adding SSA:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
Visiting SSA:   %8 = icmp slt i32 %.02, %0
VisitInstr:   %8 = icmp slt i32 %.02, %0
Visiting SSA:   %28 = zext i32 %.0 to i64
VisitInstr:   %28 = zext i32 %.0 to i64
UnaryOp:   %28 = zext i32 %.0 to i64
Check LatCell: 1
In Meet:   %28 = zext i32 %.0 to i64, Lat1: (0, 0x558d5461a050), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %28 = zext i32 %.0 to i64
Adding SSA:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
Visiting SSA:   %26 = icmp ult i32 %.0, 8
VisitInstr:   %26 = icmp ult i32 %.0, 8
CmpInst:   %26 = icmp ult i32 %.0, 8
Check LatCell: 1
In Meet:   %26 = icmp ult i32 %.0, 8, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %26 = icmp ult i32 %.0, 8
Adding SSA:   br i1 %26, label %27, label %31
Visiting SSA:   %30 = add nuw nsw i32 %.0, 1
VisitInstr:   %30 = add nuw nsw i32 %.0, 1
BinaryOp:   %30 = add nuw nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %30 = add nuw nsw i32 %.0, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %30 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
Visiting SSA:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4)
VisitInstr:   call void @planetpv(ptr noundef nonnull %3, i32 noundef %.0, ptr noundef nonnull %4)
Visiting SSA:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
VisitInstr:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
Visiting SSA:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
VisitInstr:   %29 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %28
Visiting SSA:   br i1 %26, label %27, label %31
VisitInstr:   br i1 %26, label %27, label %31
BranchInst:   br i1 %26, label %27, label %31
In BranchInst: -1, 0x0
In AddEdge: 0x558d54634540, 0x558d54634840, 0
In AddEdge: 0x558d54634540, 0x558d54634840, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %32 = add nuw nsw i32 %.01, 1
BinaryOp:   %32 = add nuw nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %32 = add nuw nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %32 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
VisitInstr:   br label %20, !llvm.loop !9
BranchInst:   br label %20, !llvm.loop !9
In AddEdge: 0x558d54635350, 0x558d546355c0, 0
Adding edge:  -> 
Visiting SSA:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
VisitInstr:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
Visiting SSA:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
VisitInstr:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
PHI:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
PHI LatOp: 0, 0x558d546198b0
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
Adding SSA:   %21 = icmp ult i32 %.01, 36525
Adding SSA:   %32 = add nuw nsw i32 %.01, 1
Visiting SSA:   %21 = icmp ult i32 %.01, 36525
VisitInstr:   %21 = icmp ult i32 %.01, 36525
CmpInst:   %21 = icmp ult i32 %.01, 36525
Check LatCell: 1
In Meet:   %21 = icmp ult i32 %.01, 36525, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %21 = icmp ult i32 %.01, 36525
Adding SSA:   br i1 %21, label %22, label %33
Visiting SSA:   %32 = add nuw nsw i32 %.01, 1
VisitInstr:   %32 = add nuw nsw i32 %.01, 1
BinaryOp:   %32 = add nuw nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %32 = add nuw nsw i32 %.01, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %32 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
Visiting SSA:   br i1 %21, label %22, label %33
VisitInstr:   br i1 %21, label %22, label %33
BranchInst:   br i1 %21, label %22, label %33
In BranchInst: -1, 0x0
In AddEdge: 0x558d54633ee0, 0x558d54634210, 0
In AddEdge: 0x558d54633ee0, 0x558d54634210, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %34 = add nuw nsw i32 %.13, 1
BinaryOp:   %34 = add nuw nsw i32 %.13, 1
Check LatCell: 0
In Meet:   %34 = add nuw nsw i32 %.13, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %34 = add nuw nsw i32 %.13, 1
Adding SSA:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
VisitInstr:   br label %16, !llvm.loop !10
BranchInst:   br label %16, !llvm.loop !10
In AddEdge: 0x558d54635690, 0x558d54635900, 0
Adding edge:  -> 
Visiting SSA:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
VisitInstr:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
Visiting SSA:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
VisitInstr:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
PHI:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
PHI LatOp: 0, 0x558d546198b0
PHI LatOp: 0, 0x558d54605c50
Check LatCell: 1
In Meet:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
Adding SSA:   %17 = icmp ult i32 %.13, 20
Adding SSA:   %34 = add nuw nsw i32 %.13, 1
Visiting SSA:   %17 = icmp ult i32 %.13, 20
VisitInstr:   %17 = icmp ult i32 %.13, 20
CmpInst:   %17 = icmp ult i32 %.13, 20
Check LatCell: 1
In Meet:   %17 = icmp ult i32 %.13, 20, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %17 = icmp ult i32 %.13, 20
Adding SSA:   br i1 %17, label %18, label %35
Visiting SSA:   %34 = add nuw nsw i32 %.13, 1
VisitInstr:   %34 = add nuw nsw i32 %.13, 1
BinaryOp:   %34 = add nuw nsw i32 %.13, 1
Check LatCell: 1
In Meet:   %34 = add nuw nsw i32 %.13, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %34 = add nuw nsw i32 %.13, 1
Adding SSA:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
Visiting SSA:   br i1 %17, label %18, label %35
VisitInstr:   br i1 %17, label %18, label %35
BranchInst:   br i1 %17, label %18, label %35
In BranchInst: -1, 0x0
In AddEdge: 0x558d54633870, 0x558d54633b60, 0
In AddEdge: 0x558d54633870, 0x558d54633b60, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
PHI:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 0
In Meet:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ], Lat1: (1, 0x0), Lat2: (0, 0x558d546198b0)
Lat2.second: i32 0
Meet:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
VisitInstr:   %36 = icmp ult i32 %.1, 8
CmpInst:   %36 = icmp ult i32 %.1, 8
Check LatCell: 0
In Meet:   %36 = icmp ult i32 %.1, 8, Lat1: (1, 0x0), Lat2: (0, 0x558d5461bbf0)
Lat2.second: i1 true
Meet:   %36 = icmp ult i32 %.1, 8
VisitInstr:   br i1 %36, label %37, label %47
BranchInst:   br i1 %36, label %37, label %47
In BranchInst: 0, 0x558d5461bbf0
In AddEdge: 0x558d54635a60, 0x558d54635d60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %38 = zext i32 %.1 to i64
UnaryOp:   %38 = zext i32 %.1 to i64
Check LatCell: 0
In Meet:   %38 = zext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x558d5461a050)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %38 = zext i32 %.1 to i64
VisitInstr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
GetElementPtr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
VisitInstr:   %40 = load double, ptr %39, align 8
Check LatCell: 0
In Meet:   %40 = load double, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load double, ptr %39, align 8
VisitInstr:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
GetElementPtr:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
Check LatCell: 0
In Meet:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
VisitInstr:   %42 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %42 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load double, ptr %41, align 8
VisitInstr:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
GetElementPtr:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
VisitInstr:   %44 = load double, ptr %43, align 8
Check LatCell: 0
In Meet:   %44 = load double, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = load double, ptr %43, align 8
VisitInstr:   %45 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, double noundef %40, double noundef %42, double noundef %44) #6
Check LatCell: 0
In Meet:   %45 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, double noundef %40, double noundef %42, double noundef %44) #6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, double noundef %40, double noundef %42, double noundef %44) #6
VisitInstr:   %46 = add nuw nsw i32 %.1, 1
BinaryOp:   %46 = add nuw nsw i32 %.1, 1
Check LatCell: 0
In Meet:   %46 = add nuw nsw i32 %.1, 1, Lat1: (1, 0x0), Lat2: (0, 0x558d54605c50)
Lat2.second: i32 1
Meet:   %46 = add nuw nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
VisitInstr:   br label %35, !llvm.loop !11
BranchInst:   br label %35, !llvm.loop !11
In AddEdge: 0x558d54635c20, 0x558d54636960, 0
Adding edge:  -> 
Visiting SSA:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
VisitInstr:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
Visiting SSA:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
VisitInstr:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
PHI:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
PHI LatOp: 0, 0x558d54605c50
PHI LatOp: 0, 0x558d546198b0
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ], Lat1: (0, 0x558d546198b0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
Adding SSA:   %38 = zext i32 %.1 to i64
Adding SSA:   %36 = icmp ult i32 %.1, 8
Adding SSA:   %46 = add nuw nsw i32 %.1, 1
Visiting SSA:   %38 = zext i32 %.1 to i64
VisitInstr:   %38 = zext i32 %.1 to i64
UnaryOp:   %38 = zext i32 %.1 to i64
Check LatCell: 1
In Meet:   %38 = zext i32 %.1 to i64, Lat1: (0, 0x558d5461a050), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %38 = zext i32 %.1 to i64
Adding SSA:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
Adding SSA:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
Adding SSA:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Visiting SSA:   %36 = icmp ult i32 %.1, 8
VisitInstr:   %36 = icmp ult i32 %.1, 8
CmpInst:   %36 = icmp ult i32 %.1, 8
Check LatCell: 1
In Meet:   %36 = icmp ult i32 %.1, 8, Lat1: (0, 0x558d5461bbf0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %36 = icmp ult i32 %.1, 8
Adding SSA:   br i1 %36, label %37, label %47
Visiting SSA:   %46 = add nuw nsw i32 %.1, 1
VisitInstr:   %46 = add nuw nsw i32 %.1, 1
BinaryOp:   %46 = add nuw nsw i32 %.1, 1
Check LatCell: 1
In Meet:   %46 = add nuw nsw i32 %.1, 1, Lat1: (0, 0x558d54605c50), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %46 = add nuw nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
Visiting SSA:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
VisitInstr:   %43 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 2
Visiting SSA:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
VisitInstr:   %41 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, i64 1
Visiting SSA:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
VisitInstr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Visiting SSA:   br i1 %36, label %37, label %47
VisitInstr:   br i1 %36, label %37, label %47
BranchInst:   br i1 %36, label %37, label %47
In BranchInst: -1, 0x0
In AddEdge: 0x558d54635a60, 0x558d54635d60, 0
In AddEdge: 0x558d54635a60, 0x558d54635d60, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %48 = load ptr, ptr @stdout, align 8
Check LatCell: 0
In Meet:   %48 = load ptr, ptr @stdout, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load ptr, ptr @stdout, align 8
VisitInstr:   %49 = call i32 @fflush(ptr noundef %48) #6
Check LatCell: 0
In Meet:   %49 = call i32 @fflush(ptr noundef %48) #6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = call i32 @fflush(ptr noundef %48) #6
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
Visiting SSA:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
VisitInstr:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %.13 = phi i32 [ 0, %15 ], [ %34, %33 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
[LoopLoopAnalysis] parent loop header is:   %.01 = phi i32 [ 0, %18 ], [ %32, %31 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi i32 [ %46, %37 ], [ 0, %16 ]
[LoopLoopAnalysis] parent loop header is:   %.0 = phi i32 [ 0, %22 ], [ %30, %27 ]
[LoopLoopAnalysis] parent loop header is:   %.02 = phi i32 [ %14, %13 ], [ 1, %2 ]
Instruction to be moved:   %23 = load double, ptr %3, align 16
Instruction to be moved:   %24 = fadd double %20, 1.000000e+00
Instruction to be moved:   %19 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
Instruction to be moved:   %20 = load double, ptr %3, align 16
Instruction to be moved:   %21 = fadd double %17, 1.000000e+00
Instruction to be moved:   %10 = getelementptr inbounds ptr, ptr %1, i64 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 2
[UnitLICM]: NumComputeHoisted: 3
[UnitLICM]: Total: 7
----------------------------------------
Running sccp only: almabench.c
UnitSCCP running on anpm
Visiting BB: 
VisitInstr:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = call double @fmod(double noundef %0, double noundef 0x401921FB54442D18) #5
VisitInstr:   %3 = call double @llvm.fabs.f64(double %2)
Check LatCell: 0
In Meet:   %3 = call double @llvm.fabs.f64(double %2), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call double @llvm.fabs.f64(double %2)
VisitInstr:   %4 = fcmp oge double %3, 0x400921FB54442D18
CmpInst:   %4 = fcmp oge double %3, 0x400921FB54442D18
Check LatCell: 0
In Meet:   %4 = fcmp oge double %3, 0x400921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = fcmp oge double %3, 0x400921FB54442D18
VisitInstr:   br i1 %4, label %5, label %10
BranchInst:   br i1 %4, label %5, label %10
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc68c7d0, 0x55c6dc699690, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc68c7d0, 0x55c6dc699690, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = fcmp olt double %0, 0.000000e+00
CmpInst:   %6 = fcmp olt double %0, 0.000000e+00
Check LatCell: 0
In Meet:   %6 = fcmp olt double %0, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = fcmp olt double %0, 0.000000e+00
VisitInstr:   %7 = zext i1 %6 to i64
UnaryOp:   %7 = zext i1 %6 to i64
Check LatCell: 0
In Meet:   %7 = zext i1 %6 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = zext i1 %6 to i64
VisitInstr:   %8 = select i1 %6, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select:   %8 = select i1 %6, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select LatCond: -1, 0x0
Select LatTrue: 0, 0x55c6dc699560
Select LatFals: 0, 0x55c6dc698940
Check LatCell: 0
In Meet:   %8 = select i1 %6, double 0xC01921FB54442D18, double 0x401921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = select i1 %6, double 0xC01921FB54442D18, double 0x401921FB54442D18
VisitInstr:   %9 = fsub double %2, %8
BinaryOp:   %9 = fsub double %2, %8
Check LatCell: 0
In Meet:   %9 = fsub double %2, %8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = fsub double %2, %8
VisitInstr:   br label %10
BranchInst:   br label %10
In AddEdge: 0x55c6dc6990e0, 0x55c6dc699990, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi double [ %9, %5 ], [ %2, %1 ]
PHI:   %.0 = phi double [ %9, %5 ], [ %2, %1 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.0 = phi double [ %9, %5 ], [ %2, %1 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.0 = phi double [ %9, %5 ], [ %2, %1 ]
VisitInstr:   ret double %.0
Check LatCell: 0
In Meet:   ret double %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %.0
Visiting BB: 
VisitInstr:   %.0 = phi double [ %9, %5 ], [ %2, %1 ]
VisitInstr:   ret double %.0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitSCCP running on planetpv
Visiting BB: 
VisitInstr:   %4 = getelementptr inbounds double, ptr %0, i64 0
GetElementPtr:   %4 = getelementptr inbounds double, ptr %0, i64 0
Check LatCell: 0
In Meet:   %4 = getelementptr inbounds double, ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = getelementptr inbounds double, ptr %0, i64 0
VisitInstr:   %5 = load double, ptr %4, align 8
Check LatCell: 0
In Meet:   %5 = load double, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = load double, ptr %4, align 8
VisitInstr:   %6 = fsub double %5, 0x4142B42C80000000
BinaryOp:   %6 = fsub double %5, 0x4142B42C80000000
Check LatCell: 0
In Meet:   %6 = fsub double %5, 0x4142B42C80000000, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = fsub double %5, 0x4142B42C80000000
VisitInstr:   %7 = getelementptr inbounds double, ptr %0, i64 1
GetElementPtr:   %7 = getelementptr inbounds double, ptr %0, i64 1
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds double, ptr %0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds double, ptr %0, i64 1
VisitInstr:   %8 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %8 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = load double, ptr %7, align 8
VisitInstr:   %9 = fadd double %6, %8
BinaryOp:   %9 = fadd double %6, %8
Check LatCell: 0
In Meet:   %9 = fadd double %6, %8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = fadd double %6, %8
VisitInstr:   %10 = fdiv double %9, 3.652500e+05
BinaryOp:   %10 = fdiv double %9, 3.652500e+05
Check LatCell: 0
In Meet:   %10 = fdiv double %9, 3.652500e+05, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = fdiv double %9, 3.652500e+05
VisitInstr:   %11 = sext i32 %1 to i64
UnaryOp:   %11 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %11 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = sext i32 %1 to i64
VisitInstr:   %12 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %11
GetElementPtr:   %12 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %11
Check LatCell: 0
In Meet:   %12 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %11, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %11
VisitInstr:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 0
GetElementPtr:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 0
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 0
VisitInstr:   %14 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %13, align 8
VisitInstr:   %15 = sext i32 %1 to i64
UnaryOp:   %15 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %15 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = sext i32 %1 to i64
VisitInstr:   %16 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %15
GetElementPtr:   %16 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %15
Check LatCell: 0
In Meet:   %16 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %15, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %15
VisitInstr:   %17 = getelementptr inbounds [3 x double], ptr %16, i64 0, i64 1
GetElementPtr:   %17 = getelementptr inbounds [3 x double], ptr %16, i64 0, i64 1
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds [3 x double], ptr %16, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds [3 x double], ptr %16, i64 0, i64 1
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = sext i32 %1 to i64
UnaryOp:   %19 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %19 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = sext i32 %1 to i64
VisitInstr:   %20 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %19
GetElementPtr:   %20 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %19
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %19, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %19
VisitInstr:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
GetElementPtr:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
VisitInstr:   %22 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %21, align 8
VisitInstr:   %23 = call double @llvm.fmuladd.f64(double %22, double %10, double %18)
Check LatCell: 0
In Meet:   %23 = call double @llvm.fmuladd.f64(double %22, double %10, double %18), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = call double @llvm.fmuladd.f64(double %22, double %10, double %18)
VisitInstr:   %24 = call double @llvm.fmuladd.f64(double %23, double %10, double %14)
Check LatCell: 0
In Meet:   %24 = call double @llvm.fmuladd.f64(double %23, double %10, double %14), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = call double @llvm.fmuladd.f64(double %23, double %10, double %14)
VisitInstr:   %25 = sext i32 %1 to i64
UnaryOp:   %25 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %25 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = sext i32 %1 to i64
VisitInstr:   %26 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %25
GetElementPtr:   %26 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %25
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %25, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %25
VisitInstr:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 0
GetElementPtr:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 0
Check LatCell: 0
In Meet:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 0
VisitInstr:   %28 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %28 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = load double, ptr %27, align 8
VisitInstr:   %29 = sext i32 %1 to i64
UnaryOp:   %29 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %29 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = sext i32 %1 to i64
VisitInstr:   %30 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %29
GetElementPtr:   %30 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %29
Check LatCell: 0
In Meet:   %30 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %29, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %29
VisitInstr:   %31 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
GetElementPtr:   %31 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
Check LatCell: 0
In Meet:   %31 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
VisitInstr:   %32 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %32 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = load double, ptr %31, align 8
VisitInstr:   %33 = sext i32 %1 to i64
UnaryOp:   %33 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %33 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = sext i32 %1 to i64
VisitInstr:   %34 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %33
GetElementPtr:   %34 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %33
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %33, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %33
VisitInstr:   %35 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2
GetElementPtr:   %35 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2
Check LatCell: 0
In Meet:   %35 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2
VisitInstr:   %36 = load double, ptr %35, align 8
Check LatCell: 0
In Meet:   %36 = load double, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = load double, ptr %35, align 8
VisitInstr:   %37 = call double @llvm.fmuladd.f64(double %36, double %10, double %32)
Check LatCell: 0
In Meet:   %37 = call double @llvm.fmuladd.f64(double %36, double %10, double %32), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = call double @llvm.fmuladd.f64(double %36, double %10, double %32)
VisitInstr:   %38 = fmul double %37, %10
BinaryOp:   %38 = fmul double %37, %10
Check LatCell: 0
In Meet:   %38 = fmul double %37, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = fmul double %37, %10
VisitInstr:   %39 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %28, double %38)
Check LatCell: 0
In Meet:   %39 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %28, double %38), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %28, double %38)
VisitInstr:   %40 = fmul double %39, 0x3ED455A5B2FF8F9D
BinaryOp:   %40 = fmul double %39, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %40 = fmul double %39, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = fmul double %39, 0x3ED455A5B2FF8F9D
VisitInstr:   %41 = sext i32 %1 to i64
UnaryOp:   %41 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %41 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = sext i32 %1 to i64
VisitInstr:   %42 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %41
GetElementPtr:   %42 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %41
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %41, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %41
VisitInstr:   %43 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 0
GetElementPtr:   %43 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 0
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 0
VisitInstr:   %44 = load double, ptr %43, align 8
Check LatCell: 0
In Meet:   %44 = load double, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = load double, ptr %43, align 8
VisitInstr:   %45 = sext i32 %1 to i64
UnaryOp:   %45 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %45 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = sext i32 %1 to i64
VisitInstr:   %46 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %45
GetElementPtr:   %46 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %45
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %45, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %45
VisitInstr:   %47 = getelementptr inbounds [3 x double], ptr %46, i64 0, i64 1
GetElementPtr:   %47 = getelementptr inbounds [3 x double], ptr %46, i64 0, i64 1
Check LatCell: 0
In Meet:   %47 = getelementptr inbounds [3 x double], ptr %46, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = getelementptr inbounds [3 x double], ptr %46, i64 0, i64 1
VisitInstr:   %48 = load double, ptr %47, align 8
Check LatCell: 0
In Meet:   %48 = load double, ptr %47, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load double, ptr %47, align 8
VisitInstr:   %49 = sext i32 %1 to i64
UnaryOp:   %49 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %49 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = sext i32 %1 to i64
VisitInstr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %49
GetElementPtr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %49
Check LatCell: 0
In Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %49, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %49
VisitInstr:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 2
GetElementPtr:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 2
Check LatCell: 0
In Meet:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 2
VisitInstr:   %52 = load double, ptr %51, align 8
Check LatCell: 0
In Meet:   %52 = load double, ptr %51, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load double, ptr %51, align 8
VisitInstr:   %53 = call double @llvm.fmuladd.f64(double %52, double %10, double %48)
Check LatCell: 0
In Meet:   %53 = call double @llvm.fmuladd.f64(double %52, double %10, double %48), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = call double @llvm.fmuladd.f64(double %52, double %10, double %48)
VisitInstr:   %54 = call double @llvm.fmuladd.f64(double %53, double %10, double %44)
Check LatCell: 0
In Meet:   %54 = call double @llvm.fmuladd.f64(double %53, double %10, double %44), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = call double @llvm.fmuladd.f64(double %53, double %10, double %44)
VisitInstr:   %55 = sext i32 %1 to i64
UnaryOp:   %55 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %55 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = sext i32 %1 to i64
VisitInstr:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %55
GetElementPtr:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %55
Check LatCell: 0
In Meet:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %55, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %55
VisitInstr:   %57 = getelementptr inbounds [3 x double], ptr %56, i64 0, i64 0
GetElementPtr:   %57 = getelementptr inbounds [3 x double], ptr %56, i64 0, i64 0
Check LatCell: 0
In Meet:   %57 = getelementptr inbounds [3 x double], ptr %56, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = getelementptr inbounds [3 x double], ptr %56, i64 0, i64 0
VisitInstr:   %58 = load double, ptr %57, align 8
Check LatCell: 0
In Meet:   %58 = load double, ptr %57, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = load double, ptr %57, align 8
VisitInstr:   %59 = sext i32 %1 to i64
UnaryOp:   %59 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %59 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = sext i32 %1 to i64
VisitInstr:   %60 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %59
GetElementPtr:   %60 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %59
Check LatCell: 0
In Meet:   %60 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %59, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %59
VisitInstr:   %61 = getelementptr inbounds [3 x double], ptr %60, i64 0, i64 1
GetElementPtr:   %61 = getelementptr inbounds [3 x double], ptr %60, i64 0, i64 1
Check LatCell: 0
In Meet:   %61 = getelementptr inbounds [3 x double], ptr %60, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = getelementptr inbounds [3 x double], ptr %60, i64 0, i64 1
VisitInstr:   %62 = load double, ptr %61, align 8
Check LatCell: 0
In Meet:   %62 = load double, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load double, ptr %61, align 8
VisitInstr:   %63 = sext i32 %1 to i64
UnaryOp:   %63 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %63 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = sext i32 %1 to i64
VisitInstr:   %64 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %63
GetElementPtr:   %64 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %63
Check LatCell: 0
In Meet:   %64 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %63, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %63
VisitInstr:   %65 = getelementptr inbounds [3 x double], ptr %64, i64 0, i64 2
GetElementPtr:   %65 = getelementptr inbounds [3 x double], ptr %64, i64 0, i64 2
Check LatCell: 0
In Meet:   %65 = getelementptr inbounds [3 x double], ptr %64, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = getelementptr inbounds [3 x double], ptr %64, i64 0, i64 2
VisitInstr:   %66 = load double, ptr %65, align 8
Check LatCell: 0
In Meet:   %66 = load double, ptr %65, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load double, ptr %65, align 8
VisitInstr:   %67 = call double @llvm.fmuladd.f64(double %66, double %10, double %62)
Check LatCell: 0
In Meet:   %67 = call double @llvm.fmuladd.f64(double %66, double %10, double %62), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = call double @llvm.fmuladd.f64(double %66, double %10, double %62)
VisitInstr:   %68 = fmul double %67, %10
BinaryOp:   %68 = fmul double %67, %10
Check LatCell: 0
In Meet:   %68 = fmul double %67, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = fmul double %67, %10
VisitInstr:   %69 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %58, double %68)
Check LatCell: 0
In Meet:   %69 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %58, double %68), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %58, double %68)
VisitInstr:   %70 = fmul double %69, 0x3ED455A5B2FF8F9D
BinaryOp:   %70 = fmul double %69, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %70 = fmul double %69, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = fmul double %69, 0x3ED455A5B2FF8F9D
VisitInstr:   %71 = call double @anpm(double noundef %70)
Check LatCell: 0
In Meet:   %71 = call double @anpm(double noundef %70), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = call double @anpm(double noundef %70)
VisitInstr:   %72 = sext i32 %1 to i64
UnaryOp:   %72 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %72 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = sext i32 %1 to i64
VisitInstr:   %73 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %72
GetElementPtr:   %73 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %72
Check LatCell: 0
In Meet:   %73 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %72, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %72
VisitInstr:   %74 = getelementptr inbounds [3 x double], ptr %73, i64 0, i64 0
GetElementPtr:   %74 = getelementptr inbounds [3 x double], ptr %73, i64 0, i64 0
Check LatCell: 0
In Meet:   %74 = getelementptr inbounds [3 x double], ptr %73, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = getelementptr inbounds [3 x double], ptr %73, i64 0, i64 0
VisitInstr:   %75 = load double, ptr %74, align 8
Check LatCell: 0
In Meet:   %75 = load double, ptr %74, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load double, ptr %74, align 8
VisitInstr:   %76 = sext i32 %1 to i64
UnaryOp:   %76 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %76 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = sext i32 %1 to i64
VisitInstr:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %76
GetElementPtr:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %76
Check LatCell: 0
In Meet:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %76, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %76
VisitInstr:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
GetElementPtr:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
Check LatCell: 0
In Meet:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
VisitInstr:   %79 = load double, ptr %78, align 8
Check LatCell: 0
In Meet:   %79 = load double, ptr %78, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = load double, ptr %78, align 8
VisitInstr:   %80 = sext i32 %1 to i64
UnaryOp:   %80 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %80 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = sext i32 %1 to i64
VisitInstr:   %81 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %80
GetElementPtr:   %81 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %80
Check LatCell: 0
In Meet:   %81 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %80, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %80
VisitInstr:   %82 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
GetElementPtr:   %82 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
VisitInstr:   %83 = load double, ptr %82, align 8
Check LatCell: 0
In Meet:   %83 = load double, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = load double, ptr %82, align 8
VisitInstr:   %84 = call double @llvm.fmuladd.f64(double %83, double %10, double %79)
Check LatCell: 0
In Meet:   %84 = call double @llvm.fmuladd.f64(double %83, double %10, double %79), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = call double @llvm.fmuladd.f64(double %83, double %10, double %79)
VisitInstr:   %85 = fmul double %84, %10
BinaryOp:   %85 = fmul double %84, %10
Check LatCell: 0
In Meet:   %85 = fmul double %84, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = fmul double %84, %10
VisitInstr:   %86 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %75, double %85)
Check LatCell: 0
In Meet:   %86 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %75, double %85), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %75, double %85)
VisitInstr:   %87 = fmul double %86, 0x3ED455A5B2FF8F9D
BinaryOp:   %87 = fmul double %86, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %87 = fmul double %86, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = fmul double %86, 0x3ED455A5B2FF8F9D
VisitInstr:   %88 = sext i32 %1 to i64
UnaryOp:   %88 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %88 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = sext i32 %1 to i64
VisitInstr:   %89 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %88
GetElementPtr:   %89 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %88
Check LatCell: 0
In Meet:   %89 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %88, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %88
VisitInstr:   %90 = getelementptr inbounds [3 x double], ptr %89, i64 0, i64 0
GetElementPtr:   %90 = getelementptr inbounds [3 x double], ptr %89, i64 0, i64 0
Check LatCell: 0
In Meet:   %90 = getelementptr inbounds [3 x double], ptr %89, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = getelementptr inbounds [3 x double], ptr %89, i64 0, i64 0
VisitInstr:   %91 = load double, ptr %90, align 8
Check LatCell: 0
In Meet:   %91 = load double, ptr %90, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = load double, ptr %90, align 8
VisitInstr:   %92 = sext i32 %1 to i64
UnaryOp:   %92 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %92 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = sext i32 %1 to i64
VisitInstr:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %92
GetElementPtr:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %92
Check LatCell: 0
In Meet:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %92, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %92
VisitInstr:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1
GetElementPtr:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1
Check LatCell: 0
In Meet:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1
VisitInstr:   %95 = load double, ptr %94, align 8
Check LatCell: 0
In Meet:   %95 = load double, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = load double, ptr %94, align 8
VisitInstr:   %96 = sext i32 %1 to i64
UnaryOp:   %96 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %96 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = sext i32 %1 to i64
VisitInstr:   %97 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %96
GetElementPtr:   %97 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %96
Check LatCell: 0
In Meet:   %97 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %96, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %96
VisitInstr:   %98 = getelementptr inbounds [3 x double], ptr %97, i64 0, i64 2
GetElementPtr:   %98 = getelementptr inbounds [3 x double], ptr %97, i64 0, i64 2
Check LatCell: 0
In Meet:   %98 = getelementptr inbounds [3 x double], ptr %97, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = getelementptr inbounds [3 x double], ptr %97, i64 0, i64 2
VisitInstr:   %99 = load double, ptr %98, align 8
Check LatCell: 0
In Meet:   %99 = load double, ptr %98, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = load double, ptr %98, align 8
VisitInstr:   %100 = call double @llvm.fmuladd.f64(double %99, double %10, double %95)
Check LatCell: 0
In Meet:   %100 = call double @llvm.fmuladd.f64(double %99, double %10, double %95), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = call double @llvm.fmuladd.f64(double %99, double %10, double %95)
VisitInstr:   %101 = fmul double %100, %10
BinaryOp:   %101 = fmul double %100, %10
Check LatCell: 0
In Meet:   %101 = fmul double %100, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = fmul double %100, %10
VisitInstr:   %102 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %91, double %101)
Check LatCell: 0
In Meet:   %102 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %91, double %101), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %102 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %91, double %101)
VisitInstr:   %103 = fmul double %102, 0x3ED455A5B2FF8F9D
BinaryOp:   %103 = fmul double %102, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %103 = fmul double %102, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = fmul double %102, 0x3ED455A5B2FF8F9D
VisitInstr:   %104 = call double @anpm(double noundef %103)
Check LatCell: 0
In Meet:   %104 = call double @anpm(double noundef %103), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = call double @anpm(double noundef %103)
VisitInstr:   %105 = fmul double 0x3FD702A41F2E9970, %10
BinaryOp:   %105 = fmul double 0x3FD702A41F2E9970, %10
Check LatCell: 0
In Meet:   %105 = fmul double 0x3FD702A41F2E9970, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = fmul double 0x3FD702A41F2E9970, %10
VisitInstr:   br label %106
BranchInst:   br label %106
In AddEdge: 0x55c6dc699ee0, 0x55c6dc6ad520, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
PHI:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
VisitInstr:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
PHI:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.02 = phi double [ %24, %3 ], [ %135, %151 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
VisitInstr:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
PHI:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.01 = phi double [ %40, %3 ], [ %150, %151 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
VisitInstr:   %107 = icmp slt i32 %.03, 8
CmpInst:   %107 = icmp slt i32 %.03, 8
Check LatCell: 0
In Meet:   %107 = icmp slt i32 %.03, 8, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %107 = icmp slt i32 %.03, 8
VisitInstr:   br i1 %107, label %108, label %153
BranchInst:   br i1 %107, label %108, label %153
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6ad470, 0x55c6dc6ad7b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %109 = sext i32 %1 to i64
UnaryOp:   %109 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %109 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %109 = sext i32 %1 to i64
VisitInstr:   %110 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %109
GetElementPtr:   %110 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %109
Check LatCell: 0
In Meet:   %110 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %109, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %110 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %109
VisitInstr:   %111 = sext i32 %.03 to i64
UnaryOp:   %111 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %111 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %111 = sext i32 %.03 to i64
VisitInstr:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
GetElementPtr:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
Check LatCell: 0
In Meet:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
VisitInstr:   %113 = load double, ptr %112, align 8
Check LatCell: 0
In Meet:   %113 = load double, ptr %112, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %113 = load double, ptr %112, align 8
VisitInstr:   %114 = fmul double %113, %105
BinaryOp:   %114 = fmul double %113, %105
Check LatCell: 0
In Meet:   %114 = fmul double %113, %105, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = fmul double %113, %105
VisitInstr:   %115 = sext i32 %1 to i64
UnaryOp:   %115 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %115 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %115 = sext i32 %1 to i64
VisitInstr:   %116 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %115
GetElementPtr:   %116 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %115
Check LatCell: 0
In Meet:   %116 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %115, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %115
VisitInstr:   %117 = sext i32 %.03 to i64
UnaryOp:   %117 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %117 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %117 = sext i32 %.03 to i64
VisitInstr:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
GetElementPtr:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
Check LatCell: 0
In Meet:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
VisitInstr:   %119 = load double, ptr %118, align 8
Check LatCell: 0
In Meet:   %119 = load double, ptr %118, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = load double, ptr %118, align 8
VisitInstr:   %120 = fmul double %119, %105
BinaryOp:   %120 = fmul double %119, %105
Check LatCell: 0
In Meet:   %120 = fmul double %119, %105, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = fmul double %119, %105
VisitInstr:   %121 = sext i32 %1 to i64
UnaryOp:   %121 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %121 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = sext i32 %1 to i64
VisitInstr:   %122 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %121
GetElementPtr:   %122 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %121
Check LatCell: 0
In Meet:   %122 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %121, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %122 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %121
VisitInstr:   %123 = sext i32 %.03 to i64
UnaryOp:   %123 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %123 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %123 = sext i32 %.03 to i64
VisitInstr:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
GetElementPtr:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
Check LatCell: 0
In Meet:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
VisitInstr:   %125 = load double, ptr %124, align 8
Check LatCell: 0
In Meet:   %125 = load double, ptr %124, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = load double, ptr %124, align 8
VisitInstr:   %126 = call double @cos(double noundef %114) #5
Check LatCell: 0
In Meet:   %126 = call double @cos(double noundef %114) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %126 = call double @cos(double noundef %114) #5
VisitInstr:   %127 = sext i32 %1 to i64
UnaryOp:   %127 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %127 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %127 = sext i32 %1 to i64
VisitInstr:   %128 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %127
GetElementPtr:   %128 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %127
Check LatCell: 0
In Meet:   %128 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %127, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %128 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %127
VisitInstr:   %129 = sext i32 %.03 to i64
UnaryOp:   %129 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %129 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %129 = sext i32 %.03 to i64
VisitInstr:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
GetElementPtr:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
Check LatCell: 0
In Meet:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
VisitInstr:   %131 = load double, ptr %130, align 8
Check LatCell: 0
In Meet:   %131 = load double, ptr %130, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %131 = load double, ptr %130, align 8
VisitInstr:   %132 = call double @sin(double noundef %114) #5
Check LatCell: 0
In Meet:   %132 = call double @sin(double noundef %114) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %132 = call double @sin(double noundef %114) #5
VisitInstr:   %133 = fmul double %131, %132
BinaryOp:   %133 = fmul double %131, %132
Check LatCell: 0
In Meet:   %133 = fmul double %131, %132, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %133 = fmul double %131, %132
VisitInstr:   %134 = call double @llvm.fmuladd.f64(double %125, double %126, double %133)
Check LatCell: 0
In Meet:   %134 = call double @llvm.fmuladd.f64(double %125, double %126, double %133), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %134 = call double @llvm.fmuladd.f64(double %125, double %126, double %133)
VisitInstr:   %135 = call double @llvm.fmuladd.f64(double %134, double 0x3E7AD7F29ABCAF48, double %.02)
Check LatCell: 0
In Meet:   %135 = call double @llvm.fmuladd.f64(double %134, double 0x3E7AD7F29ABCAF48, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %135 = call double @llvm.fmuladd.f64(double %134, double 0x3E7AD7F29ABCAF48, double %.02)
Adding SSA:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
VisitInstr:   %136 = sext i32 %1 to i64
UnaryOp:   %136 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %136 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %136 = sext i32 %1 to i64
VisitInstr:   %137 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %136
GetElementPtr:   %137 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %136
Check LatCell: 0
In Meet:   %137 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %136, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %137 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %136
VisitInstr:   %138 = sext i32 %.03 to i64
UnaryOp:   %138 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %138 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %138 = sext i32 %.03 to i64
VisitInstr:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
GetElementPtr:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
Check LatCell: 0
In Meet:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
VisitInstr:   %140 = load double, ptr %139, align 8
Check LatCell: 0
In Meet:   %140 = load double, ptr %139, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %140 = load double, ptr %139, align 8
VisitInstr:   %141 = call double @cos(double noundef %120) #5
Check LatCell: 0
In Meet:   %141 = call double @cos(double noundef %120) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %141 = call double @cos(double noundef %120) #5
VisitInstr:   %142 = sext i32 %1 to i64
UnaryOp:   %142 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %142 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %142 = sext i32 %1 to i64
VisitInstr:   %143 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %142
GetElementPtr:   %143 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %142
Check LatCell: 0
In Meet:   %143 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %142, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %143 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %142
VisitInstr:   %144 = sext i32 %.03 to i64
UnaryOp:   %144 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %144 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %144 = sext i32 %.03 to i64
VisitInstr:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
GetElementPtr:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
Check LatCell: 0
In Meet:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
VisitInstr:   %146 = load double, ptr %145, align 8
Check LatCell: 0
In Meet:   %146 = load double, ptr %145, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %146 = load double, ptr %145, align 8
VisitInstr:   %147 = call double @sin(double noundef %120) #5
Check LatCell: 0
In Meet:   %147 = call double @sin(double noundef %120) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %147 = call double @sin(double noundef %120) #5
VisitInstr:   %148 = fmul double %146, %147
BinaryOp:   %148 = fmul double %146, %147
Check LatCell: 0
In Meet:   %148 = fmul double %146, %147, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %148 = fmul double %146, %147
VisitInstr:   %149 = call double @llvm.fmuladd.f64(double %140, double %141, double %148)
Check LatCell: 0
In Meet:   %149 = call double @llvm.fmuladd.f64(double %140, double %141, double %148), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %149 = call double @llvm.fmuladd.f64(double %140, double %141, double %148)
VisitInstr:   %150 = call double @llvm.fmuladd.f64(double %149, double 0x3E7AD7F29ABCAF48, double %.01)
Check LatCell: 0
In Meet:   %150 = call double @llvm.fmuladd.f64(double %149, double 0x3E7AD7F29ABCAF48, double %.01), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %150 = call double @llvm.fmuladd.f64(double %149, double 0x3E7AD7F29ABCAF48, double %.01)
Adding SSA:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
VisitInstr:   br label %151
BranchInst:   br label %151
In AddEdge: 0x55c6dc6ad670, 0x55c6dc6b01f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %152 = add nsw i32 %.03, 1
BinaryOp:   %152 = add nsw i32 %.03, 1
Check LatCell: 0
In Meet:   %152 = add nsw i32 %.03, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %152 = add nsw i32 %.03, 1
Adding SSA:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
VisitInstr:   br label %106, !llvm.loop !6
BranchInst:   br label %106, !llvm.loop !6
In AddEdge: 0x55c6dc6b0140, 0x55c6dc6b03f0, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
VisitInstr:   %.02 = phi double [ %24, %3 ], [ %135, %151 ]
Visiting SSA:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
VisitInstr:   %.01 = phi double [ %40, %3 ], [ %150, %151 ]
Visiting SSA:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
PHI:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
PHI LatOp: 0, 0x55c6dc6a86d0
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 1
In Meet:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ], Lat1: (0, 0x55c6dc6a86d0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
Adding SSA:   %152 = add nsw i32 %.03, 1
Adding SSA:   %144 = sext i32 %.03 to i64
Adding SSA:   %138 = sext i32 %.03 to i64
Adding SSA:   %129 = sext i32 %.03 to i64
Adding SSA:   %123 = sext i32 %.03 to i64
Adding SSA:   %117 = sext i32 %.03 to i64
Adding SSA:   %111 = sext i32 %.03 to i64
Adding SSA:   %107 = icmp slt i32 %.03, 8
Visiting SSA:   %152 = add nsw i32 %.03, 1
VisitInstr:   %152 = add nsw i32 %.03, 1
BinaryOp:   %152 = add nsw i32 %.03, 1
Check LatCell: 1
In Meet:   %152 = add nsw i32 %.03, 1, Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %152 = add nsw i32 %.03, 1
Adding SSA:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
Visiting SSA:   %144 = sext i32 %.03 to i64
VisitInstr:   %144 = sext i32 %.03 to i64
UnaryOp:   %144 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %144 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %144 = sext i32 %.03 to i64
Adding SSA:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
Visiting SSA:   %138 = sext i32 %.03 to i64
VisitInstr:   %138 = sext i32 %.03 to i64
UnaryOp:   %138 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %138 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %138 = sext i32 %.03 to i64
Adding SSA:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
Visiting SSA:   %129 = sext i32 %.03 to i64
VisitInstr:   %129 = sext i32 %.03 to i64
UnaryOp:   %129 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %129 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %129 = sext i32 %.03 to i64
Adding SSA:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
Visiting SSA:   %123 = sext i32 %.03 to i64
VisitInstr:   %123 = sext i32 %.03 to i64
UnaryOp:   %123 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %123 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %123 = sext i32 %.03 to i64
Adding SSA:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
Visiting SSA:   %117 = sext i32 %.03 to i64
VisitInstr:   %117 = sext i32 %.03 to i64
UnaryOp:   %117 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %117 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %117 = sext i32 %.03 to i64
Adding SSA:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
Visiting SSA:   %111 = sext i32 %.03 to i64
VisitInstr:   %111 = sext i32 %.03 to i64
UnaryOp:   %111 = sext i32 %.03 to i64
Check LatCell: 1
In Meet:   %111 = sext i32 %.03 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %111 = sext i32 %.03 to i64
Adding SSA:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
Visiting SSA:   %107 = icmp slt i32 %.03, 8
VisitInstr:   %107 = icmp slt i32 %.03, 8
CmpInst:   %107 = icmp slt i32 %.03, 8
Check LatCell: 1
In Meet:   %107 = icmp slt i32 %.03, 8, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %107 = icmp slt i32 %.03, 8
Adding SSA:   br i1 %107, label %108, label %153
Visiting SSA:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
VisitInstr:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
Visiting SSA:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
VisitInstr:   %145 = getelementptr inbounds [10 x double], ptr %143, i64 0, i64 %144
Visiting SSA:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
VisitInstr:   %139 = getelementptr inbounds [10 x double], ptr %137, i64 0, i64 %138
Visiting SSA:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
VisitInstr:   %130 = getelementptr inbounds [9 x double], ptr %128, i64 0, i64 %129
Visiting SSA:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
VisitInstr:   %124 = getelementptr inbounds [9 x double], ptr %122, i64 0, i64 %123
Visiting SSA:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
VisitInstr:   %118 = getelementptr inbounds [10 x double], ptr %116, i64 0, i64 %117
Visiting SSA:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
VisitInstr:   %112 = getelementptr inbounds [9 x double], ptr %110, i64 0, i64 %111
Visiting SSA:   br i1 %107, label %108, label %153
VisitInstr:   br i1 %107, label %108, label %153
BranchInst:   br i1 %107, label %108, label %153
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6ad470, 0x55c6dc6ad7b0, 0
In AddEdge: 0x55c6dc6ad470, 0x55c6dc6ad7b0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %154 = sext i32 %1 to i64
UnaryOp:   %154 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %154 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %154 = sext i32 %1 to i64
VisitInstr:   %155 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %154
GetElementPtr:   %155 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %154
Check LatCell: 0
In Meet:   %155 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %154, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %155 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %154
VisitInstr:   %156 = getelementptr inbounds [9 x double], ptr %155, i64 0, i64 8
GetElementPtr:   %156 = getelementptr inbounds [9 x double], ptr %155, i64 0, i64 8
Check LatCell: 0
In Meet:   %156 = getelementptr inbounds [9 x double], ptr %155, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %156 = getelementptr inbounds [9 x double], ptr %155, i64 0, i64 8
VisitInstr:   %157 = load double, ptr %156, align 8
Check LatCell: 0
In Meet:   %157 = load double, ptr %156, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %157 = load double, ptr %156, align 8
VisitInstr:   %158 = fmul double %157, %105
BinaryOp:   %158 = fmul double %157, %105
Check LatCell: 0
In Meet:   %158 = fmul double %157, %105, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %158 = fmul double %157, %105
VisitInstr:   %159 = sext i32 %1 to i64
UnaryOp:   %159 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %159 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %159 = sext i32 %1 to i64
VisitInstr:   %160 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %159
GetElementPtr:   %160 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %159
Check LatCell: 0
In Meet:   %160 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %159, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %160 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %159
VisitInstr:   %161 = getelementptr inbounds [9 x double], ptr %160, i64 0, i64 8
GetElementPtr:   %161 = getelementptr inbounds [9 x double], ptr %160, i64 0, i64 8
Check LatCell: 0
In Meet:   %161 = getelementptr inbounds [9 x double], ptr %160, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %161 = getelementptr inbounds [9 x double], ptr %160, i64 0, i64 8
VisitInstr:   %162 = load double, ptr %161, align 8
Check LatCell: 0
In Meet:   %162 = load double, ptr %161, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %162 = load double, ptr %161, align 8
VisitInstr:   %163 = call double @cos(double noundef %158) #5
Check LatCell: 0
In Meet:   %163 = call double @cos(double noundef %158) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %163 = call double @cos(double noundef %158) #5
VisitInstr:   %164 = sext i32 %1 to i64
UnaryOp:   %164 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %164 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %164 = sext i32 %1 to i64
VisitInstr:   %165 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %164
GetElementPtr:   %165 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %164
Check LatCell: 0
In Meet:   %165 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %164, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %165 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %164
VisitInstr:   %166 = getelementptr inbounds [9 x double], ptr %165, i64 0, i64 8
GetElementPtr:   %166 = getelementptr inbounds [9 x double], ptr %165, i64 0, i64 8
Check LatCell: 0
In Meet:   %166 = getelementptr inbounds [9 x double], ptr %165, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %166 = getelementptr inbounds [9 x double], ptr %165, i64 0, i64 8
VisitInstr:   %167 = load double, ptr %166, align 8
Check LatCell: 0
In Meet:   %167 = load double, ptr %166, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %167 = load double, ptr %166, align 8
VisitInstr:   %168 = call double @sin(double noundef %158) #5
Check LatCell: 0
In Meet:   %168 = call double @sin(double noundef %158) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %168 = call double @sin(double noundef %158) #5
VisitInstr:   %169 = fmul double %167, %168
BinaryOp:   %169 = fmul double %167, %168
Check LatCell: 0
In Meet:   %169 = fmul double %167, %168, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %169 = fmul double %167, %168
VisitInstr:   %170 = call double @llvm.fmuladd.f64(double %162, double %163, double %169)
Check LatCell: 0
In Meet:   %170 = call double @llvm.fmuladd.f64(double %162, double %163, double %169), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %170 = call double @llvm.fmuladd.f64(double %162, double %163, double %169)
VisitInstr:   %171 = fmul double %10, %170
BinaryOp:   %171 = fmul double %10, %170
Check LatCell: 0
In Meet:   %171 = fmul double %10, %170, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %171 = fmul double %10, %170
VisitInstr:   %172 = call double @llvm.fmuladd.f64(double %171, double 0x3E7AD7F29ABCAF48, double %.02)
Check LatCell: 0
In Meet:   %172 = call double @llvm.fmuladd.f64(double %171, double 0x3E7AD7F29ABCAF48, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %172 = call double @llvm.fmuladd.f64(double %171, double 0x3E7AD7F29ABCAF48, double %.02)
VisitInstr:   br label %173
BranchInst:   br label %173
In AddEdge: 0x55c6dc6ad6c0, 0x55c6dc6b2a70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
PHI:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
PHI LatOp: 0, 0x55c6dc6a8700
Check LatCell: 0
In Meet:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a8700)
Lat2.second: i32 8
Meet:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
VisitInstr:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
PHI:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
VisitInstr:   %174 = icmp sle i32 %.14, 9
CmpInst:   %174 = icmp sle i32 %.14, 9
Check LatCell: 0
In Meet:   %174 = icmp sle i32 %.14, 9, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %174 = icmp sle i32 %.14, 9
VisitInstr:   br i1 %174, label %175, label %200
BranchInst:   br i1 %174, label %175, label %200
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6b2a00, 0x55c6dc6b2d00, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %176 = sext i32 %1 to i64
UnaryOp:   %176 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %176 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %176 = sext i32 %1 to i64
VisitInstr:   %177 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %176
GetElementPtr:   %177 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %176
Check LatCell: 0
In Meet:   %177 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %176, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %177 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %176
VisitInstr:   %178 = sext i32 %.14 to i64
UnaryOp:   %178 = sext i32 %.14 to i64
Check LatCell: 0
In Meet:   %178 = sext i32 %.14 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc69a2d0)
Lat2.second: i32 sext (i32 8 to i32)
Meet:   %178 = sext i32 %.14 to i64
VisitInstr:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
GetElementPtr:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
Check LatCell: 0
In Meet:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
VisitInstr:   %180 = load double, ptr %179, align 8
Check LatCell: 0
In Meet:   %180 = load double, ptr %179, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %180 = load double, ptr %179, align 8
VisitInstr:   %181 = fmul double %180, %105
BinaryOp:   %181 = fmul double %180, %105
Check LatCell: 0
In Meet:   %181 = fmul double %180, %105, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %181 = fmul double %180, %105
VisitInstr:   %182 = sext i32 %1 to i64
UnaryOp:   %182 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %182 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %182 = sext i32 %1 to i64
VisitInstr:   %183 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %182
GetElementPtr:   %183 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %182
Check LatCell: 0
In Meet:   %183 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %182, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %183 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %182
VisitInstr:   %184 = sext i32 %.14 to i64
UnaryOp:   %184 = sext i32 %.14 to i64
Check LatCell: 0
In Meet:   %184 = sext i32 %.14 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc69a2d0)
Lat2.second: i32 sext (i32 8 to i32)
Meet:   %184 = sext i32 %.14 to i64
VisitInstr:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
GetElementPtr:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
Check LatCell: 0
In Meet:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
VisitInstr:   %186 = load double, ptr %185, align 8
Check LatCell: 0
In Meet:   %186 = load double, ptr %185, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %186 = load double, ptr %185, align 8
VisitInstr:   %187 = call double @cos(double noundef %181) #5
Check LatCell: 0
In Meet:   %187 = call double @cos(double noundef %181) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %187 = call double @cos(double noundef %181) #5
VisitInstr:   %188 = sext i32 %1 to i64
UnaryOp:   %188 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %188 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %188 = sext i32 %1 to i64
VisitInstr:   %189 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %188
GetElementPtr:   %189 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %188
Check LatCell: 0
In Meet:   %189 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %188, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %189 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %188
VisitInstr:   %190 = sext i32 %.14 to i64
UnaryOp:   %190 = sext i32 %.14 to i64
Check LatCell: 0
In Meet:   %190 = sext i32 %.14 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc69a2d0)
Lat2.second: i32 sext (i32 8 to i32)
Meet:   %190 = sext i32 %.14 to i64
VisitInstr:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
GetElementPtr:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
Check LatCell: 0
In Meet:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
VisitInstr:   %192 = load double, ptr %191, align 8
Check LatCell: 0
In Meet:   %192 = load double, ptr %191, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %192 = load double, ptr %191, align 8
VisitInstr:   %193 = call double @sin(double noundef %181) #5
Check LatCell: 0
In Meet:   %193 = call double @sin(double noundef %181) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %193 = call double @sin(double noundef %181) #5
VisitInstr:   %194 = fmul double %192, %193
BinaryOp:   %194 = fmul double %192, %193
Check LatCell: 0
In Meet:   %194 = fmul double %192, %193, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %194 = fmul double %192, %193
VisitInstr:   %195 = call double @llvm.fmuladd.f64(double %186, double %187, double %194)
Check LatCell: 0
In Meet:   %195 = call double @llvm.fmuladd.f64(double %186, double %187, double %194), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %195 = call double @llvm.fmuladd.f64(double %186, double %187, double %194)
VisitInstr:   %196 = fmul double %10, %195
BinaryOp:   %196 = fmul double %10, %195
Check LatCell: 0
In Meet:   %196 = fmul double %10, %195, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %196 = fmul double %10, %195
VisitInstr:   %197 = call double @llvm.fmuladd.f64(double %196, double 0x3E7AD7F29ABCAF48, double %.1)
Check LatCell: 0
In Meet:   %197 = call double @llvm.fmuladd.f64(double %196, double 0x3E7AD7F29ABCAF48, double %.1), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %197 = call double @llvm.fmuladd.f64(double %196, double 0x3E7AD7F29ABCAF48, double %.1)
Adding SSA:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
VisitInstr:   br label %198
BranchInst:   br label %198
In AddEdge: 0x55c6dc6b2bc0, 0x55c6dc6b4280, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %199 = add nsw i32 %.14, 1
BinaryOp:   %199 = add nsw i32 %.14, 1
Check LatCell: 0
In Meet:   %199 = add nsw i32 %.14, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6aefd0)
Lat2.second: i32 9
Meet:   %199 = add nsw i32 %.14, 1
Adding SSA:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
VisitInstr:   br label %173, !llvm.loop !8
BranchInst:   br label %173, !llvm.loop !8
In AddEdge: 0x55c6dc6b4210, 0x55c6dc6b4480, 0
Adding edge:  -> 
Visiting SSA:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
VisitInstr:   %.1 = phi double [ %.01, %153 ], [ %197, %198 ]
Visiting SSA:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
VisitInstr:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
PHI:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
PHI LatOp: 0, 0x55c6dc6a8700
PHI LatOp: 0, 0x55c6dc6aefd0
Check LatCell: 1
In Meet:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ], Lat1: (0, 0x55c6dc6a8700), Lat2: (-1, 0x0)
Lat1.second: i32 8
Meet:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
Adding SSA:   %199 = add nsw i32 %.14, 1
Adding SSA:   %190 = sext i32 %.14 to i64
Adding SSA:   %184 = sext i32 %.14 to i64
Adding SSA:   %178 = sext i32 %.14 to i64
Adding SSA:   %174 = icmp sle i32 %.14, 9
Visiting SSA:   %199 = add nsw i32 %.14, 1
VisitInstr:   %199 = add nsw i32 %.14, 1
BinaryOp:   %199 = add nsw i32 %.14, 1
Check LatCell: 1
In Meet:   %199 = add nsw i32 %.14, 1, Lat1: (0, 0x55c6dc6aefd0), Lat2: (-1, 0x0)
Lat1.second: i32 9
Meet:   %199 = add nsw i32 %.14, 1
Adding SSA:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
Visiting SSA:   %190 = sext i32 %.14 to i64
VisitInstr:   %190 = sext i32 %.14 to i64
UnaryOp:   %190 = sext i32 %.14 to i64
Check LatCell: 1
In Meet:   %190 = sext i32 %.14 to i64, Lat1: (0, 0x55c6dc69a2d0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 8 to i32)
Meet:   %190 = sext i32 %.14 to i64
Adding SSA:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
Visiting SSA:   %184 = sext i32 %.14 to i64
VisitInstr:   %184 = sext i32 %.14 to i64
UnaryOp:   %184 = sext i32 %.14 to i64
Check LatCell: 1
In Meet:   %184 = sext i32 %.14 to i64, Lat1: (0, 0x55c6dc69a2d0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 8 to i32)
Meet:   %184 = sext i32 %.14 to i64
Adding SSA:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
Visiting SSA:   %178 = sext i32 %.14 to i64
VisitInstr:   %178 = sext i32 %.14 to i64
UnaryOp:   %178 = sext i32 %.14 to i64
Check LatCell: 1
In Meet:   %178 = sext i32 %.14 to i64, Lat1: (0, 0x55c6dc69a2d0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 8 to i32)
Meet:   %178 = sext i32 %.14 to i64
Adding SSA:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
Visiting SSA:   %174 = icmp sle i32 %.14, 9
VisitInstr:   %174 = icmp sle i32 %.14, 9
CmpInst:   %174 = icmp sle i32 %.14, 9
Check LatCell: 1
In Meet:   %174 = icmp sle i32 %.14, 9, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %174 = icmp sle i32 %.14, 9
Adding SSA:   br i1 %174, label %175, label %200
Visiting SSA:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
VisitInstr:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
Visiting SSA:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
VisitInstr:   %191 = getelementptr inbounds [10 x double], ptr %189, i64 0, i64 %190
Visiting SSA:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
VisitInstr:   %185 = getelementptr inbounds [10 x double], ptr %183, i64 0, i64 %184
Visiting SSA:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
VisitInstr:   %179 = getelementptr inbounds [10 x double], ptr %177, i64 0, i64 %178
Visiting SSA:   br i1 %174, label %175, label %200
VisitInstr:   br i1 %174, label %175, label %200
BranchInst:   br i1 %174, label %175, label %200
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6b2a00, 0x55c6dc6b2d00, 0
In AddEdge: 0x55c6dc6b2a00, 0x55c6dc6b2d00, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %201 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %201 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %201 = call double @fmod(double noundef %.1, double noundef 0x401921FB54442D18) #5
VisitInstr:   %202 = fsub double %201, %71
BinaryOp:   %202 = fsub double %201, %71
Check LatCell: 0
In Meet:   %202 = fsub double %201, %71, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %202 = fsub double %201, %71
VisitInstr:   %203 = call double @sin(double noundef %202) #5
Check LatCell: 0
In Meet:   %203 = call double @sin(double noundef %202) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %203 = call double @sin(double noundef %202) #5
VisitInstr:   %204 = call double @llvm.fmuladd.f64(double %54, double %203, double %202)
Check LatCell: 0
In Meet:   %204 = call double @llvm.fmuladd.f64(double %54, double %203, double %202), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %204 = call double @llvm.fmuladd.f64(double %54, double %203, double %202)
VisitInstr:   br label %205
BranchInst:   br label %205
In AddEdge: 0x55c6dc6b2c10, 0x55c6dc6b4f20, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.2 = phi i32 [ 0, %200 ], [ %214, %220 ]
PHI:   %.2 = phi i32 [ 0, %200 ], [ %214, %220 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.2 = phi i32 [ 0, %200 ], [ %214, %220 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.2 = phi i32 [ 0, %200 ], [ %214, %220 ]
VisitInstr:   %.0 = phi double [ %204, %200 ], [ %213, %220 ]
PHI:   %.0 = phi double [ %204, %200 ], [ %213, %220 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.0 = phi double [ %204, %200 ], [ %213, %220 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.0 = phi double [ %204, %200 ], [ %213, %220 ]
VisitInstr:   %206 = fsub double %202, %.0
BinaryOp:   %206 = fsub double %202, %.0
Check LatCell: 0
In Meet:   %206 = fsub double %202, %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %206 = fsub double %202, %.0
VisitInstr:   %207 = call double @sin(double noundef %.0) #5
Check LatCell: 0
In Meet:   %207 = call double @sin(double noundef %.0) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %207 = call double @sin(double noundef %.0) #5
VisitInstr:   %208 = call double @llvm.fmuladd.f64(double %54, double %207, double %206)
Check LatCell: 0
In Meet:   %208 = call double @llvm.fmuladd.f64(double %54, double %207, double %206), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %208 = call double @llvm.fmuladd.f64(double %54, double %207, double %206)
VisitInstr:   %209 = call double @cos(double noundef %.0) #5
Check LatCell: 0
In Meet:   %209 = call double @cos(double noundef %.0) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %209 = call double @cos(double noundef %.0) #5
VisitInstr:   %210 = fneg double %54
UnaryOp:   %210 = fneg double %54
Check LatCell: 0
In Meet:   %210 = fneg double %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %210 = fneg double %54
VisitInstr:   %211 = call double @llvm.fmuladd.f64(double %210, double %209, double 1.000000e+00)
Check LatCell: 0
In Meet:   %211 = call double @llvm.fmuladd.f64(double %210, double %209, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %211 = call double @llvm.fmuladd.f64(double %210, double %209, double 1.000000e+00)
VisitInstr:   %212 = fdiv double %208, %211
BinaryOp:   %212 = fdiv double %208, %211
Check LatCell: 0
In Meet:   %212 = fdiv double %208, %211, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %212 = fdiv double %208, %211
VisitInstr:   %213 = fadd double %.0, %212
BinaryOp:   %213 = fadd double %.0, %212
Check LatCell: 0
In Meet:   %213 = fadd double %.0, %212, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %213 = fadd double %.0, %212
VisitInstr:   %214 = add nsw i32 %.2, 1
BinaryOp:   %214 = add nsw i32 %.2, 1
Check LatCell: 0
In Meet:   %214 = add nsw i32 %.2, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %214 = add nsw i32 %.2, 1
VisitInstr:   %215 = icmp sge i32 %214, 10
CmpInst:   %215 = icmp sge i32 %214, 10
Check LatCell: 0
In Meet:   %215 = icmp sge i32 %214, 10, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb090)
Lat2.second: i1 false
Meet:   %215 = icmp sge i32 %214, 10
VisitInstr:   br i1 %215, label %219, label %216
BranchInst:   br i1 %215, label %219, label %216
In BranchInst: 0, 0x55c6dc6bb090
In AddEdge: 0x55c6dc6b4eb0, 0x55c6dc6b5ec0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %217 = call double @llvm.fabs.f64(double %212)
Check LatCell: 0
In Meet:   %217 = call double @llvm.fabs.f64(double %212), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %217 = call double @llvm.fabs.f64(double %212)
VisitInstr:   %218 = fcmp olt double %217, 0x3D719799812DEA11
CmpInst:   %218 = fcmp olt double %217, 0x3D719799812DEA11
Check LatCell: 0
In Meet:   %218 = fcmp olt double %217, 0x3D719799812DEA11, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %218 = fcmp olt double %217, 0x3D719799812DEA11
VisitInstr:   br i1 %218, label %219, label %220
BranchInst:   br i1 %218, label %219, label %220
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6b5dd0, 0x55c6dc6b61f0, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc6b5dd0, 0x55c6dc6b61f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %221
BranchInst:   br label %221
In AddEdge: 0x55c6dc6b5d40, 0x55c6dc6b62b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %205
BranchInst:   br label %205
In AddEdge: 0x55c6dc6b6100, 0x55c6dc6b6320, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %222 = fdiv double %213, 2.000000e+00
BinaryOp:   %222 = fdiv double %213, 2.000000e+00
Check LatCell: 0
In Meet:   %222 = fdiv double %213, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %222 = fdiv double %213, 2.000000e+00
VisitInstr:   %223 = fadd double 1.000000e+00, %54
BinaryOp:   %223 = fadd double 1.000000e+00, %54
Check LatCell: 0
In Meet:   %223 = fadd double 1.000000e+00, %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %223 = fadd double 1.000000e+00, %54
VisitInstr:   %224 = fsub double 1.000000e+00, %54
BinaryOp:   %224 = fsub double 1.000000e+00, %54
Check LatCell: 0
In Meet:   %224 = fsub double 1.000000e+00, %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %224 = fsub double 1.000000e+00, %54
VisitInstr:   %225 = fdiv double %223, %224
BinaryOp:   %225 = fdiv double %223, %224
Check LatCell: 0
In Meet:   %225 = fdiv double %223, %224, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %225 = fdiv double %223, %224
VisitInstr:   %226 = call double @sqrt(double noundef %225) #5
Check LatCell: 0
In Meet:   %226 = call double @sqrt(double noundef %225) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %226 = call double @sqrt(double noundef %225) #5
VisitInstr:   %227 = call double @sin(double noundef %222) #5
Check LatCell: 0
In Meet:   %227 = call double @sin(double noundef %222) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %227 = call double @sin(double noundef %222) #5
VisitInstr:   %228 = fmul double %226, %227
BinaryOp:   %228 = fmul double %226, %227
Check LatCell: 0
In Meet:   %228 = fmul double %226, %227, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %228 = fmul double %226, %227
VisitInstr:   %229 = call double @cos(double noundef %222) #5
Check LatCell: 0
In Meet:   %229 = call double @cos(double noundef %222) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %229 = call double @cos(double noundef %222) #5
VisitInstr:   %230 = call double @atan2(double noundef %228, double noundef %229) #5
Check LatCell: 0
In Meet:   %230 = call double @atan2(double noundef %228, double noundef %229) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %230 = call double @atan2(double noundef %228, double noundef %229) #5
VisitInstr:   %231 = fmul double 2.000000e+00, %230
BinaryOp:   %231 = fmul double 2.000000e+00, %230
Check LatCell: 0
In Meet:   %231 = fmul double 2.000000e+00, %230, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %231 = fmul double 2.000000e+00, %230
VisitInstr:   %232 = call double @cos(double noundef %213) #5
Check LatCell: 0
In Meet:   %232 = call double @cos(double noundef %213) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %232 = call double @cos(double noundef %213) #5
VisitInstr:   %233 = fneg double %54
UnaryOp:   %233 = fneg double %54
Check LatCell: 0
In Meet:   %233 = fneg double %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %233 = fneg double %54
VisitInstr:   %234 = call double @llvm.fmuladd.f64(double %233, double %232, double 1.000000e+00)
Check LatCell: 0
In Meet:   %234 = call double @llvm.fmuladd.f64(double %233, double %232, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %234 = call double @llvm.fmuladd.f64(double %233, double %232, double 1.000000e+00)
VisitInstr:   %235 = fmul double %172, %234
BinaryOp:   %235 = fmul double %172, %234
Check LatCell: 0
In Meet:   %235 = fmul double %172, %234, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %235 = fmul double %172, %234
VisitInstr:   %236 = sext i32 %1 to i64
UnaryOp:   %236 = sext i32 %1 to i64
Check LatCell: 0
In Meet:   %236 = sext i32 %1 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %236 = sext i32 %1 to i64
VisitInstr:   %237 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %236
GetElementPtr:   %237 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %236
Check LatCell: 0
In Meet:   %237 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %236, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %237 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %236
VisitInstr:   %238 = load double, ptr %237, align 8
Check LatCell: 0
In Meet:   %238 = load double, ptr %237, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %238 = load double, ptr %237, align 8
VisitInstr:   %239 = fdiv double 1.000000e+00, %238
BinaryOp:   %239 = fdiv double 1.000000e+00, %238
Check LatCell: 0
In Meet:   %239 = fdiv double 1.000000e+00, %238, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %239 = fdiv double 1.000000e+00, %238
VisitInstr:   %240 = fadd double 1.000000e+00, %239
BinaryOp:   %240 = fadd double 1.000000e+00, %239
Check LatCell: 0
In Meet:   %240 = fadd double 1.000000e+00, %239, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %240 = fadd double 1.000000e+00, %239
VisitInstr:   %241 = fmul double %172, %172
BinaryOp:   %241 = fmul double %172, %172
Check LatCell: 0
In Meet:   %241 = fmul double %172, %172, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %241 = fmul double %172, %172
VisitInstr:   %242 = fmul double %241, %172
BinaryOp:   %242 = fmul double %241, %172
Check LatCell: 0
In Meet:   %242 = fmul double %241, %172, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %242 = fmul double %241, %172
VisitInstr:   %243 = fdiv double %240, %242
BinaryOp:   %243 = fdiv double %240, %242
Check LatCell: 0
In Meet:   %243 = fdiv double %240, %242, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %243 = fdiv double %240, %242
VisitInstr:   %244 = call double @sqrt(double noundef %243) #5
Check LatCell: 0
In Meet:   %244 = call double @sqrt(double noundef %243) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %244 = call double @sqrt(double noundef %243) #5
VisitInstr:   %245 = fmul double 0x3F919D6D51A6B69A, %244
BinaryOp:   %245 = fmul double 0x3F919D6D51A6B69A, %244
Check LatCell: 0
In Meet:   %245 = fmul double 0x3F919D6D51A6B69A, %244, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %245 = fmul double 0x3F919D6D51A6B69A, %244
VisitInstr:   %246 = fdiv double %87, 2.000000e+00
BinaryOp:   %246 = fdiv double %87, 2.000000e+00
Check LatCell: 0
In Meet:   %246 = fdiv double %87, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %246 = fdiv double %87, 2.000000e+00
VisitInstr:   %247 = call double @sin(double noundef %246) #5
Check LatCell: 0
In Meet:   %247 = call double @sin(double noundef %246) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %247 = call double @sin(double noundef %246) #5
VisitInstr:   %248 = call double @cos(double noundef %104) #5
Check LatCell: 0
In Meet:   %248 = call double @cos(double noundef %104) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %248 = call double @cos(double noundef %104) #5
VisitInstr:   %249 = fmul double %247, %248
BinaryOp:   %249 = fmul double %247, %248
Check LatCell: 0
In Meet:   %249 = fmul double %247, %248, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %249 = fmul double %247, %248
VisitInstr:   %250 = call double @sin(double noundef %104) #5
Check LatCell: 0
In Meet:   %250 = call double @sin(double noundef %104) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %250 = call double @sin(double noundef %104) #5
VisitInstr:   %251 = fmul double %247, %250
BinaryOp:   %251 = fmul double %247, %250
Check LatCell: 0
In Meet:   %251 = fmul double %247, %250, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %251 = fmul double %247, %250
VisitInstr:   %252 = fadd double %231, %71
BinaryOp:   %252 = fadd double %231, %71
Check LatCell: 0
In Meet:   %252 = fadd double %231, %71, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %252 = fadd double %231, %71
VisitInstr:   %253 = call double @sin(double noundef %252) #5
Check LatCell: 0
In Meet:   %253 = call double @sin(double noundef %252) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %253 = call double @sin(double noundef %252) #5
VisitInstr:   %254 = call double @cos(double noundef %252) #5
Check LatCell: 0
In Meet:   %254 = call double @cos(double noundef %252) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %254 = call double @cos(double noundef %252) #5
VisitInstr:   %255 = fmul double %249, %253
BinaryOp:   %255 = fmul double %249, %253
Check LatCell: 0
In Meet:   %255 = fmul double %249, %253, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %255 = fmul double %249, %253
VisitInstr:   %256 = fneg double %255
UnaryOp:   %256 = fneg double %255
Check LatCell: 0
In Meet:   %256 = fneg double %255, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %256 = fneg double %255
VisitInstr:   %257 = call double @llvm.fmuladd.f64(double %251, double %254, double %256)
Check LatCell: 0
In Meet:   %257 = call double @llvm.fmuladd.f64(double %251, double %254, double %256), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %257 = call double @llvm.fmuladd.f64(double %251, double %254, double %256)
VisitInstr:   %258 = fmul double 2.000000e+00, %257
BinaryOp:   %258 = fmul double 2.000000e+00, %257
Check LatCell: 0
In Meet:   %258 = fmul double 2.000000e+00, %257, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %258 = fmul double 2.000000e+00, %257
VisitInstr:   %259 = fneg double %54
UnaryOp:   %259 = fneg double %54
Check LatCell: 0
In Meet:   %259 = fneg double %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %259 = fneg double %54
VisitInstr:   %260 = call double @llvm.fmuladd.f64(double %259, double %54, double 1.000000e+00)
Check LatCell: 0
In Meet:   %260 = call double @llvm.fmuladd.f64(double %259, double %54, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %260 = call double @llvm.fmuladd.f64(double %259, double %54, double 1.000000e+00)
VisitInstr:   %261 = call double @sqrt(double noundef %260) #5
Check LatCell: 0
In Meet:   %261 = call double @sqrt(double noundef %260) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %261 = call double @sqrt(double noundef %260) #5
VisitInstr:   %262 = fdiv double %172, %261
BinaryOp:   %262 = fdiv double %172, %261
Check LatCell: 0
In Meet:   %262 = fdiv double %172, %261, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %262 = fdiv double %172, %261
VisitInstr:   %263 = fdiv double %87, 2.000000e+00
BinaryOp:   %263 = fdiv double %87, 2.000000e+00
Check LatCell: 0
In Meet:   %263 = fdiv double %87, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %263 = fdiv double %87, 2.000000e+00
VisitInstr:   %264 = call double @cos(double noundef %263) #5
Check LatCell: 0
In Meet:   %264 = call double @cos(double noundef %263) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %264 = call double @cos(double noundef %263) #5
VisitInstr:   %265 = call double @sin(double noundef %71) #5
Check LatCell: 0
In Meet:   %265 = call double @sin(double noundef %71) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %265 = call double @sin(double noundef %71) #5
VisitInstr:   %266 = call double @llvm.fmuladd.f64(double %54, double %265, double %253)
Check LatCell: 0
In Meet:   %266 = call double @llvm.fmuladd.f64(double %54, double %265, double %253), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %266 = call double @llvm.fmuladd.f64(double %54, double %265, double %253)
VisitInstr:   %267 = fmul double %266, %262
BinaryOp:   %267 = fmul double %266, %262
Check LatCell: 0
In Meet:   %267 = fmul double %266, %262, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %267 = fmul double %266, %262
VisitInstr:   %268 = call double @cos(double noundef %71) #5
Check LatCell: 0
In Meet:   %268 = call double @cos(double noundef %71) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %268 = call double @cos(double noundef %71) #5
VisitInstr:   %269 = call double @llvm.fmuladd.f64(double %54, double %268, double %254)
Check LatCell: 0
In Meet:   %269 = call double @llvm.fmuladd.f64(double %54, double %268, double %254), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %269 = call double @llvm.fmuladd.f64(double %54, double %268, double %254)
VisitInstr:   %270 = fmul double %269, %262
BinaryOp:   %270 = fmul double %269, %262
Check LatCell: 0
In Meet:   %270 = fmul double %269, %262, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %270 = fmul double %269, %262
VisitInstr:   %271 = fmul double 2.000000e+00, %251
BinaryOp:   %271 = fmul double 2.000000e+00, %251
Check LatCell: 0
In Meet:   %271 = fmul double 2.000000e+00, %251, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %271 = fmul double 2.000000e+00, %251
VisitInstr:   %272 = fmul double %271, %249
BinaryOp:   %272 = fmul double %271, %249
Check LatCell: 0
In Meet:   %272 = fmul double %271, %249, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %272 = fmul double %271, %249
VisitInstr:   %273 = fneg double %258
UnaryOp:   %273 = fneg double %258
Check LatCell: 0
In Meet:   %273 = fneg double %258, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %273 = fneg double %258
VisitInstr:   %274 = call double @llvm.fmuladd.f64(double %273, double %251, double %254)
Check LatCell: 0
In Meet:   %274 = call double @llvm.fmuladd.f64(double %273, double %251, double %254), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %274 = call double @llvm.fmuladd.f64(double %273, double %251, double %254)
VisitInstr:   %275 = fmul double %235, %274
BinaryOp:   %275 = fmul double %235, %274
Check LatCell: 0
In Meet:   %275 = fmul double %235, %274, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %275 = fmul double %235, %274
VisitInstr:   %276 = call double @llvm.fmuladd.f64(double %258, double %249, double %253)
Check LatCell: 0
In Meet:   %276 = call double @llvm.fmuladd.f64(double %258, double %249, double %253), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %276 = call double @llvm.fmuladd.f64(double %258, double %249, double %253)
VisitInstr:   %277 = fmul double %235, %276
BinaryOp:   %277 = fmul double %235, %276
Check LatCell: 0
In Meet:   %277 = fmul double %235, %276, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %277 = fmul double %235, %276
VisitInstr:   %278 = fneg double %258
UnaryOp:   %278 = fneg double %258
Check LatCell: 0
In Meet:   %278 = fneg double %258, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %278 = fneg double %258
VisitInstr:   %279 = fmul double %278, %264
BinaryOp:   %279 = fmul double %278, %264
Check LatCell: 0
In Meet:   %279 = fmul double %278, %264, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %279 = fmul double %278, %264
VisitInstr:   %280 = fmul double %235, %279
BinaryOp:   %280 = fmul double %235, %279
Check LatCell: 0
In Meet:   %280 = fmul double %235, %279, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %280 = fmul double %235, %279
VisitInstr:   %281 = getelementptr inbounds [3 x double], ptr %2, i64 0
GetElementPtr:   %281 = getelementptr inbounds [3 x double], ptr %2, i64 0
Check LatCell: 0
In Meet:   %281 = getelementptr inbounds [3 x double], ptr %2, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %281 = getelementptr inbounds [3 x double], ptr %2, i64 0
VisitInstr:   %282 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 0
GetElementPtr:   %282 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 0
Check LatCell: 0
In Meet:   %282 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %282 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 0
VisitInstr:   store double %275, ptr %282, align 8
Check LatCell: 0
In Meet:   store double %275, ptr %282, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %275, ptr %282, align 8
VisitInstr:   %283 = fmul double %280, 0x3FD9752E50F4B399
BinaryOp:   %283 = fmul double %280, 0x3FD9752E50F4B399
Check LatCell: 0
In Meet:   %283 = fmul double %280, 0x3FD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %283 = fmul double %280, 0x3FD9752E50F4B399
VisitInstr:   %284 = fneg double %283
UnaryOp:   %284 = fneg double %283
Check LatCell: 0
In Meet:   %284 = fneg double %283, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %284 = fneg double %283
VisitInstr:   %285 = call double @llvm.fmuladd.f64(double %277, double 0x3FED5C0357681EF3, double %284)
Check LatCell: 0
In Meet:   %285 = call double @llvm.fmuladd.f64(double %277, double 0x3FED5C0357681EF3, double %284), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %285 = call double @llvm.fmuladd.f64(double %277, double 0x3FED5C0357681EF3, double %284)
VisitInstr:   %286 = getelementptr inbounds [3 x double], ptr %2, i64 0
GetElementPtr:   %286 = getelementptr inbounds [3 x double], ptr %2, i64 0
Check LatCell: 0
In Meet:   %286 = getelementptr inbounds [3 x double], ptr %2, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %286 = getelementptr inbounds [3 x double], ptr %2, i64 0
VisitInstr:   %287 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
GetElementPtr:   %287 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
Check LatCell: 0
In Meet:   %287 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %287 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
VisitInstr:   store double %285, ptr %287, align 8
Check LatCell: 0
In Meet:   store double %285, ptr %287, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %285, ptr %287, align 8
VisitInstr:   %288 = fmul double %280, 0x3FED5C0357681EF3
BinaryOp:   %288 = fmul double %280, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %288 = fmul double %280, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %288 = fmul double %280, 0x3FED5C0357681EF3
VisitInstr:   %289 = call double @llvm.fmuladd.f64(double %277, double 0x3FD9752E50F4B399, double %288)
Check LatCell: 0
In Meet:   %289 = call double @llvm.fmuladd.f64(double %277, double 0x3FD9752E50F4B399, double %288), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %289 = call double @llvm.fmuladd.f64(double %277, double 0x3FD9752E50F4B399, double %288)
VisitInstr:   %290 = getelementptr inbounds [3 x double], ptr %2, i64 0
GetElementPtr:   %290 = getelementptr inbounds [3 x double], ptr %2, i64 0
Check LatCell: 0
In Meet:   %290 = getelementptr inbounds [3 x double], ptr %2, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %290 = getelementptr inbounds [3 x double], ptr %2, i64 0
VisitInstr:   %291 = getelementptr inbounds [3 x double], ptr %290, i64 0, i64 2
GetElementPtr:   %291 = getelementptr inbounds [3 x double], ptr %290, i64 0, i64 2
Check LatCell: 0
In Meet:   %291 = getelementptr inbounds [3 x double], ptr %290, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %291 = getelementptr inbounds [3 x double], ptr %290, i64 0, i64 2
VisitInstr:   store double %289, ptr %291, align 8
Check LatCell: 0
In Meet:   store double %289, ptr %291, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %289, ptr %291, align 8
VisitInstr:   %292 = fmul double 2.000000e+00, %251
BinaryOp:   %292 = fmul double 2.000000e+00, %251
Check LatCell: 0
In Meet:   %292 = fmul double 2.000000e+00, %251, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %292 = fmul double 2.000000e+00, %251
VisitInstr:   %293 = call double @llvm.fmuladd.f64(double %292, double %251, double -1.000000e+00)
Check LatCell: 0
In Meet:   %293 = call double @llvm.fmuladd.f64(double %292, double %251, double -1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %293 = call double @llvm.fmuladd.f64(double %292, double %251, double -1.000000e+00)
VisitInstr:   %294 = fmul double %272, %270
BinaryOp:   %294 = fmul double %272, %270
Check LatCell: 0
In Meet:   %294 = fmul double %272, %270, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %294 = fmul double %272, %270
VisitInstr:   %295 = call double @llvm.fmuladd.f64(double %293, double %267, double %294)
Check LatCell: 0
In Meet:   %295 = call double @llvm.fmuladd.f64(double %293, double %267, double %294), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %295 = call double @llvm.fmuladd.f64(double %293, double %267, double %294)
VisitInstr:   %296 = fmul double %245, %295
BinaryOp:   %296 = fmul double %245, %295
Check LatCell: 0
In Meet:   %296 = fmul double %245, %295, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %296 = fmul double %245, %295
VisitInstr:   %297 = fmul double 2.000000e+00, %249
BinaryOp:   %297 = fmul double 2.000000e+00, %249
Check LatCell: 0
In Meet:   %297 = fmul double 2.000000e+00, %249, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %297 = fmul double 2.000000e+00, %249
VisitInstr:   %298 = fneg double %297
UnaryOp:   %298 = fneg double %297
Check LatCell: 0
In Meet:   %298 = fneg double %297, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %298 = fneg double %297
VisitInstr:   %299 = call double @llvm.fmuladd.f64(double %298, double %249, double 1.000000e+00)
Check LatCell: 0
In Meet:   %299 = call double @llvm.fmuladd.f64(double %298, double %249, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %299 = call double @llvm.fmuladd.f64(double %298, double %249, double 1.000000e+00)
VisitInstr:   %300 = fmul double %272, %267
BinaryOp:   %300 = fmul double %272, %267
Check LatCell: 0
In Meet:   %300 = fmul double %272, %267, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %300 = fmul double %272, %267
VisitInstr:   %301 = fneg double %300
UnaryOp:   %301 = fneg double %300
Check LatCell: 0
In Meet:   %301 = fneg double %300, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %301 = fneg double %300
VisitInstr:   %302 = call double @llvm.fmuladd.f64(double %299, double %270, double %301)
Check LatCell: 0
In Meet:   %302 = call double @llvm.fmuladd.f64(double %299, double %270, double %301), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %302 = call double @llvm.fmuladd.f64(double %299, double %270, double %301)
VisitInstr:   %303 = fmul double %245, %302
BinaryOp:   %303 = fmul double %245, %302
Check LatCell: 0
In Meet:   %303 = fmul double %245, %302, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %303 = fmul double %245, %302
VisitInstr:   %304 = fmul double 2.000000e+00, %264
BinaryOp:   %304 = fmul double 2.000000e+00, %264
Check LatCell: 0
In Meet:   %304 = fmul double 2.000000e+00, %264, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %304 = fmul double 2.000000e+00, %264
VisitInstr:   %305 = fmul double %249, %270
BinaryOp:   %305 = fmul double %249, %270
Check LatCell: 0
In Meet:   %305 = fmul double %249, %270, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %305 = fmul double %249, %270
VisitInstr:   %306 = call double @llvm.fmuladd.f64(double %251, double %267, double %305)
Check LatCell: 0
In Meet:   %306 = call double @llvm.fmuladd.f64(double %251, double %267, double %305), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %306 = call double @llvm.fmuladd.f64(double %251, double %267, double %305)
VisitInstr:   %307 = fmul double %304, %306
BinaryOp:   %307 = fmul double %304, %306
Check LatCell: 0
In Meet:   %307 = fmul double %304, %306, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %307 = fmul double %304, %306
VisitInstr:   %308 = fmul double %245, %307
BinaryOp:   %308 = fmul double %245, %307
Check LatCell: 0
In Meet:   %308 = fmul double %245, %307, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %308 = fmul double %245, %307
VisitInstr:   %309 = getelementptr inbounds [3 x double], ptr %2, i64 1
GetElementPtr:   %309 = getelementptr inbounds [3 x double], ptr %2, i64 1
Check LatCell: 0
In Meet:   %309 = getelementptr inbounds [3 x double], ptr %2, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %309 = getelementptr inbounds [3 x double], ptr %2, i64 1
VisitInstr:   %310 = getelementptr inbounds [3 x double], ptr %309, i64 0, i64 0
GetElementPtr:   %310 = getelementptr inbounds [3 x double], ptr %309, i64 0, i64 0
Check LatCell: 0
In Meet:   %310 = getelementptr inbounds [3 x double], ptr %309, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %310 = getelementptr inbounds [3 x double], ptr %309, i64 0, i64 0
VisitInstr:   store double %296, ptr %310, align 8
Check LatCell: 0
In Meet:   store double %296, ptr %310, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %296, ptr %310, align 8
VisitInstr:   %311 = fmul double %308, 0x3FD9752E50F4B399
BinaryOp:   %311 = fmul double %308, 0x3FD9752E50F4B399
Check LatCell: 0
In Meet:   %311 = fmul double %308, 0x3FD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %311 = fmul double %308, 0x3FD9752E50F4B399
VisitInstr:   %312 = fneg double %311
UnaryOp:   %312 = fneg double %311
Check LatCell: 0
In Meet:   %312 = fneg double %311, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %312 = fneg double %311
VisitInstr:   %313 = call double @llvm.fmuladd.f64(double %303, double 0x3FED5C0357681EF3, double %312)
Check LatCell: 0
In Meet:   %313 = call double @llvm.fmuladd.f64(double %303, double 0x3FED5C0357681EF3, double %312), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %313 = call double @llvm.fmuladd.f64(double %303, double 0x3FED5C0357681EF3, double %312)
VisitInstr:   %314 = getelementptr inbounds [3 x double], ptr %2, i64 1
GetElementPtr:   %314 = getelementptr inbounds [3 x double], ptr %2, i64 1
Check LatCell: 0
In Meet:   %314 = getelementptr inbounds [3 x double], ptr %2, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %314 = getelementptr inbounds [3 x double], ptr %2, i64 1
VisitInstr:   %315 = getelementptr inbounds [3 x double], ptr %314, i64 0, i64 1
GetElementPtr:   %315 = getelementptr inbounds [3 x double], ptr %314, i64 0, i64 1
Check LatCell: 0
In Meet:   %315 = getelementptr inbounds [3 x double], ptr %314, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %315 = getelementptr inbounds [3 x double], ptr %314, i64 0, i64 1
VisitInstr:   store double %313, ptr %315, align 8
Check LatCell: 0
In Meet:   store double %313, ptr %315, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %313, ptr %315, align 8
VisitInstr:   %316 = fmul double %308, 0x3FED5C0357681EF3
BinaryOp:   %316 = fmul double %308, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %316 = fmul double %308, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %316 = fmul double %308, 0x3FED5C0357681EF3
VisitInstr:   %317 = call double @llvm.fmuladd.f64(double %303, double 0x3FD9752E50F4B399, double %316)
Check LatCell: 0
In Meet:   %317 = call double @llvm.fmuladd.f64(double %303, double 0x3FD9752E50F4B399, double %316), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %317 = call double @llvm.fmuladd.f64(double %303, double 0x3FD9752E50F4B399, double %316)
VisitInstr:   %318 = getelementptr inbounds [3 x double], ptr %2, i64 1
GetElementPtr:   %318 = getelementptr inbounds [3 x double], ptr %2, i64 1
Check LatCell: 0
In Meet:   %318 = getelementptr inbounds [3 x double], ptr %2, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %318 = getelementptr inbounds [3 x double], ptr %2, i64 1
VisitInstr:   %319 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 2
GetElementPtr:   %319 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 2
Check LatCell: 0
In Meet:   %319 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %319 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 2
VisitInstr:   store double %317, ptr %319, align 8
Check LatCell: 0
In Meet:   store double %317, ptr %319, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %317, ptr %319, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Removing:   %214 = add nsw i32 %.2, 1, replacing with: i32 1
Removing:   %.2 = phi i32 [ 0, %200 ], [ 1, %219 ], replacing with: i32 0
Removing:   %214 = icmp sge i32 1, 10, replacing with: i1 false
UnitSCCP: 3 instructions removed, 0 basic blocks unreachable, 3 instructions simplified
UnitSCCP running on radecdist
Visiting BB: 
VisitInstr:   %3 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %3 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %3 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %4 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 0
GetElementPtr:   %4 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 0
Check LatCell: 0
In Meet:   %4 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 0
VisitInstr:   %5 = load double, ptr %4, align 8
Check LatCell: 0
In Meet:   %5 = load double, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = load double, ptr %4, align 8
VisitInstr:   %6 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %6 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %6 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
GetElementPtr:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
VisitInstr:   %8 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %8 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = load double, ptr %7, align 8
VisitInstr:   %9 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %9 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %9 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0, i64 1
GetElementPtr:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0, i64 1
Check LatCell: 0
In Meet:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0, i64 1
VisitInstr:   %11 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %11 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = load double, ptr %10, align 8
VisitInstr:   %12 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %12 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %12 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 1
GetElementPtr:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 1
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds [3 x double], ptr %12, i64 0, i64 1
VisitInstr:   %14 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %13, align 8
VisitInstr:   %15 = fmul double %11, %14
BinaryOp:   %15 = fmul double %11, %14
Check LatCell: 0
In Meet:   %15 = fmul double %11, %14, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = fmul double %11, %14
VisitInstr:   %16 = call double @llvm.fmuladd.f64(double %5, double %8, double %15)
Check LatCell: 0
In Meet:   %16 = call double @llvm.fmuladd.f64(double %5, double %8, double %15), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = call double @llvm.fmuladd.f64(double %5, double %8, double %15)
VisitInstr:   %17 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %17 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0, i64 2
GetElementPtr:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0, i64 2
Check LatCell: 0
In Meet:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0, i64 2
VisitInstr:   %19 = load double, ptr %18, align 8
Check LatCell: 0
In Meet:   %19 = load double, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = load double, ptr %18, align 8
VisitInstr:   %20 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %20 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
GetElementPtr:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds [3 x double], ptr %20, i64 0, i64 2
VisitInstr:   %22 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %21, align 8
VisitInstr:   %23 = call double @llvm.fmuladd.f64(double %19, double %22, double %16)
Check LatCell: 0
In Meet:   %23 = call double @llvm.fmuladd.f64(double %19, double %22, double %16), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = call double @llvm.fmuladd.f64(double %19, double %22, double %16)
VisitInstr:   %24 = call double @sqrt(double noundef %23) #5
Check LatCell: 0
In Meet:   %24 = call double @sqrt(double noundef %23) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = call double @sqrt(double noundef %23) #5
VisitInstr:   %25 = getelementptr inbounds double, ptr %1, i64 2
GetElementPtr:   %25 = getelementptr inbounds double, ptr %1, i64 2
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds double, ptr %1, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds double, ptr %1, i64 2
VisitInstr:   store double %24, ptr %25, align 8
Check LatCell: 0
In Meet:   store double %24, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %24, ptr %25, align 8
VisitInstr:   %26 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %26 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 1
GetElementPtr:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 1
Check LatCell: 0
In Meet:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = getelementptr inbounds [3 x double], ptr %26, i64 0, i64 1
VisitInstr:   %28 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %28 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = load double, ptr %27, align 8
VisitInstr:   %29 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %29 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %30 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 0
GetElementPtr:   %30 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 0
Check LatCell: 0
In Meet:   %30 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 0
VisitInstr:   %31 = load double, ptr %30, align 8
Check LatCell: 0
In Meet:   %31 = load double, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = load double, ptr %30, align 8
VisitInstr:   %32 = call double @atan2(double noundef %28, double noundef %31) #5
Check LatCell: 0
In Meet:   %32 = call double @atan2(double noundef %28, double noundef %31) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = call double @atan2(double noundef %28, double noundef %31) #5
VisitInstr:   %33 = fmul double %32, 0x400E8EC8A4AEACC4
BinaryOp:   %33 = fmul double %32, 0x400E8EC8A4AEACC4
Check LatCell: 0
In Meet:   %33 = fmul double %32, 0x400E8EC8A4AEACC4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = fmul double %32, 0x400E8EC8A4AEACC4
VisitInstr:   %34 = getelementptr inbounds double, ptr %1, i64 0
GetElementPtr:   %34 = getelementptr inbounds double, ptr %1, i64 0
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds double, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds double, ptr %1, i64 0
VisitInstr:   store double %33, ptr %34, align 8
Check LatCell: 0
In Meet:   store double %33, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %33, ptr %34, align 8
VisitInstr:   %35 = getelementptr inbounds double, ptr %1, i64 0
GetElementPtr:   %35 = getelementptr inbounds double, ptr %1, i64 0
Check LatCell: 0
In Meet:   %35 = getelementptr inbounds double, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = getelementptr inbounds double, ptr %1, i64 0
VisitInstr:   %36 = load double, ptr %35, align 8
Check LatCell: 0
In Meet:   %36 = load double, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = load double, ptr %35, align 8
VisitInstr:   %37 = fcmp olt double %36, 0.000000e+00
CmpInst:   %37 = fcmp olt double %36, 0.000000e+00
Check LatCell: 0
In Meet:   %37 = fcmp olt double %36, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = fcmp olt double %36, 0.000000e+00
VisitInstr:   br i1 %37, label %38, label %42
BranchInst:   br i1 %37, label %38, label %42
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6bded0, 0x55c6dc6c00e0, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc6bded0, 0x55c6dc6c00e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %39 = getelementptr inbounds double, ptr %1, i64 0
GetElementPtr:   %39 = getelementptr inbounds double, ptr %1, i64 0
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds double, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds double, ptr %1, i64 0
VisitInstr:   %40 = load double, ptr %39, align 8
Check LatCell: 0
In Meet:   %40 = load double, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load double, ptr %39, align 8
VisitInstr:   %41 = fadd double %40, 2.400000e+01
BinaryOp:   %41 = fadd double %40, 2.400000e+01
Check LatCell: 0
In Meet:   %41 = fadd double %40, 2.400000e+01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = fadd double %40, 2.400000e+01
VisitInstr:   store double %41, ptr %39, align 8
Check LatCell: 0
In Meet:   store double %41, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %41, ptr %39, align 8
VisitInstr:   br label %42
BranchInst:   br label %42
In AddEdge: 0x55c6dc6bff60, 0x55c6dc6c03f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %43 = getelementptr inbounds [3 x double], ptr %0, i64 0
GetElementPtr:   %43 = getelementptr inbounds [3 x double], ptr %0, i64 0
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds [3 x double], ptr %0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %44 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2
GetElementPtr:   %44 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2
VisitInstr:   %45 = load double, ptr %44, align 8
Check LatCell: 0
In Meet:   %45 = load double, ptr %44, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load double, ptr %44, align 8
VisitInstr:   %46 = getelementptr inbounds double, ptr %1, i64 2
GetElementPtr:   %46 = getelementptr inbounds double, ptr %1, i64 2
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds double, ptr %1, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds double, ptr %1, i64 2
VisitInstr:   %47 = load double, ptr %46, align 8
Check LatCell: 0
In Meet:   %47 = load double, ptr %46, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load double, ptr %46, align 8
VisitInstr:   %48 = fdiv double %45, %47
BinaryOp:   %48 = fdiv double %45, %47
Check LatCell: 0
In Meet:   %48 = fdiv double %45, %47, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = fdiv double %45, %47
VisitInstr:   %49 = call double @asin(double noundef %48) #5
Check LatCell: 0
In Meet:   %49 = call double @asin(double noundef %48) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = call double @asin(double noundef %48) #5
VisitInstr:   %50 = fmul double %49, 0x404CA5DC1A63C1F8
BinaryOp:   %50 = fmul double %49, 0x404CA5DC1A63C1F8
Check LatCell: 0
In Meet:   %50 = fmul double %49, 0x404CA5DC1A63C1F8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = fmul double %49, 0x404CA5DC1A63C1F8
VisitInstr:   %51 = getelementptr inbounds double, ptr %1, i64 1
GetElementPtr:   %51 = getelementptr inbounds double, ptr %1, i64 1
Check LatCell: 0
In Meet:   %51 = getelementptr inbounds double, ptr %1, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = getelementptr inbounds double, ptr %1, i64 1
VisitInstr:   store double %50, ptr %51, align 8
Check LatCell: 0
In Meet:   store double %50, ptr %51, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %50, ptr %51, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %43 = getelementptr inbounds [3 x double], ptr %0, i64 0
VisitInstr:   %44 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2
VisitInstr:   %45 = load double, ptr %44, align 8
VisitInstr:   %46 = getelementptr inbounds double, ptr %1, i64 2
VisitInstr:   %47 = load double, ptr %46, align 8
VisitInstr:   %48 = fdiv double %45, %47
VisitInstr:   %49 = call double @asin(double noundef %48) #5
VisitInstr:   %50 = fmul double %49, 0x404CA5DC1A63C1F8
VisitInstr:   %51 = getelementptr inbounds double, ptr %1, i64 1
VisitInstr:   store double %50, ptr %51, align 8
VisitInstr:   ret void
UnitSCCP: 3 instructions removed, 0 basic blocks unreachable, 3 instructions simplified
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = alloca [2 x double], align 16
Check LatCell: 0
In Meet:   %3 = alloca [2 x double], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca [2 x double], align 16
VisitInstr:   %4 = alloca [2 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %4 = alloca [2 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca [2 x [3 x double]], align 16
VisitInstr:   %5 = alloca [8 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %5 = alloca [8 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca [8 x [3 x double]], align 16
VisitInstr:   %6 = icmp sgt i32 %0, 1
CmpInst:   %6 = icmp sgt i32 %0, 1
Check LatCell: 0
In Meet:   %6 = icmp sgt i32 %0, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = icmp sgt i32 %0, 1
VisitInstr:   br i1 %6, label %7, label %20
BranchInst:   br i1 %6, label %7, label %20
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c0e90, 0x55c6dc6c1880, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc6c0e90, 0x55c6dc6c1880, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %8
BranchInst:   br label %8
In AddEdge: 0x55c6dc6c0ff0, 0x55c6dc6c19d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %21
BranchInst:   br label %21
In AddEdge: 0x55c6dc6c1790, 0x55c6dc6c2700, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
PHI:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 0
In Meet:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
VisitInstr:   %9 = icmp slt i32 %.02, %0
CmpInst:   %9 = icmp slt i32 %.02, %0
Check LatCell: 0
In Meet:   %9 = icmp slt i32 %.02, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = icmp slt i32 %.02, %0
VisitInstr:   br i1 %9, label %10, label %19
BranchInst:   br i1 %9, label %10, label %19
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c1960, 0x55c6dc6c1c40, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc6c1960, 0x55c6dc6c1c40, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
PHI:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
VisitInstr:   %22 = icmp slt i32 %.13, 20
CmpInst:   %22 = icmp slt i32 %.13, 20
Check LatCell: 0
In Meet:   %22 = icmp slt i32 %.13, 20, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %22 = icmp slt i32 %.13, 20
VisitInstr:   br i1 %22, label %23, label %49
BranchInst:   br i1 %22, label %23, label %49
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6c2690, 0x55c6dc6c2980, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %11 = getelementptr inbounds ptr, ptr %1, i64 1
GetElementPtr:   %11 = getelementptr inbounds ptr, ptr %1, i64 1
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds ptr, ptr %1, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds ptr, ptr %1, i64 1
VisitInstr:   %12 = load ptr, ptr %11, align 8
Check LatCell: 0
In Meet:   %12 = load ptr, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load ptr, ptr %11, align 8
VisitInstr:   %13 = call i32 @strcmp(ptr noundef %12, ptr noundef @.str) #5
Check LatCell: 0
In Meet:   %13 = call i32 @strcmp(ptr noundef %12, ptr noundef @.str) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = call i32 @strcmp(ptr noundef %12, ptr noundef @.str) #5
VisitInstr:   %14 = icmp ne i32 %13, 0
CmpInst:   %14 = icmp ne i32 %13, 0
Check LatCell: 0
In Meet:   %14 = icmp ne i32 %13, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = icmp ne i32 %13, 0
VisitInstr:   br i1 %14, label %16, label %15
BranchInst:   br i1 %14, label %16, label %15
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c1b00, 0x55c6dc6c2110, 0
Adding edge:  -> 
In AddEdge: 0x55c6dc6c1b00, 0x55c6dc6c2110, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %20
BranchInst:   br label %20
In AddEdge: 0x55c6dc6c1b50, 0x55c6dc6c25b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %24 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
GetElementPtr:   %24 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Check LatCell: 0
In Meet:   %24 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
VisitInstr:   store double 0x4142B42C80000000, ptr %24, align 16
Check LatCell: 0
In Meet:   store double 0x4142B42C80000000, ptr %24, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0x4142B42C80000000, ptr %24, align 16
VisitInstr:   %25 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
GetElementPtr:   %25 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
VisitInstr:   store double 0.000000e+00, ptr %25, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %25, align 8
VisitInstr:   br label %26
BranchInst:   br label %26
In AddEdge: 0x55c6dc6c2880, 0x55c6dc6c2d70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %17
BranchInst:   br label %17
In AddEdge: 0x55c6dc6c1fd0, 0x55c6dc6c2300, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %19
BranchInst:   br label %19
In AddEdge: 0x55c6dc6c2020, 0x55c6dc6c2240, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
PHI:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
VisitInstr:   %27 = icmp slt i32 %.01, 36525
CmpInst:   %27 = icmp slt i32 %.01, 36525
Check LatCell: 0
In Meet:   %27 = icmp slt i32 %.01, 36525, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %27 = icmp slt i32 %.01, 36525
VisitInstr:   br i1 %27, label %28, label %46
BranchInst:   br i1 %27, label %28, label %46
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6c2d00, 0x55c6dc6c3030, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %18 = add nsw i32 %.02, 1
BinaryOp:   %18 = add nsw i32 %.02, 1
Check LatCell: 0
In Meet:   %18 = add nsw i32 %.02, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6c8160)
Lat2.second: i32 2
Meet:   %18 = add nsw i32 %.02, 1
Adding SSA:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
VisitInstr:   br label %8, !llvm.loop !6
BranchInst:   br label %8, !llvm.loop !6
In AddEdge: 0x55c6dc6c2290, 0x55c6dc6c2500, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
GetElementPtr:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
VisitInstr:   %30 = load double, ptr %29, align 16
Check LatCell: 0
In Meet:   %30 = load double, ptr %29, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = load double, ptr %29, align 16
VisitInstr:   %31 = fadd double %30, 1.000000e+00
BinaryOp:   %31 = fadd double %30, 1.000000e+00
Check LatCell: 0
In Meet:   %31 = fadd double %30, 1.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = fadd double %30, 1.000000e+00
VisitInstr:   store double %31, ptr %29, align 16
Check LatCell: 0
In Meet:   store double %31, ptr %29, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %31, ptr %29, align 16
VisitInstr:   br label %32
BranchInst:   br label %32
In AddEdge: 0x55c6dc6c2ef0, 0x55c6dc6c33d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
PHI:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
VisitInstr:   %33 = icmp slt i32 %.0, 8
CmpInst:   %33 = icmp slt i32 %.0, 8
Check LatCell: 0
In Meet:   %33 = icmp slt i32 %.0, 8, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %33 = icmp slt i32 %.0, 8
VisitInstr:   br i1 %33, label %34, label %43
BranchInst:   br i1 %33, label %34, label %43
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6c3360, 0x55c6dc6c3660, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %35 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
GetElementPtr:   %35 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Check LatCell: 0
In Meet:   %35 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
VisitInstr:   %36 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
GetElementPtr:   %36 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
VisitInstr:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36)
Check LatCell: 0
In Meet:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36)
VisitInstr:   %37 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
GetElementPtr:   %37 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Check LatCell: 0
In Meet:   %37 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
VisitInstr:   %38 = sext i32 %.0 to i64
UnaryOp:   %38 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %38 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %38 = sext i32 %.0 to i64
VisitInstr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
GetElementPtr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
VisitInstr:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 0
GetElementPtr:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 0
Check LatCell: 0
In Meet:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 0
VisitInstr:   call void @radecdist(ptr noundef %37, ptr noundef %40)
Check LatCell: 0
In Meet:   call void @radecdist(ptr noundef %37, ptr noundef %40), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @radecdist(ptr noundef %37, ptr noundef %40)
VisitInstr:   br label %41
BranchInst:   br label %41
In AddEdge: 0x55c6dc6c3520, 0x55c6dc6c3ea0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %42 = add nsw i32 %.0, 1
BinaryOp:   %42 = add nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %42 = add nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %42 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
VisitInstr:   br label %32, !llvm.loop !8
BranchInst:   br label %32, !llvm.loop !8
In AddEdge: 0x55c6dc6c3e30, 0x55c6dc6c40a0, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
VisitInstr:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
PHI:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
PHI LatOp: 0, 0x55c6dc694a70
PHI LatOp: 0, 0x55c6dc6c8160
Check LatCell: 1
In Meet:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ], Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
Adding SSA:   %18 = add nsw i32 %.02, 1
Adding SSA:   %9 = icmp slt i32 %.02, %0
Visiting SSA:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
VisitInstr:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
PHI:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
PHI LatOp: 0, 0x55c6dc6a86d0
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ], Lat1: (0, 0x55c6dc6a86d0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
Adding SSA:   %42 = add nsw i32 %.0, 1
Adding SSA:   %38 = sext i32 %.0 to i64
Adding SSA:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36)
Adding SSA:   %33 = icmp slt i32 %.0, 8
Visiting SSA:   %18 = add nsw i32 %.02, 1
VisitInstr:   %18 = add nsw i32 %.02, 1
BinaryOp:   %18 = add nsw i32 %.02, 1
Check LatCell: 1
In Meet:   %18 = add nsw i32 %.02, 1, Lat1: (0, 0x55c6dc6c8160), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %18 = add nsw i32 %.02, 1
Adding SSA:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
Visiting SSA:   %9 = icmp slt i32 %.02, %0
VisitInstr:   %9 = icmp slt i32 %.02, %0
Visiting SSA:   %42 = add nsw i32 %.0, 1
VisitInstr:   %42 = add nsw i32 %.0, 1
BinaryOp:   %42 = add nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %42 = add nsw i32 %.0, 1, Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %42 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
Visiting SSA:   %38 = sext i32 %.0 to i64
VisitInstr:   %38 = sext i32 %.0 to i64
UnaryOp:   %38 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %38 = sext i32 %.0 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %38 = sext i32 %.0 to i64
Adding SSA:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Visiting SSA:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36)
VisitInstr:   call void @planetpv(ptr noundef %35, i32 noundef %.0, ptr noundef %36)
Visiting SSA:   %33 = icmp slt i32 %.0, 8
VisitInstr:   %33 = icmp slt i32 %.0, 8
CmpInst:   %33 = icmp slt i32 %.0, 8
Check LatCell: 1
In Meet:   %33 = icmp slt i32 %.0, 8, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %33 = icmp slt i32 %.0, 8
Adding SSA:   br i1 %33, label %34, label %43
Visiting SSA:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
VisitInstr:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
Visiting SSA:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
VisitInstr:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
Visiting SSA:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
VisitInstr:   %39 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %38
Visiting SSA:   br i1 %33, label %34, label %43
VisitInstr:   br i1 %33, label %34, label %43
BranchInst:   br i1 %33, label %34, label %43
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c3360, 0x55c6dc6c3660, 0
In AddEdge: 0x55c6dc6c3360, 0x55c6dc6c3660, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %44
BranchInst:   br label %44
In AddEdge: 0x55c6dc6c3570, 0x55c6dc6c41e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %45 = add nsw i32 %.01, 1
BinaryOp:   %45 = add nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %45 = add nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %45 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
VisitInstr:   br label %26, !llvm.loop !9
BranchInst:   br label %26, !llvm.loop !9
In AddEdge: 0x55c6dc6c4170, 0x55c6dc6c43e0, 0
Adding edge:  -> 
Visiting SSA:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
VisitInstr:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
PHI:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
PHI LatOp: 0, 0x55c6dc6a86d0
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ], Lat1: (0, 0x55c6dc6a86d0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
Adding SSA:   %45 = add nsw i32 %.01, 1
Adding SSA:   %27 = icmp slt i32 %.01, 36525
Visiting SSA:   %45 = add nsw i32 %.01, 1
VisitInstr:   %45 = add nsw i32 %.01, 1
BinaryOp:   %45 = add nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %45 = add nsw i32 %.01, 1, Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %45 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
Visiting SSA:   %27 = icmp slt i32 %.01, 36525
VisitInstr:   %27 = icmp slt i32 %.01, 36525
CmpInst:   %27 = icmp slt i32 %.01, 36525
Check LatCell: 1
In Meet:   %27 = icmp slt i32 %.01, 36525, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %27 = icmp slt i32 %.01, 36525
Adding SSA:   br i1 %27, label %28, label %46
Visiting SSA:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
VisitInstr:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
Visiting SSA:   br i1 %27, label %28, label %46
VisitInstr:   br i1 %27, label %28, label %46
BranchInst:   br i1 %27, label %28, label %46
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c2d00, 0x55c6dc6c3030, 0
In AddEdge: 0x55c6dc6c2d00, 0x55c6dc6c3030, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %47
BranchInst:   br label %47
In AddEdge: 0x55c6dc6c2f40, 0x55c6dc6c4520, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %48 = add nsw i32 %.13, 1
BinaryOp:   %48 = add nsw i32 %.13, 1
Check LatCell: 0
In Meet:   %48 = add nsw i32 %.13, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %48 = add nsw i32 %.13, 1
Adding SSA:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
VisitInstr:   br label %21, !llvm.loop !10
BranchInst:   br label %21, !llvm.loop !10
In AddEdge: 0x55c6dc6c44b0, 0x55c6dc6c4720, 0
Adding edge:  -> 
Visiting SSA:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
VisitInstr:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
PHI:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
PHI LatOp: 0, 0x55c6dc6a86d0
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 1
In Meet:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ], Lat1: (0, 0x55c6dc6a86d0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
Adding SSA:   %48 = add nsw i32 %.13, 1
Adding SSA:   %22 = icmp slt i32 %.13, 20
Visiting SSA:   %48 = add nsw i32 %.13, 1
VisitInstr:   %48 = add nsw i32 %.13, 1
BinaryOp:   %48 = add nsw i32 %.13, 1
Check LatCell: 1
In Meet:   %48 = add nsw i32 %.13, 1, Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %48 = add nsw i32 %.13, 1
Adding SSA:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
Visiting SSA:   %22 = icmp slt i32 %.13, 20
VisitInstr:   %22 = icmp slt i32 %.13, 20
CmpInst:   %22 = icmp slt i32 %.13, 20
Check LatCell: 1
In Meet:   %22 = icmp slt i32 %.13, 20, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %22 = icmp slt i32 %.13, 20
Adding SSA:   br i1 %22, label %23, label %49
Visiting SSA:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
VisitInstr:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
Visiting SSA:   br i1 %22, label %23, label %49
VisitInstr:   br i1 %22, label %23, label %49
BranchInst:   br i1 %22, label %23, label %49
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c2690, 0x55c6dc6c2980, 0
In AddEdge: 0x55c6dc6c2690, 0x55c6dc6c2980, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %50
BranchInst:   br label %50
In AddEdge: 0x55c6dc6c28d0, 0x55c6dc6c48f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
PHI:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
PHI LatOp: 0, 0x55c6dc6a86d0
Check LatCell: 0
In Meet:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ], Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a86d0)
Lat2.second: i32 0
Meet:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
VisitInstr:   %51 = icmp slt i32 %.1, 8
CmpInst:   %51 = icmp slt i32 %.1, 8
Check LatCell: 0
In Meet:   %51 = icmp slt i32 %.1, 8, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6a9130)
Lat2.second: i1 true
Meet:   %51 = icmp slt i32 %.1, 8
VisitInstr:   br i1 %51, label %52, label %68
BranchInst:   br i1 %51, label %52, label %68
In BranchInst: 0, 0x55c6dc6a9130
In AddEdge: 0x55c6dc6c4880, 0x55c6dc6c4b80, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %53 = sext i32 %.1 to i64
UnaryOp:   %53 = sext i32 %.1 to i64
Check LatCell: 0
In Meet:   %53 = sext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %53 = sext i32 %.1 to i64
VisitInstr:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
GetElementPtr:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
VisitInstr:   %55 = getelementptr inbounds [3 x double], ptr %54, i64 0, i64 0
GetElementPtr:   %55 = getelementptr inbounds [3 x double], ptr %54, i64 0, i64 0
Check LatCell: 0
In Meet:   %55 = getelementptr inbounds [3 x double], ptr %54, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = getelementptr inbounds [3 x double], ptr %54, i64 0, i64 0
VisitInstr:   %56 = load double, ptr %55, align 8
Check LatCell: 0
In Meet:   %56 = load double, ptr %55, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load double, ptr %55, align 8
VisitInstr:   %57 = sext i32 %.1 to i64
UnaryOp:   %57 = sext i32 %.1 to i64
Check LatCell: 0
In Meet:   %57 = sext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %57 = sext i32 %.1 to i64
VisitInstr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
GetElementPtr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
Check LatCell: 0
In Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
VisitInstr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
GetElementPtr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
Check LatCell: 0
In Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
VisitInstr:   %60 = load double, ptr %59, align 8
Check LatCell: 0
In Meet:   %60 = load double, ptr %59, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load double, ptr %59, align 8
VisitInstr:   %61 = sext i32 %.1 to i64
UnaryOp:   %61 = sext i32 %.1 to i64
Check LatCell: 0
In Meet:   %61 = sext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc6bb070)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %61 = sext i32 %.1 to i64
VisitInstr:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
GetElementPtr:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
Check LatCell: 0
In Meet:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
VisitInstr:   %63 = getelementptr inbounds [3 x double], ptr %62, i64 0, i64 2
GetElementPtr:   %63 = getelementptr inbounds [3 x double], ptr %62, i64 0, i64 2
Check LatCell: 0
In Meet:   %63 = getelementptr inbounds [3 x double], ptr %62, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = getelementptr inbounds [3 x double], ptr %62, i64 0, i64 2
VisitInstr:   %64 = load double, ptr %63, align 8
Check LatCell: 0
In Meet:   %64 = load double, ptr %63, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = load double, ptr %63, align 8
VisitInstr:   %65 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %56, double noundef %60, double noundef %64)
Check LatCell: 0
In Meet:   %65 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %56, double noundef %60, double noundef %64), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %56, double noundef %60, double noundef %64)
VisitInstr:   br label %66
BranchInst:   br label %66
In AddEdge: 0x55c6dc6c4a40, 0x55c6dc6c5680, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %67 = add nsw i32 %.1, 1
BinaryOp:   %67 = add nsw i32 %.1, 1
Check LatCell: 0
In Meet:   %67 = add nsw i32 %.1, 1, Lat1: (1, 0x0), Lat2: (0, 0x55c6dc694a70)
Lat2.second: i32 1
Meet:   %67 = add nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
VisitInstr:   br label %50, !llvm.loop !11
BranchInst:   br label %50, !llvm.loop !11
In AddEdge: 0x55c6dc6c5610, 0x55c6dc6c5880, 0
Adding edge:  -> 
Visiting SSA:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
VisitInstr:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
PHI:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
PHI LatOp: 0, 0x55c6dc6a86d0
PHI LatOp: 0, 0x55c6dc694a70
Check LatCell: 1
In Meet:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ], Lat1: (0, 0x55c6dc6a86d0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
Adding SSA:   %67 = add nsw i32 %.1, 1
Adding SSA:   %61 = sext i32 %.1 to i64
Adding SSA:   %57 = sext i32 %.1 to i64
Adding SSA:   %53 = sext i32 %.1 to i64
Adding SSA:   %51 = icmp slt i32 %.1, 8
Visiting SSA:   %67 = add nsw i32 %.1, 1
VisitInstr:   %67 = add nsw i32 %.1, 1
BinaryOp:   %67 = add nsw i32 %.1, 1
Check LatCell: 1
In Meet:   %67 = add nsw i32 %.1, 1, Lat1: (0, 0x55c6dc694a70), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %67 = add nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
Visiting SSA:   %61 = sext i32 %.1 to i64
VisitInstr:   %61 = sext i32 %.1 to i64
UnaryOp:   %61 = sext i32 %.1 to i64
Check LatCell: 1
In Meet:   %61 = sext i32 %.1 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %61 = sext i32 %.1 to i64
Adding SSA:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
Visiting SSA:   %57 = sext i32 %.1 to i64
VisitInstr:   %57 = sext i32 %.1 to i64
UnaryOp:   %57 = sext i32 %.1 to i64
Check LatCell: 1
In Meet:   %57 = sext i32 %.1 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %57 = sext i32 %.1 to i64
Adding SSA:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
Visiting SSA:   %53 = sext i32 %.1 to i64
VisitInstr:   %53 = sext i32 %.1 to i64
UnaryOp:   %53 = sext i32 %.1 to i64
Check LatCell: 1
In Meet:   %53 = sext i32 %.1 to i64, Lat1: (0, 0x55c6dc6bb070), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %53 = sext i32 %.1 to i64
Adding SSA:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
Visiting SSA:   %51 = icmp slt i32 %.1, 8
VisitInstr:   %51 = icmp slt i32 %.1, 8
CmpInst:   %51 = icmp slt i32 %.1, 8
Check LatCell: 1
In Meet:   %51 = icmp slt i32 %.1, 8, Lat1: (0, 0x55c6dc6a9130), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %51 = icmp slt i32 %.1, 8
Adding SSA:   br i1 %51, label %52, label %68
Visiting SSA:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
VisitInstr:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
Visiting SSA:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
VisitInstr:   %62 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %61
Visiting SSA:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
VisitInstr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %57
Visiting SSA:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
VisitInstr:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %5, i64 0, i64 %53
Visiting SSA:   br i1 %51, label %52, label %68
VisitInstr:   br i1 %51, label %52, label %68
BranchInst:   br i1 %51, label %52, label %68
In BranchInst: -1, 0x0
In AddEdge: 0x55c6dc6c4880, 0x55c6dc6c4b80, 0
In AddEdge: 0x55c6dc6c4880, 0x55c6dc6c4b80, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %69 = load ptr, ptr @stdout, align 8
Check LatCell: 0
In Meet:   %69 = load ptr, ptr @stdout, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = load ptr, ptr @stdout, align 8
VisitInstr:   %70 = call i32 @fflush(ptr noundef %69)
Check LatCell: 0
In Meet:   %70 = call i32 @fflush(ptr noundef %69), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = call i32 @fflush(ptr noundef %69)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
UnitSCCP: 3 instructions removed, 0 basic blocks unreachable, 3 instructions simplified
----------------------------------------
Running licm only: almabench.c
UnitLICM running on anpm
******************************************************
UnitLoopAnalysis running on anpm
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitLICM running on planetpv
******************************************************
UnitLoopAnalysis running on planetpv
[LoopLoopAnalysis] parent loop header is:   %.03 = phi i32 [ 0, %3 ], [ %152, %151 ]
[LoopLoopAnalysis] parent loop header is:   %.14 = phi i32 [ 8, %153 ], [ %199, %198 ]
[LoopLoopAnalysis] parent loop header is:   %.2 = phi i32 [ 0, %200 ], [ %214, %220 ]
Instruction to be moved:   %109 = sext i32 %1 to i64
Instruction to be moved:   %110 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %106
Instruction to be moved:   %115 = sext i32 %1 to i64
Instruction to be moved:   %116 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %108
Instruction to be moved:   %121 = sext i32 %1 to i64
Instruction to be moved:   %122 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %110
Instruction to be moved:   %127 = sext i32 %1 to i64
Instruction to be moved:   %128 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %112
Instruction to be moved:   %136 = sext i32 %1 to i64
Instruction to be moved:   %137 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %114
Instruction to be moved:   %142 = sext i32 %1 to i64
Instruction to be moved:   %143 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %116
Instruction to be moved:   %176 = sext i32 %1 to i64
Instruction to be moved:   %177 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %173
Instruction to be moved:   %182 = sext i32 %1 to i64
Instruction to be moved:   %183 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %175
Instruction to be moved:   %188 = sext i32 %1 to i64
Instruction to be moved:   %189 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %177
Instruction to be moved:   %210 = fneg double %54
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 19
UnitLICM running on radecdist
******************************************************
UnitLoopAnalysis running on radecdist
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 19
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %.13 = phi i32 [ 0, %20 ], [ %48, %47 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
[LoopLoopAnalysis] parent loop header is:   %.01 = phi i32 [ 0, %23 ], [ %45, %44 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi i32 [ 0, %49 ], [ %67, %66 ]
[LoopLoopAnalysis] parent loop header is:   %.0 = phi i32 [ 0, %28 ], [ %42, %41 ]
[LoopLoopAnalysis] parent loop header is:   %.02 = phi i32 [ 1, %7 ], [ %18, %17 ]
Instruction to be moved:   %35 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %36 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %37 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %30 = load double, ptr %26, align 16
Instruction to be moved:   %31 = fadd double %27, 1.000000e+00
Instruction to be moved:   %32 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %33 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %34 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %24 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %25 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 1
Instruction to be moved:   %26 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %27 = load double, ptr %23, align 16
Instruction to be moved:   %28 = fadd double %24, 1.000000e+00
Instruction to be moved:   %29 = getelementptr inbounds [2 x double], ptr %3, i64 0, i64 0
Instruction to be moved:   %30 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %31 = getelementptr inbounds [2 x [3 x double]], ptr %4, i64 0, i64 0
Instruction to be moved:   %11 = getelementptr inbounds ptr, ptr %1, i64 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 2
[UnitLICM]: NumComputeHoisted: 3
[UnitLICM]: Total: 37
----------------------------------------
Running sccp and licm: almabench.c
UnitLICM running on anpm
******************************************************
UnitLoopAnalysis running on anpm
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitSCCP running on anpm
Visiting BB: 
VisitInstr:   %2 = alloca double, align 8
Check LatCell: 0
In Meet:   %2 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = alloca double, align 8
VisitInstr:   %3 = alloca double, align 8
Check LatCell: 0
In Meet:   %3 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca double, align 8
VisitInstr:   store double %0, ptr %2, align 8
Check LatCell: 0
In Meet:   store double %0, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %0, ptr %2, align 8
VisitInstr:   %4 = load double, ptr %2, align 8
Check LatCell: 0
In Meet:   %4 = load double, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = load double, ptr %2, align 8
VisitInstr:   %5 = call double @fmod(double noundef %4, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %5 = call double @fmod(double noundef %4, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = call double @fmod(double noundef %4, double noundef 0x401921FB54442D18) #5
VisitInstr:   store double %5, ptr %3, align 8
Check LatCell: 0
In Meet:   store double %5, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %5, ptr %3, align 8
VisitInstr:   %6 = load double, ptr %3, align 8
Check LatCell: 0
In Meet:   %6 = load double, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = load double, ptr %3, align 8
VisitInstr:   %7 = call double @llvm.fabs.f64(double %6)
Check LatCell: 0
In Meet:   %7 = call double @llvm.fabs.f64(double %6), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = call double @llvm.fabs.f64(double %6)
VisitInstr:   %8 = fcmp oge double %7, 0x400921FB54442D18
CmpInst:   %8 = fcmp oge double %7, 0x400921FB54442D18
Check LatCell: 0
In Meet:   %8 = fcmp oge double %7, 0x400921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = fcmp oge double %7, 0x400921FB54442D18
VisitInstr:   br i1 %8, label %9, label %16
BranchInst:   br i1 %8, label %9, label %16
In BranchInst: -1, 0x0
In AddEdge: 0x55e4339537c0, 0x55e433960680, 0
Adding edge:  -> 
In AddEdge: 0x55e4339537c0, 0x55e433960680, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %10 = load double, ptr %3, align 8
Check LatCell: 0
In Meet:   %10 = load double, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = load double, ptr %3, align 8
VisitInstr:   %11 = load double, ptr %2, align 8
Check LatCell: 0
In Meet:   %11 = load double, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = load double, ptr %2, align 8
VisitInstr:   %12 = fcmp olt double %11, 0.000000e+00
CmpInst:   %12 = fcmp olt double %11, 0.000000e+00
Check LatCell: 0
In Meet:   %12 = fcmp olt double %11, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = fcmp olt double %11, 0.000000e+00
VisitInstr:   %13 = zext i1 %12 to i64
UnaryOp:   %13 = zext i1 %12 to i64
Check LatCell: 0
In Meet:   %13 = zext i1 %12 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = zext i1 %12 to i64
VisitInstr:   %14 = select i1 %12, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select:   %14 = select i1 %12, double 0xC01921FB54442D18, double 0x401921FB54442D18
Select LatCond: -1, 0x0
Select LatTrue: 0, 0x55e433960550
Select LatFals: 0, 0x55e43395f930
Check LatCell: 0
In Meet:   %14 = select i1 %12, double 0xC01921FB54442D18, double 0x401921FB54442D18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = select i1 %12, double 0xC01921FB54442D18, double 0x401921FB54442D18
VisitInstr:   %15 = fsub double %10, %14
BinaryOp:   %15 = fsub double %10, %14
Check LatCell: 0
In Meet:   %15 = fsub double %10, %14, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = fsub double %10, %14
VisitInstr:   store double %15, ptr %3, align 8
Check LatCell: 0
In Meet:   store double %15, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %15, ptr %3, align 8
VisitInstr:   br label %16
BranchInst:   br label %16
In AddEdge: 0x55e4339600d0, 0x55e433960980, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %17 = load double, ptr %3, align 8
Check LatCell: 0
In Meet:   %17 = load double, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load double, ptr %3, align 8
VisitInstr:   ret double %17
Check LatCell: 0
In Meet:   ret double %17, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %17
Visiting BB: 
VisitInstr:   %17 = load double, ptr %3, align 8
VisitInstr:   ret double %17
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on planetpv
******************************************************
UnitLoopAnalysis running on planetpv
[LoopLoopAnalysis] parent loop header is:   %178 = load i32, ptr %9, align 4
[LoopLoopAnalysis] parent loop header is:   %275 = load i32, ptr %9, align 4
[LoopLoopAnalysis] parent loop header is:   %326 = load double, ptr %20, align 8
Instruction to be moved:   %178 = load i32, ptr %9, align 4
Instruction to be moved:   %179 = icmp slt i32 %177, 8
Instruction to be moved:   %181 = load i32, ptr %5, align 4
Instruction to be moved:   %182 = sext i32 %179 to i64
Instruction to be moved:   %183 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %180
Instruction to be moved:   %184 = load i32, ptr %9, align 4
Instruction to be moved:   %185 = sext i32 %182 to i64
Instruction to be moved:   %186 = getelementptr inbounds [9 x double], ptr %181, i64 0, i64 %183
Instruction to be moved:   %188 = load double, ptr %17, align 8
Instruction to be moved:   %190 = load i32, ptr %5, align 4
Instruction to be moved:   %191 = sext i32 %186 to i64
Instruction to be moved:   %192 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %187
Instruction to be moved:   %193 = load i32, ptr %9, align 4
Instruction to be moved:   %194 = sext i32 %189 to i64
Instruction to be moved:   %195 = getelementptr inbounds [10 x double], ptr %188, i64 0, i64 %190
Instruction to be moved:   %197 = load double, ptr %17, align 8
Instruction to be moved:   %199 = load double, ptr %11, align 8
Instruction to be moved:   %200 = load i32, ptr %5, align 4
Instruction to be moved:   %201 = sext i32 %194 to i64
Instruction to be moved:   %202 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %195
Instruction to be moved:   %203 = load i32, ptr %9, align 4
Instruction to be moved:   %204 = sext i32 %197 to i64
Instruction to be moved:   %205 = getelementptr inbounds [9 x double], ptr %196, i64 0, i64 %198
Instruction to be moved:   %207 = load double, ptr %18, align 8
Instruction to be moved:   %209 = load i32, ptr %5, align 4
Instruction to be moved:   %210 = sext i32 %201 to i64
Instruction to be moved:   %211 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %202
Instruction to be moved:   %212 = load i32, ptr %9, align 4
Instruction to be moved:   %213 = sext i32 %204 to i64
Instruction to be moved:   %214 = getelementptr inbounds [9 x double], ptr %203, i64 0, i64 %205
Instruction to be moved:   %216 = load double, ptr %18, align 8
Instruction to be moved:   %221 = load double, ptr %12, align 8
Instruction to be moved:   %222 = load i32, ptr %5, align 4
Instruction to be moved:   %223 = sext i32 %209 to i64
Instruction to be moved:   %224 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %210
Instruction to be moved:   %225 = load i32, ptr %9, align 4
Instruction to be moved:   %226 = sext i32 %212 to i64
Instruction to be moved:   %227 = getelementptr inbounds [10 x double], ptr %211, i64 0, i64 %213
Instruction to be moved:   %229 = load double, ptr %19, align 8
Instruction to be moved:   %231 = load i32, ptr %5, align 4
Instruction to be moved:   %232 = sext i32 %216 to i64
Instruction to be moved:   %233 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %217
Instruction to be moved:   %234 = load i32, ptr %9, align 4
Instruction to be moved:   %235 = sext i32 %219 to i64
Instruction to be moved:   %236 = getelementptr inbounds [10 x double], ptr %218, i64 0, i64 %220
Instruction to be moved:   %238 = load double, ptr %19, align 8
Instruction to be moved:   %244 = load i32, ptr %9, align 4
Instruction to be moved:   %245 = add nsw i32 %223, 1
Instruction to be moved:   %275 = load i32, ptr %9, align 4
Instruction to be moved:   %276 = icmp sle i32 %274, 9
Instruction to be moved:   %278 = load i32, ptr %5, align 4
Instruction to be moved:   %279 = sext i32 %276 to i64
Instruction to be moved:   %280 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %277
Instruction to be moved:   %281 = load i32, ptr %9, align 4
Instruction to be moved:   %282 = sext i32 %279 to i64
Instruction to be moved:   %283 = getelementptr inbounds [10 x double], ptr %278, i64 0, i64 %280
Instruction to be moved:   %285 = load double, ptr %17, align 8
Instruction to be moved:   %287 = load double, ptr %12, align 8
Instruction to be moved:   %288 = load double, ptr %10, align 8
Instruction to be moved:   %289 = load i32, ptr %5, align 4
Instruction to be moved:   %290 = sext i32 %285 to i64
Instruction to be moved:   %291 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %286
Instruction to be moved:   %292 = load i32, ptr %9, align 4
Instruction to be moved:   %293 = sext i32 %288 to i64
Instruction to be moved:   %294 = getelementptr inbounds [10 x double], ptr %287, i64 0, i64 %289
Instruction to be moved:   %296 = load double, ptr %19, align 8
Instruction to be moved:   %298 = load i32, ptr %5, align 4
Instruction to be moved:   %299 = sext i32 %292 to i64
Instruction to be moved:   %300 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %293
Instruction to be moved:   %301 = load i32, ptr %9, align 4
Instruction to be moved:   %302 = sext i32 %295 to i64
Instruction to be moved:   %303 = getelementptr inbounds [10 x double], ptr %294, i64 0, i64 %296
Instruction to be moved:   %305 = load double, ptr %19, align 8
Instruction to be moved:   %312 = load i32, ptr %9, align 4
Instruction to be moved:   %313 = add nsw i32 %299, 1
Instruction to be moved:   %326 = load double, ptr %20, align 8
Instruction to be moved:   %327 = load double, ptr %21, align 8
Instruction to be moved:   %328 = fsub double %325, %326
Instruction to be moved:   %329 = load double, ptr %13, align 8
Instruction to be moved:   %330 = load double, ptr %21, align 8
Instruction to be moved:   %333 = load double, ptr %13, align 8
Instruction to be moved:   %334 = load double, ptr %21, align 8
Instruction to be moved:   %336 = fneg double %330
Instruction to be moved:   %339 = load double, ptr %21, align 8
Instruction to be moved:   %340 = load double, ptr %22, align 8
Instruction to be moved:   %341 = fadd double %333, %334
Instruction to be moved:   %342 = load i32, ptr %9, align 4
Instruction to be moved:   %343 = add nsw i32 %336, 1
Instruction to be moved:   %344 = load i32, ptr %9, align 4
Instruction to be moved:   %345 = icmp sge i32 %338, 10
Instruction to be moved:   %347 = load double, ptr %22, align 8
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 46
[UnitLICM]: NumComputeHoisted: 9
[UnitLICM]: Total: 91
UnitSCCP running on planetpv
Visiting BB: 
VisitInstr:   %4 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %4 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca ptr, align 8
VisitInstr:   %5 = alloca i32, align 4
Check LatCell: 0
In Meet:   %5 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca i32, align 4
VisitInstr:   %6 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %6 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca ptr, align 8
VisitInstr:   %7 = alloca i32, align 4
Check LatCell: 0
In Meet:   %7 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i32, align 4
VisitInstr:   %8 = alloca i32, align 4
Check LatCell: 0
In Meet:   %8 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca i32, align 4
VisitInstr:   %9 = alloca i32, align 4
Check LatCell: 0
In Meet:   %9 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = alloca i32, align 4
VisitInstr:   %10 = alloca double, align 8
Check LatCell: 0
In Meet:   %10 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = alloca double, align 8
VisitInstr:   %11 = alloca double, align 8
Check LatCell: 0
In Meet:   %11 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = alloca double, align 8
VisitInstr:   %12 = alloca double, align 8
Check LatCell: 0
In Meet:   %12 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = alloca double, align 8
VisitInstr:   %13 = alloca double, align 8
Check LatCell: 0
In Meet:   %13 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = alloca double, align 8
VisitInstr:   %14 = alloca double, align 8
Check LatCell: 0
In Meet:   %14 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = alloca double, align 8
VisitInstr:   %15 = alloca double, align 8
Check LatCell: 0
In Meet:   %15 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = alloca double, align 8
VisitInstr:   %16 = alloca double, align 8
Check LatCell: 0
In Meet:   %16 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = alloca double, align 8
VisitInstr:   %17 = alloca double, align 8
Check LatCell: 0
In Meet:   %17 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = alloca double, align 8
VisitInstr:   %18 = alloca double, align 8
Check LatCell: 0
In Meet:   %18 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = alloca double, align 8
VisitInstr:   %19 = alloca double, align 8
Check LatCell: 0
In Meet:   %19 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = alloca double, align 8
VisitInstr:   %20 = alloca double, align 8
Check LatCell: 0
In Meet:   %20 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = alloca double, align 8
VisitInstr:   %21 = alloca double, align 8
Check LatCell: 0
In Meet:   %21 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = alloca double, align 8
VisitInstr:   %22 = alloca double, align 8
Check LatCell: 0
In Meet:   %22 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = alloca double, align 8
VisitInstr:   %23 = alloca double, align 8
Check LatCell: 0
In Meet:   %23 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = alloca double, align 8
VisitInstr:   %24 = alloca double, align 8
Check LatCell: 0
In Meet:   %24 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = alloca double, align 8
VisitInstr:   %25 = alloca double, align 8
Check LatCell: 0
In Meet:   %25 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = alloca double, align 8
VisitInstr:   %26 = alloca double, align 8
Check LatCell: 0
In Meet:   %26 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = alloca double, align 8
VisitInstr:   %27 = alloca double, align 8
Check LatCell: 0
In Meet:   %27 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = alloca double, align 8
VisitInstr:   %28 = alloca double, align 8
Check LatCell: 0
In Meet:   %28 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = alloca double, align 8
VisitInstr:   %29 = alloca double, align 8
Check LatCell: 0
In Meet:   %29 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = alloca double, align 8
VisitInstr:   %30 = alloca double, align 8
Check LatCell: 0
In Meet:   %30 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = alloca double, align 8
VisitInstr:   %31 = alloca double, align 8
Check LatCell: 0
In Meet:   %31 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = alloca double, align 8
VisitInstr:   %32 = alloca double, align 8
Check LatCell: 0
In Meet:   %32 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = alloca double, align 8
VisitInstr:   %33 = alloca double, align 8
Check LatCell: 0
In Meet:   %33 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = alloca double, align 8
VisitInstr:   %34 = alloca double, align 8
Check LatCell: 0
In Meet:   %34 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = alloca double, align 8
VisitInstr:   %35 = alloca double, align 8
Check LatCell: 0
In Meet:   %35 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = alloca double, align 8
VisitInstr:   %36 = alloca double, align 8
Check LatCell: 0
In Meet:   %36 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = alloca double, align 8
VisitInstr:   %37 = alloca double, align 8
Check LatCell: 0
In Meet:   %37 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = alloca double, align 8
VisitInstr:   %38 = alloca double, align 8
Check LatCell: 0
In Meet:   %38 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = alloca double, align 8
VisitInstr:   %39 = alloca double, align 8
Check LatCell: 0
In Meet:   %39 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = alloca double, align 8
VisitInstr:   %40 = alloca double, align 8
Check LatCell: 0
In Meet:   %40 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = alloca double, align 8
VisitInstr:   %41 = alloca double, align 8
Check LatCell: 0
In Meet:   %41 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = alloca double, align 8
VisitInstr:   store ptr %0, ptr %4, align 8
Check LatCell: 0
In Meet:   store ptr %0, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %0, ptr %4, align 8
VisitInstr:   store i32 %1, ptr %5, align 4
Check LatCell: 0
In Meet:   store i32 %1, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %1, ptr %5, align 4
VisitInstr:   store ptr %2, ptr %6, align 8
Check LatCell: 0
In Meet:   store ptr %2, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %2, ptr %6, align 8
VisitInstr:   %42 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %42 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load ptr, ptr %4, align 8
VisitInstr:   %43 = getelementptr inbounds double, ptr %42, i64 0
GetElementPtr:   %43 = getelementptr inbounds double, ptr %42, i64 0
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds double, ptr %42, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds double, ptr %42, i64 0
VisitInstr:   %44 = load double, ptr %43, align 8
Check LatCell: 0
In Meet:   %44 = load double, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = load double, ptr %43, align 8
VisitInstr:   %45 = fsub double %44, 0x4142B42C80000000
BinaryOp:   %45 = fsub double %44, 0x4142B42C80000000
Check LatCell: 0
In Meet:   %45 = fsub double %44, 0x4142B42C80000000, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = fsub double %44, 0x4142B42C80000000
VisitInstr:   %46 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %46 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = load ptr, ptr %4, align 8
VisitInstr:   %47 = getelementptr inbounds double, ptr %46, i64 1
GetElementPtr:   %47 = getelementptr inbounds double, ptr %46, i64 1
Check LatCell: 0
In Meet:   %47 = getelementptr inbounds double, ptr %46, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = getelementptr inbounds double, ptr %46, i64 1
VisitInstr:   %48 = load double, ptr %47, align 8
Check LatCell: 0
In Meet:   %48 = load double, ptr %47, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load double, ptr %47, align 8
VisitInstr:   %49 = fadd double %45, %48
BinaryOp:   %49 = fadd double %45, %48
Check LatCell: 0
In Meet:   %49 = fadd double %45, %48, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = fadd double %45, %48
VisitInstr:   %50 = fdiv double %49, 3.652500e+05
BinaryOp:   %50 = fdiv double %49, 3.652500e+05
Check LatCell: 0
In Meet:   %50 = fdiv double %49, 3.652500e+05, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = fdiv double %49, 3.652500e+05
VisitInstr:   store double %50, ptr %10, align 8
Check LatCell: 0
In Meet:   store double %50, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %50, ptr %10, align 8
VisitInstr:   %51 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %51 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = load i32, ptr %5, align 4
VisitInstr:   %52 = sext i32 %51 to i64
UnaryOp:   %52 = sext i32 %51 to i64
Check LatCell: 0
In Meet:   %52 = sext i32 %51 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = sext i32 %51 to i64
VisitInstr:   %53 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %52
GetElementPtr:   %53 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %52
Check LatCell: 0
In Meet:   %53 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %52, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %52
VisitInstr:   %54 = getelementptr inbounds [3 x double], ptr %53, i64 0, i64 0
GetElementPtr:   %54 = getelementptr inbounds [3 x double], ptr %53, i64 0, i64 0
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds [3 x double], ptr %53, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds [3 x double], ptr %53, i64 0, i64 0
VisitInstr:   %55 = load double, ptr %54, align 8
Check LatCell: 0
In Meet:   %55 = load double, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load double, ptr %54, align 8
VisitInstr:   %56 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %56 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load i32, ptr %5, align 4
VisitInstr:   %57 = sext i32 %56 to i64
UnaryOp:   %57 = sext i32 %56 to i64
Check LatCell: 0
In Meet:   %57 = sext i32 %56 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = sext i32 %56 to i64
VisitInstr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %57
GetElementPtr:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %57
Check LatCell: 0
In Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %57, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %57
VisitInstr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
GetElementPtr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
Check LatCell: 0
In Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
VisitInstr:   %60 = load double, ptr %59, align 8
Check LatCell: 0
In Meet:   %60 = load double, ptr %59, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load double, ptr %59, align 8
VisitInstr:   %61 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %61 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = load i32, ptr %5, align 4
VisitInstr:   %62 = sext i32 %61 to i64
UnaryOp:   %62 = sext i32 %61 to i64
Check LatCell: 0
In Meet:   %62 = sext i32 %61 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = sext i32 %61 to i64
VisitInstr:   %63 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %62
GetElementPtr:   %63 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %62
Check LatCell: 0
In Meet:   %63 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %62, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = getelementptr inbounds [8 x [3 x double]], ptr @a, i64 0, i64 %62
VisitInstr:   %64 = getelementptr inbounds [3 x double], ptr %63, i64 0, i64 2
GetElementPtr:   %64 = getelementptr inbounds [3 x double], ptr %63, i64 0, i64 2
Check LatCell: 0
In Meet:   %64 = getelementptr inbounds [3 x double], ptr %63, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = getelementptr inbounds [3 x double], ptr %63, i64 0, i64 2
VisitInstr:   %65 = load double, ptr %64, align 8
Check LatCell: 0
In Meet:   %65 = load double, ptr %64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = load double, ptr %64, align 8
VisitInstr:   %66 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %66 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load double, ptr %10, align 8
VisitInstr:   %67 = call double @llvm.fmuladd.f64(double %65, double %66, double %60)
Check LatCell: 0
In Meet:   %67 = call double @llvm.fmuladd.f64(double %65, double %66, double %60), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = call double @llvm.fmuladd.f64(double %65, double %66, double %60)
VisitInstr:   %68 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %68 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = load double, ptr %10, align 8
VisitInstr:   %69 = call double @llvm.fmuladd.f64(double %67, double %68, double %55)
Check LatCell: 0
In Meet:   %69 = call double @llvm.fmuladd.f64(double %67, double %68, double %55), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = call double @llvm.fmuladd.f64(double %67, double %68, double %55)
VisitInstr:   store double %69, ptr %11, align 8
Check LatCell: 0
In Meet:   store double %69, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %69, ptr %11, align 8
VisitInstr:   %70 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %70 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = load i32, ptr %5, align 4
VisitInstr:   %71 = sext i32 %70 to i64
UnaryOp:   %71 = sext i32 %70 to i64
Check LatCell: 0
In Meet:   %71 = sext i32 %70 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = sext i32 %70 to i64
VisitInstr:   %72 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %71
GetElementPtr:   %72 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %71
Check LatCell: 0
In Meet:   %72 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %71, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %71
VisitInstr:   %73 = getelementptr inbounds [3 x double], ptr %72, i64 0, i64 0
GetElementPtr:   %73 = getelementptr inbounds [3 x double], ptr %72, i64 0, i64 0
Check LatCell: 0
In Meet:   %73 = getelementptr inbounds [3 x double], ptr %72, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = getelementptr inbounds [3 x double], ptr %72, i64 0, i64 0
VisitInstr:   %74 = load double, ptr %73, align 8
Check LatCell: 0
In Meet:   %74 = load double, ptr %73, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = load double, ptr %73, align 8
VisitInstr:   %75 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %75 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load i32, ptr %5, align 4
VisitInstr:   %76 = sext i32 %75 to i64
UnaryOp:   %76 = sext i32 %75 to i64
Check LatCell: 0
In Meet:   %76 = sext i32 %75 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = sext i32 %75 to i64
VisitInstr:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %76
GetElementPtr:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %76
Check LatCell: 0
In Meet:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %76, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %76
VisitInstr:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
GetElementPtr:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
Check LatCell: 0
In Meet:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
VisitInstr:   %79 = load double, ptr %78, align 8
Check LatCell: 0
In Meet:   %79 = load double, ptr %78, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = load double, ptr %78, align 8
VisitInstr:   %80 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %80 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load i32, ptr %5, align 4
VisitInstr:   %81 = sext i32 %80 to i64
UnaryOp:   %81 = sext i32 %80 to i64
Check LatCell: 0
In Meet:   %81 = sext i32 %80 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = sext i32 %80 to i64
VisitInstr:   %82 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %81
GetElementPtr:   %82 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %81
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds [8 x [3 x double]], ptr @dlm, i64 0, i64 %81
VisitInstr:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
GetElementPtr:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
Check LatCell: 0
In Meet:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
VisitInstr:   %84 = load double, ptr %83, align 8
Check LatCell: 0
In Meet:   %84 = load double, ptr %83, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = load double, ptr %83, align 8
VisitInstr:   %85 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %85 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = load double, ptr %10, align 8
VisitInstr:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %79)
Check LatCell: 0
In Meet:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %79), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %79)
VisitInstr:   %87 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %87 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = load double, ptr %10, align 8
VisitInstr:   %88 = fmul double %86, %87
BinaryOp:   %88 = fmul double %86, %87
Check LatCell: 0
In Meet:   %88 = fmul double %86, %87, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = fmul double %86, %87
VisitInstr:   %89 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %74, double %88)
Check LatCell: 0
In Meet:   %89 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %74, double %88), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %74, double %88)
VisitInstr:   %90 = fmul double %89, 0x3ED455A5B2FF8F9D
BinaryOp:   %90 = fmul double %89, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %90 = fmul double %89, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = fmul double %89, 0x3ED455A5B2FF8F9D
VisitInstr:   store double %90, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %90, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %90, ptr %12, align 8
VisitInstr:   %91 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %91 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = load i32, ptr %5, align 4
VisitInstr:   %92 = sext i32 %91 to i64
UnaryOp:   %92 = sext i32 %91 to i64
Check LatCell: 0
In Meet:   %92 = sext i32 %91 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = sext i32 %91 to i64
VisitInstr:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %92
GetElementPtr:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %92
Check LatCell: 0
In Meet:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %92, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %92
VisitInstr:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 0
GetElementPtr:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 0
Check LatCell: 0
In Meet:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 0
VisitInstr:   %95 = load double, ptr %94, align 8
Check LatCell: 0
In Meet:   %95 = load double, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = load double, ptr %94, align 8
VisitInstr:   %96 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %96 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = load i32, ptr %5, align 4
VisitInstr:   %97 = sext i32 %96 to i64
UnaryOp:   %97 = sext i32 %96 to i64
Check LatCell: 0
In Meet:   %97 = sext i32 %96 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = sext i32 %96 to i64
VisitInstr:   %98 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %97
GetElementPtr:   %98 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %97
Check LatCell: 0
In Meet:   %98 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %97, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %97
VisitInstr:   %99 = getelementptr inbounds [3 x double], ptr %98, i64 0, i64 1
GetElementPtr:   %99 = getelementptr inbounds [3 x double], ptr %98, i64 0, i64 1
Check LatCell: 0
In Meet:   %99 = getelementptr inbounds [3 x double], ptr %98, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = getelementptr inbounds [3 x double], ptr %98, i64 0, i64 1
VisitInstr:   %100 = load double, ptr %99, align 8
Check LatCell: 0
In Meet:   %100 = load double, ptr %99, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = load double, ptr %99, align 8
VisitInstr:   %101 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %101 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = load i32, ptr %5, align 4
VisitInstr:   %102 = sext i32 %101 to i64
UnaryOp:   %102 = sext i32 %101 to i64
Check LatCell: 0
In Meet:   %102 = sext i32 %101 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %102 = sext i32 %101 to i64
VisitInstr:   %103 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %102
GetElementPtr:   %103 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %102
Check LatCell: 0
In Meet:   %103 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %102, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = getelementptr inbounds [8 x [3 x double]], ptr @e, i64 0, i64 %102
VisitInstr:   %104 = getelementptr inbounds [3 x double], ptr %103, i64 0, i64 2
GetElementPtr:   %104 = getelementptr inbounds [3 x double], ptr %103, i64 0, i64 2
Check LatCell: 0
In Meet:   %104 = getelementptr inbounds [3 x double], ptr %103, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = getelementptr inbounds [3 x double], ptr %103, i64 0, i64 2
VisitInstr:   %105 = load double, ptr %104, align 8
Check LatCell: 0
In Meet:   %105 = load double, ptr %104, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = load double, ptr %104, align 8
VisitInstr:   %106 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %106 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %106 = load double, ptr %10, align 8
VisitInstr:   %107 = call double @llvm.fmuladd.f64(double %105, double %106, double %100)
Check LatCell: 0
In Meet:   %107 = call double @llvm.fmuladd.f64(double %105, double %106, double %100), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %107 = call double @llvm.fmuladd.f64(double %105, double %106, double %100)
VisitInstr:   %108 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %108 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %108 = load double, ptr %10, align 8
VisitInstr:   %109 = call double @llvm.fmuladd.f64(double %107, double %108, double %95)
Check LatCell: 0
In Meet:   %109 = call double @llvm.fmuladd.f64(double %107, double %108, double %95), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %109 = call double @llvm.fmuladd.f64(double %107, double %108, double %95)
VisitInstr:   store double %109, ptr %13, align 8
Check LatCell: 0
In Meet:   store double %109, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %109, ptr %13, align 8
VisitInstr:   %110 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %110 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %110 = load i32, ptr %5, align 4
VisitInstr:   %111 = sext i32 %110 to i64
UnaryOp:   %111 = sext i32 %110 to i64
Check LatCell: 0
In Meet:   %111 = sext i32 %110 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = sext i32 %110 to i64
VisitInstr:   %112 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %111
GetElementPtr:   %112 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %111
Check LatCell: 0
In Meet:   %112 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %111, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %111
VisitInstr:   %113 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 0
GetElementPtr:   %113 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 0
Check LatCell: 0
In Meet:   %113 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %113 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 0
VisitInstr:   %114 = load double, ptr %113, align 8
Check LatCell: 0
In Meet:   %114 = load double, ptr %113, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = load double, ptr %113, align 8
VisitInstr:   %115 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %115 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %115 = load i32, ptr %5, align 4
VisitInstr:   %116 = sext i32 %115 to i64
UnaryOp:   %116 = sext i32 %115 to i64
Check LatCell: 0
In Meet:   %116 = sext i32 %115 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = sext i32 %115 to i64
VisitInstr:   %117 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %116
GetElementPtr:   %117 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %116
Check LatCell: 0
In Meet:   %117 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %116, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %117 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %116
VisitInstr:   %118 = getelementptr inbounds [3 x double], ptr %117, i64 0, i64 1
GetElementPtr:   %118 = getelementptr inbounds [3 x double], ptr %117, i64 0, i64 1
Check LatCell: 0
In Meet:   %118 = getelementptr inbounds [3 x double], ptr %117, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = getelementptr inbounds [3 x double], ptr %117, i64 0, i64 1
VisitInstr:   %119 = load double, ptr %118, align 8
Check LatCell: 0
In Meet:   %119 = load double, ptr %118, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = load double, ptr %118, align 8
VisitInstr:   %120 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %120 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = load i32, ptr %5, align 4
VisitInstr:   %121 = sext i32 %120 to i64
UnaryOp:   %121 = sext i32 %120 to i64
Check LatCell: 0
In Meet:   %121 = sext i32 %120 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = sext i32 %120 to i64
VisitInstr:   %122 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %121
GetElementPtr:   %122 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %121
Check LatCell: 0
In Meet:   %122 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %121, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %122 = getelementptr inbounds [8 x [3 x double]], ptr @pi, i64 0, i64 %121
VisitInstr:   %123 = getelementptr inbounds [3 x double], ptr %122, i64 0, i64 2
GetElementPtr:   %123 = getelementptr inbounds [3 x double], ptr %122, i64 0, i64 2
Check LatCell: 0
In Meet:   %123 = getelementptr inbounds [3 x double], ptr %122, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %123 = getelementptr inbounds [3 x double], ptr %122, i64 0, i64 2
VisitInstr:   %124 = load double, ptr %123, align 8
Check LatCell: 0
In Meet:   %124 = load double, ptr %123, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %124 = load double, ptr %123, align 8
VisitInstr:   %125 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %125 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = load double, ptr %10, align 8
VisitInstr:   %126 = call double @llvm.fmuladd.f64(double %124, double %125, double %119)
Check LatCell: 0
In Meet:   %126 = call double @llvm.fmuladd.f64(double %124, double %125, double %119), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %126 = call double @llvm.fmuladd.f64(double %124, double %125, double %119)
VisitInstr:   %127 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %127 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %127 = load double, ptr %10, align 8
VisitInstr:   %128 = fmul double %126, %127
BinaryOp:   %128 = fmul double %126, %127
Check LatCell: 0
In Meet:   %128 = fmul double %126, %127, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %128 = fmul double %126, %127
VisitInstr:   %129 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %114, double %128)
Check LatCell: 0
In Meet:   %129 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %114, double %128), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %129 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %114, double %128)
VisitInstr:   %130 = fmul double %129, 0x3ED455A5B2FF8F9D
BinaryOp:   %130 = fmul double %129, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %130 = fmul double %129, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %130 = fmul double %129, 0x3ED455A5B2FF8F9D
VisitInstr:   %131 = call double @anpm(double noundef %130)
Check LatCell: 0
In Meet:   %131 = call double @anpm(double noundef %130), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %131 = call double @anpm(double noundef %130)
VisitInstr:   store double %131, ptr %14, align 8
Check LatCell: 0
In Meet:   store double %131, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %131, ptr %14, align 8
VisitInstr:   %132 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %132 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %132 = load i32, ptr %5, align 4
VisitInstr:   %133 = sext i32 %132 to i64
UnaryOp:   %133 = sext i32 %132 to i64
Check LatCell: 0
In Meet:   %133 = sext i32 %132 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %133 = sext i32 %132 to i64
VisitInstr:   %134 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %133
GetElementPtr:   %134 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %133
Check LatCell: 0
In Meet:   %134 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %133, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %134 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %133
VisitInstr:   %135 = getelementptr inbounds [3 x double], ptr %134, i64 0, i64 0
GetElementPtr:   %135 = getelementptr inbounds [3 x double], ptr %134, i64 0, i64 0
Check LatCell: 0
In Meet:   %135 = getelementptr inbounds [3 x double], ptr %134, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %135 = getelementptr inbounds [3 x double], ptr %134, i64 0, i64 0
VisitInstr:   %136 = load double, ptr %135, align 8
Check LatCell: 0
In Meet:   %136 = load double, ptr %135, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %136 = load double, ptr %135, align 8
VisitInstr:   %137 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %137 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %137 = load i32, ptr %5, align 4
VisitInstr:   %138 = sext i32 %137 to i64
UnaryOp:   %138 = sext i32 %137 to i64
Check LatCell: 0
In Meet:   %138 = sext i32 %137 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %138 = sext i32 %137 to i64
VisitInstr:   %139 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %138
GetElementPtr:   %139 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %138
Check LatCell: 0
In Meet:   %139 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %138, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %139 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %138
VisitInstr:   %140 = getelementptr inbounds [3 x double], ptr %139, i64 0, i64 1
GetElementPtr:   %140 = getelementptr inbounds [3 x double], ptr %139, i64 0, i64 1
Check LatCell: 0
In Meet:   %140 = getelementptr inbounds [3 x double], ptr %139, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %140 = getelementptr inbounds [3 x double], ptr %139, i64 0, i64 1
VisitInstr:   %141 = load double, ptr %140, align 8
Check LatCell: 0
In Meet:   %141 = load double, ptr %140, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %141 = load double, ptr %140, align 8
VisitInstr:   %142 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %142 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %142 = load i32, ptr %5, align 4
VisitInstr:   %143 = sext i32 %142 to i64
UnaryOp:   %143 = sext i32 %142 to i64
Check LatCell: 0
In Meet:   %143 = sext i32 %142 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %143 = sext i32 %142 to i64
VisitInstr:   %144 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %143
GetElementPtr:   %144 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %143
Check LatCell: 0
In Meet:   %144 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %143, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %144 = getelementptr inbounds [8 x [3 x double]], ptr @dinc, i64 0, i64 %143
VisitInstr:   %145 = getelementptr inbounds [3 x double], ptr %144, i64 0, i64 2
GetElementPtr:   %145 = getelementptr inbounds [3 x double], ptr %144, i64 0, i64 2
Check LatCell: 0
In Meet:   %145 = getelementptr inbounds [3 x double], ptr %144, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %145 = getelementptr inbounds [3 x double], ptr %144, i64 0, i64 2
VisitInstr:   %146 = load double, ptr %145, align 8
Check LatCell: 0
In Meet:   %146 = load double, ptr %145, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %146 = load double, ptr %145, align 8
VisitInstr:   %147 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %147 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %147 = load double, ptr %10, align 8
VisitInstr:   %148 = call double @llvm.fmuladd.f64(double %146, double %147, double %141)
Check LatCell: 0
In Meet:   %148 = call double @llvm.fmuladd.f64(double %146, double %147, double %141), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %148 = call double @llvm.fmuladd.f64(double %146, double %147, double %141)
VisitInstr:   %149 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %149 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %149 = load double, ptr %10, align 8
VisitInstr:   %150 = fmul double %148, %149
BinaryOp:   %150 = fmul double %148, %149
Check LatCell: 0
In Meet:   %150 = fmul double %148, %149, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %150 = fmul double %148, %149
VisitInstr:   %151 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %136, double %150)
Check LatCell: 0
In Meet:   %151 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %136, double %150), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %151 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %136, double %150)
VisitInstr:   %152 = fmul double %151, 0x3ED455A5B2FF8F9D
BinaryOp:   %152 = fmul double %151, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %152 = fmul double %151, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %152 = fmul double %151, 0x3ED455A5B2FF8F9D
VisitInstr:   store double %152, ptr %15, align 8
Check LatCell: 0
In Meet:   store double %152, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %152, ptr %15, align 8
VisitInstr:   %153 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %153 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %153 = load i32, ptr %5, align 4
VisitInstr:   %154 = sext i32 %153 to i64
UnaryOp:   %154 = sext i32 %153 to i64
Check LatCell: 0
In Meet:   %154 = sext i32 %153 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %154 = sext i32 %153 to i64
VisitInstr:   %155 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %154
GetElementPtr:   %155 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %154
Check LatCell: 0
In Meet:   %155 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %154, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %155 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %154
VisitInstr:   %156 = getelementptr inbounds [3 x double], ptr %155, i64 0, i64 0
GetElementPtr:   %156 = getelementptr inbounds [3 x double], ptr %155, i64 0, i64 0
Check LatCell: 0
In Meet:   %156 = getelementptr inbounds [3 x double], ptr %155, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %156 = getelementptr inbounds [3 x double], ptr %155, i64 0, i64 0
VisitInstr:   %157 = load double, ptr %156, align 8
Check LatCell: 0
In Meet:   %157 = load double, ptr %156, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %157 = load double, ptr %156, align 8
VisitInstr:   %158 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %158 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %158 = load i32, ptr %5, align 4
VisitInstr:   %159 = sext i32 %158 to i64
UnaryOp:   %159 = sext i32 %158 to i64
Check LatCell: 0
In Meet:   %159 = sext i32 %158 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %159 = sext i32 %158 to i64
VisitInstr:   %160 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %159
GetElementPtr:   %160 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %159
Check LatCell: 0
In Meet:   %160 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %159, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %160 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %159
VisitInstr:   %161 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 1
GetElementPtr:   %161 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 1
Check LatCell: 0
In Meet:   %161 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %161 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 1
VisitInstr:   %162 = load double, ptr %161, align 8
Check LatCell: 0
In Meet:   %162 = load double, ptr %161, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %162 = load double, ptr %161, align 8
VisitInstr:   %163 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %163 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %163 = load i32, ptr %5, align 4
VisitInstr:   %164 = sext i32 %163 to i64
UnaryOp:   %164 = sext i32 %163 to i64
Check LatCell: 0
In Meet:   %164 = sext i32 %163 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %164 = sext i32 %163 to i64
VisitInstr:   %165 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %164
GetElementPtr:   %165 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %164
Check LatCell: 0
In Meet:   %165 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %164, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %165 = getelementptr inbounds [8 x [3 x double]], ptr @omega, i64 0, i64 %164
VisitInstr:   %166 = getelementptr inbounds [3 x double], ptr %165, i64 0, i64 2
GetElementPtr:   %166 = getelementptr inbounds [3 x double], ptr %165, i64 0, i64 2
Check LatCell: 0
In Meet:   %166 = getelementptr inbounds [3 x double], ptr %165, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %166 = getelementptr inbounds [3 x double], ptr %165, i64 0, i64 2
VisitInstr:   %167 = load double, ptr %166, align 8
Check LatCell: 0
In Meet:   %167 = load double, ptr %166, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %167 = load double, ptr %166, align 8
VisitInstr:   %168 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %168 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %168 = load double, ptr %10, align 8
VisitInstr:   %169 = call double @llvm.fmuladd.f64(double %167, double %168, double %162)
Check LatCell: 0
In Meet:   %169 = call double @llvm.fmuladd.f64(double %167, double %168, double %162), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %169 = call double @llvm.fmuladd.f64(double %167, double %168, double %162)
VisitInstr:   %170 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %170 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %170 = load double, ptr %10, align 8
VisitInstr:   %171 = fmul double %169, %170
BinaryOp:   %171 = fmul double %169, %170
Check LatCell: 0
In Meet:   %171 = fmul double %169, %170, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %171 = fmul double %169, %170
VisitInstr:   %172 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %157, double %171)
Check LatCell: 0
In Meet:   %172 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %157, double %171), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %172 = call double @llvm.fmuladd.f64(double 3.600000e+03, double %157, double %171)
VisitInstr:   %173 = fmul double %172, 0x3ED455A5B2FF8F9D
BinaryOp:   %173 = fmul double %172, 0x3ED455A5B2FF8F9D
Check LatCell: 0
In Meet:   %173 = fmul double %172, 0x3ED455A5B2FF8F9D, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %173 = fmul double %172, 0x3ED455A5B2FF8F9D
VisitInstr:   %174 = call double @anpm(double noundef %173)
Check LatCell: 0
In Meet:   %174 = call double @anpm(double noundef %173), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %174 = call double @anpm(double noundef %173)
VisitInstr:   store double %174, ptr %16, align 8
Check LatCell: 0
In Meet:   store double %174, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %174, ptr %16, align 8
VisitInstr:   %175 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %175 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %175 = load double, ptr %10, align 8
VisitInstr:   %176 = fmul double 0x3FD702A41F2E9970, %175
BinaryOp:   %176 = fmul double 0x3FD702A41F2E9970, %175
Check LatCell: 0
In Meet:   %176 = fmul double 0x3FD702A41F2E9970, %175, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %176 = fmul double 0x3FD702A41F2E9970, %175
VisitInstr:   store double %176, ptr %17, align 8
Check LatCell: 0
In Meet:   store double %176, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %176, ptr %17, align 8
VisitInstr:   store i32 0, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %9, align 4
VisitInstr:   %177 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %177 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %177 = load i32, ptr %9, align 4
VisitInstr:   %178 = icmp slt i32 %177, 8
CmpInst:   %178 = icmp slt i32 %177, 8
Check LatCell: 0
In Meet:   %178 = icmp slt i32 %177, 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %178 = icmp slt i32 %177, 8
VisitInstr:   %179 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %179 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %179 = load i32, ptr %5, align 4
VisitInstr:   %180 = sext i32 %179 to i64
UnaryOp:   %180 = sext i32 %179 to i64
Check LatCell: 0
In Meet:   %180 = sext i32 %179 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %180 = sext i32 %179 to i64
VisitInstr:   %181 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %180
GetElementPtr:   %181 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %180
Check LatCell: 0
In Meet:   %181 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %180, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %181 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %180
VisitInstr:   %182 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %182 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %182 = load i32, ptr %9, align 4
VisitInstr:   %183 = sext i32 %182 to i64
UnaryOp:   %183 = sext i32 %182 to i64
Check LatCell: 0
In Meet:   %183 = sext i32 %182 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %183 = sext i32 %182 to i64
VisitInstr:   %184 = getelementptr inbounds [9 x double], ptr %181, i64 0, i64 %183
GetElementPtr:   %184 = getelementptr inbounds [9 x double], ptr %181, i64 0, i64 %183
Check LatCell: 0
In Meet:   %184 = getelementptr inbounds [9 x double], ptr %181, i64 0, i64 %183, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %184 = getelementptr inbounds [9 x double], ptr %181, i64 0, i64 %183
VisitInstr:   %185 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %185 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %185 = load double, ptr %17, align 8
VisitInstr:   %186 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %186 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %186 = load i32, ptr %5, align 4
VisitInstr:   %187 = sext i32 %186 to i64
UnaryOp:   %187 = sext i32 %186 to i64
Check LatCell: 0
In Meet:   %187 = sext i32 %186 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %187 = sext i32 %186 to i64
VisitInstr:   %188 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %187
GetElementPtr:   %188 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %187
Check LatCell: 0
In Meet:   %188 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %187, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %188 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %187
VisitInstr:   %189 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %189 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %189 = load i32, ptr %9, align 4
VisitInstr:   %190 = sext i32 %189 to i64
UnaryOp:   %190 = sext i32 %189 to i64
Check LatCell: 0
In Meet:   %190 = sext i32 %189 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %190 = sext i32 %189 to i64
VisitInstr:   %191 = getelementptr inbounds [10 x double], ptr %188, i64 0, i64 %190
GetElementPtr:   %191 = getelementptr inbounds [10 x double], ptr %188, i64 0, i64 %190
Check LatCell: 0
In Meet:   %191 = getelementptr inbounds [10 x double], ptr %188, i64 0, i64 %190, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %191 = getelementptr inbounds [10 x double], ptr %188, i64 0, i64 %190
VisitInstr:   %192 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %192 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %192 = load double, ptr %17, align 8
VisitInstr:   %193 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %193 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %193 = load double, ptr %11, align 8
VisitInstr:   %194 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %194 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %194 = load i32, ptr %5, align 4
VisitInstr:   %195 = sext i32 %194 to i64
UnaryOp:   %195 = sext i32 %194 to i64
Check LatCell: 0
In Meet:   %195 = sext i32 %194 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %195 = sext i32 %194 to i64
VisitInstr:   %196 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %195
GetElementPtr:   %196 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %195
Check LatCell: 0
In Meet:   %196 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %195, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %196 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %195
VisitInstr:   %197 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %197 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %197 = load i32, ptr %9, align 4
VisitInstr:   %198 = sext i32 %197 to i64
UnaryOp:   %198 = sext i32 %197 to i64
Check LatCell: 0
In Meet:   %198 = sext i32 %197 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %198 = sext i32 %197 to i64
VisitInstr:   %199 = getelementptr inbounds [9 x double], ptr %196, i64 0, i64 %198
GetElementPtr:   %199 = getelementptr inbounds [9 x double], ptr %196, i64 0, i64 %198
Check LatCell: 0
In Meet:   %199 = getelementptr inbounds [9 x double], ptr %196, i64 0, i64 %198, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %199 = getelementptr inbounds [9 x double], ptr %196, i64 0, i64 %198
VisitInstr:   %200 = load double, ptr %18, align 8
Check LatCell: 0
In Meet:   %200 = load double, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %200 = load double, ptr %18, align 8
VisitInstr:   %201 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %201 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %201 = load i32, ptr %5, align 4
VisitInstr:   %202 = sext i32 %201 to i64
UnaryOp:   %202 = sext i32 %201 to i64
Check LatCell: 0
In Meet:   %202 = sext i32 %201 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %202 = sext i32 %201 to i64
VisitInstr:   %203 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %202
GetElementPtr:   %203 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %202
Check LatCell: 0
In Meet:   %203 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %202, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %203 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %202
VisitInstr:   %204 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %204 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %204 = load i32, ptr %9, align 4
VisitInstr:   %205 = sext i32 %204 to i64
UnaryOp:   %205 = sext i32 %204 to i64
Check LatCell: 0
In Meet:   %205 = sext i32 %204 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %205 = sext i32 %204 to i64
VisitInstr:   %206 = getelementptr inbounds [9 x double], ptr %203, i64 0, i64 %205
GetElementPtr:   %206 = getelementptr inbounds [9 x double], ptr %203, i64 0, i64 %205
Check LatCell: 0
In Meet:   %206 = getelementptr inbounds [9 x double], ptr %203, i64 0, i64 %205, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %206 = getelementptr inbounds [9 x double], ptr %203, i64 0, i64 %205
VisitInstr:   %207 = load double, ptr %18, align 8
Check LatCell: 0
In Meet:   %207 = load double, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %207 = load double, ptr %18, align 8
VisitInstr:   %208 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %208 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %208 = load double, ptr %12, align 8
VisitInstr:   %209 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %209 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %209 = load i32, ptr %5, align 4
VisitInstr:   %210 = sext i32 %209 to i64
UnaryOp:   %210 = sext i32 %209 to i64
Check LatCell: 0
In Meet:   %210 = sext i32 %209 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %210 = sext i32 %209 to i64
VisitInstr:   %211 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %210
GetElementPtr:   %211 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %210
Check LatCell: 0
In Meet:   %211 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %210, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %211 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %210
VisitInstr:   %212 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %212 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %212 = load i32, ptr %9, align 4
VisitInstr:   %213 = sext i32 %212 to i64
UnaryOp:   %213 = sext i32 %212 to i64
Check LatCell: 0
In Meet:   %213 = sext i32 %212 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %213 = sext i32 %212 to i64
VisitInstr:   %214 = getelementptr inbounds [10 x double], ptr %211, i64 0, i64 %213
GetElementPtr:   %214 = getelementptr inbounds [10 x double], ptr %211, i64 0, i64 %213
Check LatCell: 0
In Meet:   %214 = getelementptr inbounds [10 x double], ptr %211, i64 0, i64 %213, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %214 = getelementptr inbounds [10 x double], ptr %211, i64 0, i64 %213
VisitInstr:   %215 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %215 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %215 = load double, ptr %19, align 8
VisitInstr:   %216 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %216 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %216 = load i32, ptr %5, align 4
VisitInstr:   %217 = sext i32 %216 to i64
UnaryOp:   %217 = sext i32 %216 to i64
Check LatCell: 0
In Meet:   %217 = sext i32 %216 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %217 = sext i32 %216 to i64
VisitInstr:   %218 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %217
GetElementPtr:   %218 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %217
Check LatCell: 0
In Meet:   %218 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %217, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %218 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %217
VisitInstr:   %219 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %219 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %219 = load i32, ptr %9, align 4
VisitInstr:   %220 = sext i32 %219 to i64
UnaryOp:   %220 = sext i32 %219 to i64
Check LatCell: 0
In Meet:   %220 = sext i32 %219 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %220 = sext i32 %219 to i64
VisitInstr:   %221 = getelementptr inbounds [10 x double], ptr %218, i64 0, i64 %220
GetElementPtr:   %221 = getelementptr inbounds [10 x double], ptr %218, i64 0, i64 %220
Check LatCell: 0
In Meet:   %221 = getelementptr inbounds [10 x double], ptr %218, i64 0, i64 %220, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %221 = getelementptr inbounds [10 x double], ptr %218, i64 0, i64 %220
VisitInstr:   %222 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %222 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %222 = load double, ptr %19, align 8
VisitInstr:   %223 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %223 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %223 = load i32, ptr %9, align 4
VisitInstr:   %224 = add nsw i32 %223, 1
BinaryOp:   %224 = add nsw i32 %223, 1
Check LatCell: 0
In Meet:   %224 = add nsw i32 %223, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %224 = add nsw i32 %223, 1
VisitInstr:   br label %225
BranchInst:   br label %225
In AddEdge: 0x55e433960ed0, 0x55e433974510, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %178, label %226, label %246
BranchInst:   br i1 %178, label %226, label %246
In BranchInst: -1, 0x0
In AddEdge: 0x55e433974460, 0x55e4339747a0, 0
Adding edge:  -> 
In AddEdge: 0x55e433974460, 0x55e4339747a0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %227 = load double, ptr %184, align 8
Check LatCell: 0
In Meet:   %227 = load double, ptr %184, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %227 = load double, ptr %184, align 8
VisitInstr:   %228 = fmul double %227, %185
BinaryOp:   %228 = fmul double %227, %185
Check LatCell: 0
In Meet:   %228 = fmul double %227, %185, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %228 = fmul double %227, %185
VisitInstr:   store double %228, ptr %18, align 8
Check LatCell: 0
In Meet:   store double %228, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %228, ptr %18, align 8
VisitInstr:   %229 = load double, ptr %191, align 8
Check LatCell: 0
In Meet:   %229 = load double, ptr %191, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %229 = load double, ptr %191, align 8
VisitInstr:   %230 = fmul double %229, %192
BinaryOp:   %230 = fmul double %229, %192
Check LatCell: 0
In Meet:   %230 = fmul double %229, %192, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %230 = fmul double %229, %192
VisitInstr:   store double %230, ptr %19, align 8
Check LatCell: 0
In Meet:   store double %230, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %230, ptr %19, align 8
VisitInstr:   %231 = load double, ptr %199, align 8
Check LatCell: 0
In Meet:   %231 = load double, ptr %199, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %231 = load double, ptr %199, align 8
VisitInstr:   %232 = call double @cos(double noundef %200) #5
Check LatCell: 0
In Meet:   %232 = call double @cos(double noundef %200) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %232 = call double @cos(double noundef %200) #5
VisitInstr:   %233 = load double, ptr %206, align 8
Check LatCell: 0
In Meet:   %233 = load double, ptr %206, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %233 = load double, ptr %206, align 8
VisitInstr:   %234 = call double @sin(double noundef %207) #5
Check LatCell: 0
In Meet:   %234 = call double @sin(double noundef %207) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %234 = call double @sin(double noundef %207) #5
VisitInstr:   %235 = fmul double %233, %234
BinaryOp:   %235 = fmul double %233, %234
Check LatCell: 0
In Meet:   %235 = fmul double %233, %234, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %235 = fmul double %233, %234
VisitInstr:   %236 = call double @llvm.fmuladd.f64(double %231, double %232, double %235)
Check LatCell: 0
In Meet:   %236 = call double @llvm.fmuladd.f64(double %231, double %232, double %235), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %236 = call double @llvm.fmuladd.f64(double %231, double %232, double %235)
VisitInstr:   %237 = call double @llvm.fmuladd.f64(double %236, double 0x3E7AD7F29ABCAF48, double %193)
Check LatCell: 0
In Meet:   %237 = call double @llvm.fmuladd.f64(double %236, double 0x3E7AD7F29ABCAF48, double %193), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %237 = call double @llvm.fmuladd.f64(double %236, double 0x3E7AD7F29ABCAF48, double %193)
VisitInstr:   store double %237, ptr %11, align 8
Check LatCell: 0
In Meet:   store double %237, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %237, ptr %11, align 8
VisitInstr:   %238 = load double, ptr %214, align 8
Check LatCell: 0
In Meet:   %238 = load double, ptr %214, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %238 = load double, ptr %214, align 8
VisitInstr:   %239 = call double @cos(double noundef %215) #5
Check LatCell: 0
In Meet:   %239 = call double @cos(double noundef %215) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %239 = call double @cos(double noundef %215) #5
VisitInstr:   %240 = load double, ptr %221, align 8
Check LatCell: 0
In Meet:   %240 = load double, ptr %221, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %240 = load double, ptr %221, align 8
VisitInstr:   %241 = call double @sin(double noundef %222) #5
Check LatCell: 0
In Meet:   %241 = call double @sin(double noundef %222) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %241 = call double @sin(double noundef %222) #5
VisitInstr:   %242 = fmul double %240, %241
BinaryOp:   %242 = fmul double %240, %241
Check LatCell: 0
In Meet:   %242 = fmul double %240, %241, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %242 = fmul double %240, %241
VisitInstr:   %243 = call double @llvm.fmuladd.f64(double %238, double %239, double %242)
Check LatCell: 0
In Meet:   %243 = call double @llvm.fmuladd.f64(double %238, double %239, double %242), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %243 = call double @llvm.fmuladd.f64(double %238, double %239, double %242)
VisitInstr:   %244 = call double @llvm.fmuladd.f64(double %243, double 0x3E7AD7F29ABCAF48, double %208)
Check LatCell: 0
In Meet:   %244 = call double @llvm.fmuladd.f64(double %243, double 0x3E7AD7F29ABCAF48, double %208), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %244 = call double @llvm.fmuladd.f64(double %243, double 0x3E7AD7F29ABCAF48, double %208)
VisitInstr:   store double %244, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %244, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %244, ptr %12, align 8
VisitInstr:   br label %245
BranchInst:   br label %245
In AddEdge: 0x55e433974660, 0x55e4339771e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %247 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %247 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %247 = load i32, ptr %5, align 4
VisitInstr:   %248 = sext i32 %247 to i64
UnaryOp:   %248 = sext i32 %247 to i64
Check LatCell: 0
In Meet:   %248 = sext i32 %247 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %248 = sext i32 %247 to i64
VisitInstr:   %249 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %248
GetElementPtr:   %249 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %248
Check LatCell: 0
In Meet:   %249 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %248, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %249 = getelementptr inbounds [8 x [9 x double]], ptr @kp, i64 0, i64 %248
VisitInstr:   %250 = getelementptr inbounds [9 x double], ptr %249, i64 0, i64 8
GetElementPtr:   %250 = getelementptr inbounds [9 x double], ptr %249, i64 0, i64 8
Check LatCell: 0
In Meet:   %250 = getelementptr inbounds [9 x double], ptr %249, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %250 = getelementptr inbounds [9 x double], ptr %249, i64 0, i64 8
VisitInstr:   %251 = load double, ptr %250, align 8
Check LatCell: 0
In Meet:   %251 = load double, ptr %250, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %251 = load double, ptr %250, align 8
VisitInstr:   %252 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %252 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %252 = load double, ptr %17, align 8
VisitInstr:   %253 = fmul double %251, %252
BinaryOp:   %253 = fmul double %251, %252
Check LatCell: 0
In Meet:   %253 = fmul double %251, %252, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %253 = fmul double %251, %252
VisitInstr:   store double %253, ptr %18, align 8
Check LatCell: 0
In Meet:   store double %253, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %253, ptr %18, align 8
VisitInstr:   %254 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %254 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %254 = load double, ptr %11, align 8
VisitInstr:   %255 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %255 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %255 = load double, ptr %10, align 8
VisitInstr:   %256 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %256 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %256 = load i32, ptr %5, align 4
VisitInstr:   %257 = sext i32 %256 to i64
UnaryOp:   %257 = sext i32 %256 to i64
Check LatCell: 0
In Meet:   %257 = sext i32 %256 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %257 = sext i32 %256 to i64
VisitInstr:   %258 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %257
GetElementPtr:   %258 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %257
Check LatCell: 0
In Meet:   %258 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %257, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %258 = getelementptr inbounds [8 x [9 x double]], ptr @ca, i64 0, i64 %257
VisitInstr:   %259 = getelementptr inbounds [9 x double], ptr %258, i64 0, i64 8
GetElementPtr:   %259 = getelementptr inbounds [9 x double], ptr %258, i64 0, i64 8
Check LatCell: 0
In Meet:   %259 = getelementptr inbounds [9 x double], ptr %258, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %259 = getelementptr inbounds [9 x double], ptr %258, i64 0, i64 8
VisitInstr:   %260 = load double, ptr %259, align 8
Check LatCell: 0
In Meet:   %260 = load double, ptr %259, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %260 = load double, ptr %259, align 8
VisitInstr:   %261 = load double, ptr %18, align 8
Check LatCell: 0
In Meet:   %261 = load double, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %261 = load double, ptr %18, align 8
VisitInstr:   %262 = call double @cos(double noundef %261) #5
Check LatCell: 0
In Meet:   %262 = call double @cos(double noundef %261) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %262 = call double @cos(double noundef %261) #5
VisitInstr:   %263 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %263 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %263 = load i32, ptr %5, align 4
VisitInstr:   %264 = sext i32 %263 to i64
UnaryOp:   %264 = sext i32 %263 to i64
Check LatCell: 0
In Meet:   %264 = sext i32 %263 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %264 = sext i32 %263 to i64
VisitInstr:   %265 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %264
GetElementPtr:   %265 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %264
Check LatCell: 0
In Meet:   %265 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %264, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %265 = getelementptr inbounds [8 x [9 x double]], ptr @sa, i64 0, i64 %264
VisitInstr:   %266 = getelementptr inbounds [9 x double], ptr %265, i64 0, i64 8
GetElementPtr:   %266 = getelementptr inbounds [9 x double], ptr %265, i64 0, i64 8
Check LatCell: 0
In Meet:   %266 = getelementptr inbounds [9 x double], ptr %265, i64 0, i64 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %266 = getelementptr inbounds [9 x double], ptr %265, i64 0, i64 8
VisitInstr:   %267 = load double, ptr %266, align 8
Check LatCell: 0
In Meet:   %267 = load double, ptr %266, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %267 = load double, ptr %266, align 8
VisitInstr:   %268 = load double, ptr %18, align 8
Check LatCell: 0
In Meet:   %268 = load double, ptr %18, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %268 = load double, ptr %18, align 8
VisitInstr:   %269 = call double @sin(double noundef %268) #5
Check LatCell: 0
In Meet:   %269 = call double @sin(double noundef %268) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %269 = call double @sin(double noundef %268) #5
VisitInstr:   %270 = fmul double %267, %269
BinaryOp:   %270 = fmul double %267, %269
Check LatCell: 0
In Meet:   %270 = fmul double %267, %269, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %270 = fmul double %267, %269
VisitInstr:   %271 = call double @llvm.fmuladd.f64(double %260, double %262, double %270)
Check LatCell: 0
In Meet:   %271 = call double @llvm.fmuladd.f64(double %260, double %262, double %270), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %271 = call double @llvm.fmuladd.f64(double %260, double %262, double %270)
VisitInstr:   %272 = fmul double %255, %271
BinaryOp:   %272 = fmul double %255, %271
Check LatCell: 0
In Meet:   %272 = fmul double %255, %271, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %272 = fmul double %255, %271
VisitInstr:   %273 = call double @llvm.fmuladd.f64(double %272, double 0x3E7AD7F29ABCAF48, double %254)
Check LatCell: 0
In Meet:   %273 = call double @llvm.fmuladd.f64(double %272, double 0x3E7AD7F29ABCAF48, double %254), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %273 = call double @llvm.fmuladd.f64(double %272, double 0x3E7AD7F29ABCAF48, double %254)
VisitInstr:   store double %273, ptr %11, align 8
Check LatCell: 0
In Meet:   store double %273, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %273, ptr %11, align 8
VisitInstr:   store i32 8, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 8, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 8, ptr %9, align 4
VisitInstr:   %274 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %274 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %274 = load i32, ptr %9, align 4
VisitInstr:   %275 = icmp sle i32 %274, 9
CmpInst:   %275 = icmp sle i32 %274, 9
Check LatCell: 0
In Meet:   %275 = icmp sle i32 %274, 9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %275 = icmp sle i32 %274, 9
VisitInstr:   %276 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %276 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %276 = load i32, ptr %5, align 4
VisitInstr:   %277 = sext i32 %276 to i64
UnaryOp:   %277 = sext i32 %276 to i64
Check LatCell: 0
In Meet:   %277 = sext i32 %276 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %277 = sext i32 %276 to i64
VisitInstr:   %278 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %277
GetElementPtr:   %278 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %277
Check LatCell: 0
In Meet:   %278 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %277, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %278 = getelementptr inbounds [8 x [10 x double]], ptr @kq, i64 0, i64 %277
VisitInstr:   %279 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %279 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %279 = load i32, ptr %9, align 4
VisitInstr:   %280 = sext i32 %279 to i64
UnaryOp:   %280 = sext i32 %279 to i64
Check LatCell: 0
In Meet:   %280 = sext i32 %279 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %280 = sext i32 %279 to i64
VisitInstr:   %281 = getelementptr inbounds [10 x double], ptr %278, i64 0, i64 %280
GetElementPtr:   %281 = getelementptr inbounds [10 x double], ptr %278, i64 0, i64 %280
Check LatCell: 0
In Meet:   %281 = getelementptr inbounds [10 x double], ptr %278, i64 0, i64 %280, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %281 = getelementptr inbounds [10 x double], ptr %278, i64 0, i64 %280
VisitInstr:   %282 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %282 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %282 = load double, ptr %17, align 8
VisitInstr:   %283 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %283 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %283 = load double, ptr %12, align 8
VisitInstr:   %284 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %284 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %284 = load double, ptr %10, align 8
VisitInstr:   %285 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %285 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %285 = load i32, ptr %5, align 4
VisitInstr:   %286 = sext i32 %285 to i64
UnaryOp:   %286 = sext i32 %285 to i64
Check LatCell: 0
In Meet:   %286 = sext i32 %285 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %286 = sext i32 %285 to i64
VisitInstr:   %287 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %286
GetElementPtr:   %287 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %286
Check LatCell: 0
In Meet:   %287 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %286, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %287 = getelementptr inbounds [8 x [10 x double]], ptr @cl, i64 0, i64 %286
VisitInstr:   %288 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %288 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %288 = load i32, ptr %9, align 4
VisitInstr:   %289 = sext i32 %288 to i64
UnaryOp:   %289 = sext i32 %288 to i64
Check LatCell: 0
In Meet:   %289 = sext i32 %288 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %289 = sext i32 %288 to i64
VisitInstr:   %290 = getelementptr inbounds [10 x double], ptr %287, i64 0, i64 %289
GetElementPtr:   %290 = getelementptr inbounds [10 x double], ptr %287, i64 0, i64 %289
Check LatCell: 0
In Meet:   %290 = getelementptr inbounds [10 x double], ptr %287, i64 0, i64 %289, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %290 = getelementptr inbounds [10 x double], ptr %287, i64 0, i64 %289
VisitInstr:   %291 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %291 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %291 = load double, ptr %19, align 8
VisitInstr:   %292 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %292 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %292 = load i32, ptr %5, align 4
VisitInstr:   %293 = sext i32 %292 to i64
UnaryOp:   %293 = sext i32 %292 to i64
Check LatCell: 0
In Meet:   %293 = sext i32 %292 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %293 = sext i32 %292 to i64
VisitInstr:   %294 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %293
GetElementPtr:   %294 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %293
Check LatCell: 0
In Meet:   %294 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %293, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %294 = getelementptr inbounds [8 x [10 x double]], ptr @sl, i64 0, i64 %293
VisitInstr:   %295 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %295 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %295 = load i32, ptr %9, align 4
VisitInstr:   %296 = sext i32 %295 to i64
UnaryOp:   %296 = sext i32 %295 to i64
Check LatCell: 0
In Meet:   %296 = sext i32 %295 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %296 = sext i32 %295 to i64
VisitInstr:   %297 = getelementptr inbounds [10 x double], ptr %294, i64 0, i64 %296
GetElementPtr:   %297 = getelementptr inbounds [10 x double], ptr %294, i64 0, i64 %296
Check LatCell: 0
In Meet:   %297 = getelementptr inbounds [10 x double], ptr %294, i64 0, i64 %296, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %297 = getelementptr inbounds [10 x double], ptr %294, i64 0, i64 %296
VisitInstr:   %298 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %298 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %298 = load double, ptr %19, align 8
VisitInstr:   %299 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %299 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %299 = load i32, ptr %9, align 4
VisitInstr:   %300 = add nsw i32 %299, 1
BinaryOp:   %300 = add nsw i32 %299, 1
Check LatCell: 0
In Meet:   %300 = add nsw i32 %299, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %300 = add nsw i32 %299, 1
VisitInstr:   br label %301
BranchInst:   br label %301
In AddEdge: 0x55e4339746b0, 0x55e433979a60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %224, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %224, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %224, ptr %9, align 4
VisitInstr:   br label %225, !llvm.loop !6
BranchInst:   br label %225, !llvm.loop !6
In AddEdge: 0x55e433977130, 0x55e4339773e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %275, label %302, label %314
BranchInst:   br i1 %275, label %302, label %314
In BranchInst: -1, 0x0
In AddEdge: 0x55e4339799f0, 0x55e433979cf0, 0
Adding edge:  -> 
In AddEdge: 0x55e4339799f0, 0x55e433979cf0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %303 = load double, ptr %281, align 8
Check LatCell: 0
In Meet:   %303 = load double, ptr %281, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %303 = load double, ptr %281, align 8
VisitInstr:   %304 = fmul double %303, %282
BinaryOp:   %304 = fmul double %303, %282
Check LatCell: 0
In Meet:   %304 = fmul double %303, %282, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %304 = fmul double %303, %282
VisitInstr:   store double %304, ptr %19, align 8
Check LatCell: 0
In Meet:   store double %304, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %304, ptr %19, align 8
VisitInstr:   %305 = load double, ptr %290, align 8
Check LatCell: 0
In Meet:   %305 = load double, ptr %290, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %305 = load double, ptr %290, align 8
VisitInstr:   %306 = call double @cos(double noundef %291) #5
Check LatCell: 0
In Meet:   %306 = call double @cos(double noundef %291) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %306 = call double @cos(double noundef %291) #5
VisitInstr:   %307 = load double, ptr %297, align 8
Check LatCell: 0
In Meet:   %307 = load double, ptr %297, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %307 = load double, ptr %297, align 8
VisitInstr:   %308 = call double @sin(double noundef %298) #5
Check LatCell: 0
In Meet:   %308 = call double @sin(double noundef %298) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %308 = call double @sin(double noundef %298) #5
VisitInstr:   %309 = fmul double %307, %308
BinaryOp:   %309 = fmul double %307, %308
Check LatCell: 0
In Meet:   %309 = fmul double %307, %308, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %309 = fmul double %307, %308
VisitInstr:   %310 = call double @llvm.fmuladd.f64(double %305, double %306, double %309)
Check LatCell: 0
In Meet:   %310 = call double @llvm.fmuladd.f64(double %305, double %306, double %309), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %310 = call double @llvm.fmuladd.f64(double %305, double %306, double %309)
VisitInstr:   %311 = fmul double %284, %310
BinaryOp:   %311 = fmul double %284, %310
Check LatCell: 0
In Meet:   %311 = fmul double %284, %310, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %311 = fmul double %284, %310
VisitInstr:   %312 = call double @llvm.fmuladd.f64(double %311, double 0x3E7AD7F29ABCAF48, double %283)
Check LatCell: 0
In Meet:   %312 = call double @llvm.fmuladd.f64(double %311, double 0x3E7AD7F29ABCAF48, double %283), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %312 = call double @llvm.fmuladd.f64(double %311, double 0x3E7AD7F29ABCAF48, double %283)
VisitInstr:   store double %312, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %312, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %312, ptr %12, align 8
VisitInstr:   br label %313
BranchInst:   br label %313
In AddEdge: 0x55e433979bb0, 0x55e43397b270, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %315 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %315 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %315 = load double, ptr %12, align 8
VisitInstr:   %316 = call double @fmod(double noundef %315, double noundef 0x401921FB54442D18) #5
Check LatCell: 0
In Meet:   %316 = call double @fmod(double noundef %315, double noundef 0x401921FB54442D18) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %316 = call double @fmod(double noundef %315, double noundef 0x401921FB54442D18) #5
VisitInstr:   store double %316, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %316, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %316, ptr %12, align 8
VisitInstr:   %317 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %317 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %317 = load double, ptr %12, align 8
VisitInstr:   %318 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %318 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %318 = load double, ptr %14, align 8
VisitInstr:   %319 = fsub double %317, %318
BinaryOp:   %319 = fsub double %317, %318
Check LatCell: 0
In Meet:   %319 = fsub double %317, %318, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %319 = fsub double %317, %318
VisitInstr:   store double %319, ptr %20, align 8
Check LatCell: 0
In Meet:   store double %319, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %319, ptr %20, align 8
VisitInstr:   %320 = load double, ptr %20, align 8
Check LatCell: 0
In Meet:   %320 = load double, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %320 = load double, ptr %20, align 8
VisitInstr:   %321 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %321 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %321 = load double, ptr %13, align 8
VisitInstr:   %322 = load double, ptr %20, align 8
Check LatCell: 0
In Meet:   %322 = load double, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %322 = load double, ptr %20, align 8
VisitInstr:   %323 = call double @sin(double noundef %322) #5
Check LatCell: 0
In Meet:   %323 = call double @sin(double noundef %322) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %323 = call double @sin(double noundef %322) #5
VisitInstr:   %324 = call double @llvm.fmuladd.f64(double %321, double %323, double %320)
Check LatCell: 0
In Meet:   %324 = call double @llvm.fmuladd.f64(double %321, double %323, double %320), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %324 = call double @llvm.fmuladd.f64(double %321, double %323, double %320)
VisitInstr:   store double %324, ptr %21, align 8
Check LatCell: 0
In Meet:   store double %324, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %324, ptr %21, align 8
VisitInstr:   store i32 0, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %9, align 4
VisitInstr:   %325 = load double, ptr %20, align 8
Check LatCell: 0
In Meet:   %325 = load double, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %325 = load double, ptr %20, align 8
VisitInstr:   %326 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %326 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %326 = load double, ptr %21, align 8
VisitInstr:   %327 = fsub double %325, %326
BinaryOp:   %327 = fsub double %325, %326
Check LatCell: 0
In Meet:   %327 = fsub double %325, %326, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %327 = fsub double %325, %326
VisitInstr:   %328 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %328 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %328 = load double, ptr %13, align 8
VisitInstr:   %329 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %329 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %329 = load double, ptr %21, align 8
VisitInstr:   %330 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %330 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %330 = load double, ptr %13, align 8
VisitInstr:   %331 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %331 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %331 = load double, ptr %21, align 8
VisitInstr:   %332 = fneg double %330
UnaryOp:   %332 = fneg double %330
Check LatCell: 0
In Meet:   %332 = fneg double %330, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %332 = fneg double %330
VisitInstr:   %333 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %333 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %333 = load double, ptr %21, align 8
VisitInstr:   %334 = load double, ptr %22, align 8
Check LatCell: 0
In Meet:   %334 = load double, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %334 = load double, ptr %22, align 8
VisitInstr:   %335 = fadd double %333, %334
BinaryOp:   %335 = fadd double %333, %334
Check LatCell: 0
In Meet:   %335 = fadd double %333, %334, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %335 = fadd double %333, %334
VisitInstr:   %336 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %336 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %336 = load i32, ptr %9, align 4
VisitInstr:   %337 = add nsw i32 %336, 1
BinaryOp:   %337 = add nsw i32 %336, 1
Check LatCell: 0
In Meet:   %337 = add nsw i32 %336, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %337 = add nsw i32 %336, 1
VisitInstr:   %338 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %338 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %338 = load i32, ptr %9, align 4
VisitInstr:   %339 = icmp sge i32 %338, 10
CmpInst:   %339 = icmp sge i32 %338, 10
Check LatCell: 0
In Meet:   %339 = icmp sge i32 %338, 10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %339 = icmp sge i32 %338, 10
VisitInstr:   %340 = load double, ptr %22, align 8
Check LatCell: 0
In Meet:   %340 = load double, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %340 = load double, ptr %22, align 8
VisitInstr:   br label %341
BranchInst:   br label %341
In AddEdge: 0x55e433979c00, 0x55e43397bf10, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %300, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %300, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %300, ptr %9, align 4
VisitInstr:   br label %301, !llvm.loop !8
BranchInst:   br label %301, !llvm.loop !8
In AddEdge: 0x55e43397b200, 0x55e43397b470, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %342 = call double @sin(double noundef %329) #5
Check LatCell: 0
In Meet:   %342 = call double @sin(double noundef %329) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %342 = call double @sin(double noundef %329) #5
VisitInstr:   %343 = call double @llvm.fmuladd.f64(double %328, double %342, double %327)
Check LatCell: 0
In Meet:   %343 = call double @llvm.fmuladd.f64(double %328, double %342, double %327), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %343 = call double @llvm.fmuladd.f64(double %328, double %342, double %327)
VisitInstr:   %344 = call double @cos(double noundef %331) #5
Check LatCell: 0
In Meet:   %344 = call double @cos(double noundef %331) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %344 = call double @cos(double noundef %331) #5
VisitInstr:   %345 = call double @llvm.fmuladd.f64(double %332, double %344, double 1.000000e+00)
Check LatCell: 0
In Meet:   %345 = call double @llvm.fmuladd.f64(double %332, double %344, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %345 = call double @llvm.fmuladd.f64(double %332, double %344, double 1.000000e+00)
VisitInstr:   %346 = fdiv double %343, %345
BinaryOp:   %346 = fdiv double %343, %345
Check LatCell: 0
In Meet:   %346 = fdiv double %343, %345, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %346 = fdiv double %343, %345
VisitInstr:   store double %346, ptr %22, align 8
Check LatCell: 0
In Meet:   store double %346, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %346, ptr %22, align 8
VisitInstr:   store double %335, ptr %21, align 8
Check LatCell: 0
In Meet:   store double %335, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %335, ptr %21, align 8
VisitInstr:   store i32 %337, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %337, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %337, ptr %9, align 4
VisitInstr:   br i1 %339, label %350, label %347
BranchInst:   br i1 %339, label %350, label %347
In BranchInst: -1, 0x0
In AddEdge: 0x55e43397bea0, 0x55e43397ceb0, 0
Adding edge:  -> 
In AddEdge: 0x55e43397bea0, 0x55e43397ceb0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %352
BranchInst:   br label %352
In AddEdge: 0x55e43397cd30, 0x55e43397d2a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %348 = call double @llvm.fabs.f64(double %340)
Check LatCell: 0
In Meet:   %348 = call double @llvm.fabs.f64(double %340), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %348 = call double @llvm.fabs.f64(double %340)
VisitInstr:   %349 = fcmp olt double %348, 0x3D719799812DEA11
CmpInst:   %349 = fcmp olt double %348, 0x3D719799812DEA11
Check LatCell: 0
In Meet:   %349 = fcmp olt double %348, 0x3D719799812DEA11, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %349 = fcmp olt double %348, 0x3D719799812DEA11
VisitInstr:   br i1 %349, label %350, label %351
BranchInst:   br i1 %349, label %350, label %351
In BranchInst: -1, 0x0
In AddEdge: 0x55e43397cdc0, 0x55e43397d1e0, 0
Adding edge:  -> 
In AddEdge: 0x55e43397cdc0, 0x55e43397d1e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %353 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %353 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %353 = load double, ptr %21, align 8
VisitInstr:   %354 = fdiv double %353, 2.000000e+00
BinaryOp:   %354 = fdiv double %353, 2.000000e+00
Check LatCell: 0
In Meet:   %354 = fdiv double %353, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %354 = fdiv double %353, 2.000000e+00
VisitInstr:   store double %354, ptr %23, align 8
Check LatCell: 0
In Meet:   store double %354, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %354, ptr %23, align 8
VisitInstr:   %355 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %355 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %355 = load double, ptr %13, align 8
VisitInstr:   %356 = fadd double 1.000000e+00, %355
BinaryOp:   %356 = fadd double 1.000000e+00, %355
Check LatCell: 0
In Meet:   %356 = fadd double 1.000000e+00, %355, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %356 = fadd double 1.000000e+00, %355
VisitInstr:   %357 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %357 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %357 = load double, ptr %13, align 8
VisitInstr:   %358 = fsub double 1.000000e+00, %357
BinaryOp:   %358 = fsub double 1.000000e+00, %357
Check LatCell: 0
In Meet:   %358 = fsub double 1.000000e+00, %357, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %358 = fsub double 1.000000e+00, %357
VisitInstr:   %359 = fdiv double %356, %358
BinaryOp:   %359 = fdiv double %356, %358
Check LatCell: 0
In Meet:   %359 = fdiv double %356, %358, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %359 = fdiv double %356, %358
VisitInstr:   %360 = call double @sqrt(double noundef %359) #5
Check LatCell: 0
In Meet:   %360 = call double @sqrt(double noundef %359) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %360 = call double @sqrt(double noundef %359) #5
VisitInstr:   %361 = load double, ptr %23, align 8
Check LatCell: 0
In Meet:   %361 = load double, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %361 = load double, ptr %23, align 8
VisitInstr:   %362 = call double @sin(double noundef %361) #5
Check LatCell: 0
In Meet:   %362 = call double @sin(double noundef %361) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %362 = call double @sin(double noundef %361) #5
VisitInstr:   %363 = fmul double %360, %362
BinaryOp:   %363 = fmul double %360, %362
Check LatCell: 0
In Meet:   %363 = fmul double %360, %362, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %363 = fmul double %360, %362
VisitInstr:   %364 = load double, ptr %23, align 8
Check LatCell: 0
In Meet:   %364 = load double, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %364 = load double, ptr %23, align 8
VisitInstr:   %365 = call double @cos(double noundef %364) #5
Check LatCell: 0
In Meet:   %365 = call double @cos(double noundef %364) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %365 = call double @cos(double noundef %364) #5
VisitInstr:   %366 = call double @atan2(double noundef %363, double noundef %365) #5
Check LatCell: 0
In Meet:   %366 = call double @atan2(double noundef %363, double noundef %365) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %366 = call double @atan2(double noundef %363, double noundef %365) #5
VisitInstr:   %367 = fmul double 2.000000e+00, %366
BinaryOp:   %367 = fmul double 2.000000e+00, %366
Check LatCell: 0
In Meet:   %367 = fmul double 2.000000e+00, %366, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %367 = fmul double 2.000000e+00, %366
VisitInstr:   store double %367, ptr %24, align 8
Check LatCell: 0
In Meet:   store double %367, ptr %24, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %367, ptr %24, align 8
VisitInstr:   %368 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %368 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %368 = load double, ptr %11, align 8
VisitInstr:   %369 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %369 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %369 = load double, ptr %13, align 8
VisitInstr:   %370 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %370 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %370 = load double, ptr %21, align 8
VisitInstr:   %371 = call double @cos(double noundef %370) #5
Check LatCell: 0
In Meet:   %371 = call double @cos(double noundef %370) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %371 = call double @cos(double noundef %370) #5
VisitInstr:   %372 = fneg double %369
UnaryOp:   %372 = fneg double %369
Check LatCell: 0
In Meet:   %372 = fneg double %369, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %372 = fneg double %369
VisitInstr:   %373 = call double @llvm.fmuladd.f64(double %372, double %371, double 1.000000e+00)
Check LatCell: 0
In Meet:   %373 = call double @llvm.fmuladd.f64(double %372, double %371, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %373 = call double @llvm.fmuladd.f64(double %372, double %371, double 1.000000e+00)
VisitInstr:   %374 = fmul double %368, %373
BinaryOp:   %374 = fmul double %368, %373
Check LatCell: 0
In Meet:   %374 = fmul double %368, %373, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %374 = fmul double %368, %373
VisitInstr:   store double %374, ptr %25, align 8
Check LatCell: 0
In Meet:   store double %374, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %374, ptr %25, align 8
VisitInstr:   %375 = load i32, ptr %5, align 4
Check LatCell: 0
In Meet:   %375 = load i32, ptr %5, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %375 = load i32, ptr %5, align 4
VisitInstr:   %376 = sext i32 %375 to i64
UnaryOp:   %376 = sext i32 %375 to i64
Check LatCell: 0
In Meet:   %376 = sext i32 %375 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %376 = sext i32 %375 to i64
VisitInstr:   %377 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %376
GetElementPtr:   %377 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %376
Check LatCell: 0
In Meet:   %377 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %376, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %377 = getelementptr inbounds [8 x double], ptr @amas, i64 0, i64 %376
VisitInstr:   %378 = load double, ptr %377, align 8
Check LatCell: 0
In Meet:   %378 = load double, ptr %377, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %378 = load double, ptr %377, align 8
VisitInstr:   %379 = fdiv double 1.000000e+00, %378
BinaryOp:   %379 = fdiv double 1.000000e+00, %378
Check LatCell: 0
In Meet:   %379 = fdiv double 1.000000e+00, %378, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %379 = fdiv double 1.000000e+00, %378
VisitInstr:   %380 = fadd double 1.000000e+00, %379
BinaryOp:   %380 = fadd double 1.000000e+00, %379
Check LatCell: 0
In Meet:   %380 = fadd double 1.000000e+00, %379, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %380 = fadd double 1.000000e+00, %379
VisitInstr:   %381 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %381 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %381 = load double, ptr %11, align 8
VisitInstr:   %382 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %382 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %382 = load double, ptr %11, align 8
VisitInstr:   %383 = fmul double %381, %382
BinaryOp:   %383 = fmul double %381, %382
Check LatCell: 0
In Meet:   %383 = fmul double %381, %382, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %383 = fmul double %381, %382
VisitInstr:   %384 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %384 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %384 = load double, ptr %11, align 8
VisitInstr:   %385 = fmul double %383, %384
BinaryOp:   %385 = fmul double %383, %384
Check LatCell: 0
In Meet:   %385 = fmul double %383, %384, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %385 = fmul double %383, %384
VisitInstr:   %386 = fdiv double %380, %385
BinaryOp:   %386 = fdiv double %380, %385
Check LatCell: 0
In Meet:   %386 = fdiv double %380, %385, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %386 = fdiv double %380, %385
VisitInstr:   %387 = call double @sqrt(double noundef %386) #5
Check LatCell: 0
In Meet:   %387 = call double @sqrt(double noundef %386) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %387 = call double @sqrt(double noundef %386) #5
VisitInstr:   %388 = fmul double 0x3F919D6D51A6B69A, %387
BinaryOp:   %388 = fmul double 0x3F919D6D51A6B69A, %387
Check LatCell: 0
In Meet:   %388 = fmul double 0x3F919D6D51A6B69A, %387, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %388 = fmul double 0x3F919D6D51A6B69A, %387
VisitInstr:   store double %388, ptr %26, align 8
Check LatCell: 0
In Meet:   store double %388, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %388, ptr %26, align 8
VisitInstr:   %389 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %389 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %389 = load double, ptr %15, align 8
VisitInstr:   %390 = fdiv double %389, 2.000000e+00
BinaryOp:   %390 = fdiv double %389, 2.000000e+00
Check LatCell: 0
In Meet:   %390 = fdiv double %389, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %390 = fdiv double %389, 2.000000e+00
VisitInstr:   %391 = call double @sin(double noundef %390) #5
Check LatCell: 0
In Meet:   %391 = call double @sin(double noundef %390) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %391 = call double @sin(double noundef %390) #5
VisitInstr:   store double %391, ptr %27, align 8
Check LatCell: 0
In Meet:   store double %391, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %391, ptr %27, align 8
VisitInstr:   %392 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %392 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %392 = load double, ptr %27, align 8
VisitInstr:   %393 = load double, ptr %16, align 8
Check LatCell: 0
In Meet:   %393 = load double, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %393 = load double, ptr %16, align 8
VisitInstr:   %394 = call double @cos(double noundef %393) #5
Check LatCell: 0
In Meet:   %394 = call double @cos(double noundef %393) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %394 = call double @cos(double noundef %393) #5
VisitInstr:   %395 = fmul double %392, %394
BinaryOp:   %395 = fmul double %392, %394
Check LatCell: 0
In Meet:   %395 = fmul double %392, %394, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %395 = fmul double %392, %394
VisitInstr:   store double %395, ptr %28, align 8
Check LatCell: 0
In Meet:   store double %395, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %395, ptr %28, align 8
VisitInstr:   %396 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %396 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %396 = load double, ptr %27, align 8
VisitInstr:   %397 = load double, ptr %16, align 8
Check LatCell: 0
In Meet:   %397 = load double, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %397 = load double, ptr %16, align 8
VisitInstr:   %398 = call double @sin(double noundef %397) #5
Check LatCell: 0
In Meet:   %398 = call double @sin(double noundef %397) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %398 = call double @sin(double noundef %397) #5
VisitInstr:   %399 = fmul double %396, %398
BinaryOp:   %399 = fmul double %396, %398
Check LatCell: 0
In Meet:   %399 = fmul double %396, %398, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %399 = fmul double %396, %398
VisitInstr:   store double %399, ptr %29, align 8
Check LatCell: 0
In Meet:   store double %399, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %399, ptr %29, align 8
VisitInstr:   %400 = load double, ptr %24, align 8
Check LatCell: 0
In Meet:   %400 = load double, ptr %24, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %400 = load double, ptr %24, align 8
VisitInstr:   %401 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %401 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %401 = load double, ptr %14, align 8
VisitInstr:   %402 = fadd double %400, %401
BinaryOp:   %402 = fadd double %400, %401
Check LatCell: 0
In Meet:   %402 = fadd double %400, %401, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %402 = fadd double %400, %401
VisitInstr:   store double %402, ptr %30, align 8
Check LatCell: 0
In Meet:   store double %402, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %402, ptr %30, align 8
VisitInstr:   %403 = load double, ptr %30, align 8
Check LatCell: 0
In Meet:   %403 = load double, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %403 = load double, ptr %30, align 8
VisitInstr:   %404 = call double @sin(double noundef %403) #5
Check LatCell: 0
In Meet:   %404 = call double @sin(double noundef %403) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %404 = call double @sin(double noundef %403) #5
VisitInstr:   store double %404, ptr %31, align 8
Check LatCell: 0
In Meet:   store double %404, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %404, ptr %31, align 8
VisitInstr:   %405 = load double, ptr %30, align 8
Check LatCell: 0
In Meet:   %405 = load double, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %405 = load double, ptr %30, align 8
VisitInstr:   %406 = call double @cos(double noundef %405) #5
Check LatCell: 0
In Meet:   %406 = call double @cos(double noundef %405) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %406 = call double @cos(double noundef %405) #5
VisitInstr:   store double %406, ptr %32, align 8
Check LatCell: 0
In Meet:   store double %406, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %406, ptr %32, align 8
VisitInstr:   %407 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %407 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %407 = load double, ptr %29, align 8
VisitInstr:   %408 = load double, ptr %32, align 8
Check LatCell: 0
In Meet:   %408 = load double, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %408 = load double, ptr %32, align 8
VisitInstr:   %409 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %409 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %409 = load double, ptr %28, align 8
VisitInstr:   %410 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %410 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %410 = load double, ptr %31, align 8
VisitInstr:   %411 = fmul double %409, %410
BinaryOp:   %411 = fmul double %409, %410
Check LatCell: 0
In Meet:   %411 = fmul double %409, %410, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %411 = fmul double %409, %410
VisitInstr:   %412 = fneg double %411
UnaryOp:   %412 = fneg double %411
Check LatCell: 0
In Meet:   %412 = fneg double %411, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %412 = fneg double %411
VisitInstr:   %413 = call double @llvm.fmuladd.f64(double %407, double %408, double %412)
Check LatCell: 0
In Meet:   %413 = call double @llvm.fmuladd.f64(double %407, double %408, double %412), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %413 = call double @llvm.fmuladd.f64(double %407, double %408, double %412)
VisitInstr:   %414 = fmul double 2.000000e+00, %413
BinaryOp:   %414 = fmul double 2.000000e+00, %413
Check LatCell: 0
In Meet:   %414 = fmul double 2.000000e+00, %413, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %414 = fmul double 2.000000e+00, %413
VisitInstr:   store double %414, ptr %33, align 8
Check LatCell: 0
In Meet:   store double %414, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %414, ptr %33, align 8
VisitInstr:   %415 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %415 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %415 = load double, ptr %11, align 8
VisitInstr:   %416 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %416 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %416 = load double, ptr %13, align 8
VisitInstr:   %417 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %417 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %417 = load double, ptr %13, align 8
VisitInstr:   %418 = fneg double %416
UnaryOp:   %418 = fneg double %416
Check LatCell: 0
In Meet:   %418 = fneg double %416, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %418 = fneg double %416
VisitInstr:   %419 = call double @llvm.fmuladd.f64(double %418, double %417, double 1.000000e+00)
Check LatCell: 0
In Meet:   %419 = call double @llvm.fmuladd.f64(double %418, double %417, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %419 = call double @llvm.fmuladd.f64(double %418, double %417, double 1.000000e+00)
VisitInstr:   %420 = call double @sqrt(double noundef %419) #5
Check LatCell: 0
In Meet:   %420 = call double @sqrt(double noundef %419) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %420 = call double @sqrt(double noundef %419) #5
VisitInstr:   %421 = fdiv double %415, %420
BinaryOp:   %421 = fdiv double %415, %420
Check LatCell: 0
In Meet:   %421 = fdiv double %415, %420, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %421 = fdiv double %415, %420
VisitInstr:   store double %421, ptr %34, align 8
Check LatCell: 0
In Meet:   store double %421, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %421, ptr %34, align 8
VisitInstr:   %422 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %422 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %422 = load double, ptr %15, align 8
VisitInstr:   %423 = fdiv double %422, 2.000000e+00
BinaryOp:   %423 = fdiv double %422, 2.000000e+00
Check LatCell: 0
In Meet:   %423 = fdiv double %422, 2.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %423 = fdiv double %422, 2.000000e+00
VisitInstr:   %424 = call double @cos(double noundef %423) #5
Check LatCell: 0
In Meet:   %424 = call double @cos(double noundef %423) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %424 = call double @cos(double noundef %423) #5
VisitInstr:   store double %424, ptr %35, align 8
Check LatCell: 0
In Meet:   store double %424, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %424, ptr %35, align 8
VisitInstr:   %425 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %425 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %425 = load double, ptr %13, align 8
VisitInstr:   %426 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %426 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %426 = load double, ptr %14, align 8
VisitInstr:   %427 = call double @sin(double noundef %426) #5
Check LatCell: 0
In Meet:   %427 = call double @sin(double noundef %426) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %427 = call double @sin(double noundef %426) #5
VisitInstr:   %428 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %428 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %428 = load double, ptr %31, align 8
VisitInstr:   %429 = call double @llvm.fmuladd.f64(double %425, double %427, double %428)
Check LatCell: 0
In Meet:   %429 = call double @llvm.fmuladd.f64(double %425, double %427, double %428), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %429 = call double @llvm.fmuladd.f64(double %425, double %427, double %428)
VisitInstr:   %430 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %430 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %430 = load double, ptr %34, align 8
VisitInstr:   %431 = fmul double %429, %430
BinaryOp:   %431 = fmul double %429, %430
Check LatCell: 0
In Meet:   %431 = fmul double %429, %430, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %431 = fmul double %429, %430
VisitInstr:   store double %431, ptr %36, align 8
Check LatCell: 0
In Meet:   store double %431, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %431, ptr %36, align 8
VisitInstr:   %432 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %432 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %432 = load double, ptr %13, align 8
VisitInstr:   %433 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %433 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %433 = load double, ptr %14, align 8
VisitInstr:   %434 = call double @cos(double noundef %433) #5
Check LatCell: 0
In Meet:   %434 = call double @cos(double noundef %433) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %434 = call double @cos(double noundef %433) #5
VisitInstr:   %435 = load double, ptr %32, align 8
Check LatCell: 0
In Meet:   %435 = load double, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %435 = load double, ptr %32, align 8
VisitInstr:   %436 = call double @llvm.fmuladd.f64(double %432, double %434, double %435)
Check LatCell: 0
In Meet:   %436 = call double @llvm.fmuladd.f64(double %432, double %434, double %435), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %436 = call double @llvm.fmuladd.f64(double %432, double %434, double %435)
VisitInstr:   %437 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %437 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %437 = load double, ptr %34, align 8
VisitInstr:   %438 = fmul double %436, %437
BinaryOp:   %438 = fmul double %436, %437
Check LatCell: 0
In Meet:   %438 = fmul double %436, %437, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %438 = fmul double %436, %437
VisitInstr:   store double %438, ptr %37, align 8
Check LatCell: 0
In Meet:   store double %438, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %438, ptr %37, align 8
VisitInstr:   %439 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %439 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %439 = load double, ptr %29, align 8
VisitInstr:   %440 = fmul double 2.000000e+00, %439
BinaryOp:   %440 = fmul double 2.000000e+00, %439
Check LatCell: 0
In Meet:   %440 = fmul double 2.000000e+00, %439, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %440 = fmul double 2.000000e+00, %439
VisitInstr:   %441 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %441 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %441 = load double, ptr %28, align 8
VisitInstr:   %442 = fmul double %440, %441
BinaryOp:   %442 = fmul double %440, %441
Check LatCell: 0
In Meet:   %442 = fmul double %440, %441, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %442 = fmul double %440, %441
VisitInstr:   store double %442, ptr %38, align 8
Check LatCell: 0
In Meet:   store double %442, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %442, ptr %38, align 8
VisitInstr:   %443 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %443 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %443 = load double, ptr %25, align 8
VisitInstr:   %444 = load double, ptr %32, align 8
Check LatCell: 0
In Meet:   %444 = load double, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %444 = load double, ptr %32, align 8
VisitInstr:   %445 = load double, ptr %33, align 8
Check LatCell: 0
In Meet:   %445 = load double, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %445 = load double, ptr %33, align 8
VisitInstr:   %446 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %446 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %446 = load double, ptr %29, align 8
VisitInstr:   %447 = fneg double %445
UnaryOp:   %447 = fneg double %445
Check LatCell: 0
In Meet:   %447 = fneg double %445, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %447 = fneg double %445
VisitInstr:   %448 = call double @llvm.fmuladd.f64(double %447, double %446, double %444)
Check LatCell: 0
In Meet:   %448 = call double @llvm.fmuladd.f64(double %447, double %446, double %444), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %448 = call double @llvm.fmuladd.f64(double %447, double %446, double %444)
VisitInstr:   %449 = fmul double %443, %448
BinaryOp:   %449 = fmul double %443, %448
Check LatCell: 0
In Meet:   %449 = fmul double %443, %448, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %449 = fmul double %443, %448
VisitInstr:   store double %449, ptr %39, align 8
Check LatCell: 0
In Meet:   store double %449, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %449, ptr %39, align 8
VisitInstr:   %450 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %450 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %450 = load double, ptr %25, align 8
VisitInstr:   %451 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %451 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %451 = load double, ptr %31, align 8
VisitInstr:   %452 = load double, ptr %33, align 8
Check LatCell: 0
In Meet:   %452 = load double, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %452 = load double, ptr %33, align 8
VisitInstr:   %453 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %453 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %453 = load double, ptr %28, align 8
VisitInstr:   %454 = call double @llvm.fmuladd.f64(double %452, double %453, double %451)
Check LatCell: 0
In Meet:   %454 = call double @llvm.fmuladd.f64(double %452, double %453, double %451), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %454 = call double @llvm.fmuladd.f64(double %452, double %453, double %451)
VisitInstr:   %455 = fmul double %450, %454
BinaryOp:   %455 = fmul double %450, %454
Check LatCell: 0
In Meet:   %455 = fmul double %450, %454, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %455 = fmul double %450, %454
VisitInstr:   store double %455, ptr %40, align 8
Check LatCell: 0
In Meet:   store double %455, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %455, ptr %40, align 8
VisitInstr:   %456 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %456 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %456 = load double, ptr %25, align 8
VisitInstr:   %457 = load double, ptr %33, align 8
Check LatCell: 0
In Meet:   %457 = load double, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %457 = load double, ptr %33, align 8
VisitInstr:   %458 = fneg double %457
UnaryOp:   %458 = fneg double %457
Check LatCell: 0
In Meet:   %458 = fneg double %457, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %458 = fneg double %457
VisitInstr:   %459 = load double, ptr %35, align 8
Check LatCell: 0
In Meet:   %459 = load double, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %459 = load double, ptr %35, align 8
VisitInstr:   %460 = fmul double %458, %459
BinaryOp:   %460 = fmul double %458, %459
Check LatCell: 0
In Meet:   %460 = fmul double %458, %459, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %460 = fmul double %458, %459
VisitInstr:   %461 = fmul double %456, %460
BinaryOp:   %461 = fmul double %456, %460
Check LatCell: 0
In Meet:   %461 = fmul double %456, %460, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %461 = fmul double %456, %460
VisitInstr:   store double %461, ptr %41, align 8
Check LatCell: 0
In Meet:   store double %461, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %461, ptr %41, align 8
VisitInstr:   %462 = load double, ptr %39, align 8
Check LatCell: 0
In Meet:   %462 = load double, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %462 = load double, ptr %39, align 8
VisitInstr:   %463 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %463 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %463 = load ptr, ptr %6, align 8
VisitInstr:   %464 = getelementptr inbounds [3 x double], ptr %463, i64 0
GetElementPtr:   %464 = getelementptr inbounds [3 x double], ptr %463, i64 0
Check LatCell: 0
In Meet:   %464 = getelementptr inbounds [3 x double], ptr %463, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %464 = getelementptr inbounds [3 x double], ptr %463, i64 0
VisitInstr:   %465 = getelementptr inbounds [3 x double], ptr %464, i64 0, i64 0
GetElementPtr:   %465 = getelementptr inbounds [3 x double], ptr %464, i64 0, i64 0
Check LatCell: 0
In Meet:   %465 = getelementptr inbounds [3 x double], ptr %464, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %465 = getelementptr inbounds [3 x double], ptr %464, i64 0, i64 0
VisitInstr:   store double %462, ptr %465, align 8
Check LatCell: 0
In Meet:   store double %462, ptr %465, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %462, ptr %465, align 8
VisitInstr:   %466 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %466 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %466 = load double, ptr %40, align 8
VisitInstr:   %467 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %467 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %467 = load double, ptr %41, align 8
VisitInstr:   %468 = fmul double %467, 0x3FD9752E50F4B399
BinaryOp:   %468 = fmul double %467, 0x3FD9752E50F4B399
Check LatCell: 0
In Meet:   %468 = fmul double %467, 0x3FD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %468 = fmul double %467, 0x3FD9752E50F4B399
VisitInstr:   %469 = fneg double %468
UnaryOp:   %469 = fneg double %468
Check LatCell: 0
In Meet:   %469 = fneg double %468, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %469 = fneg double %468
VisitInstr:   %470 = call double @llvm.fmuladd.f64(double %466, double 0x3FED5C0357681EF3, double %469)
Check LatCell: 0
In Meet:   %470 = call double @llvm.fmuladd.f64(double %466, double 0x3FED5C0357681EF3, double %469), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %470 = call double @llvm.fmuladd.f64(double %466, double 0x3FED5C0357681EF3, double %469)
VisitInstr:   %471 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %471 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %471 = load ptr, ptr %6, align 8
VisitInstr:   %472 = getelementptr inbounds [3 x double], ptr %471, i64 0
GetElementPtr:   %472 = getelementptr inbounds [3 x double], ptr %471, i64 0
Check LatCell: 0
In Meet:   %472 = getelementptr inbounds [3 x double], ptr %471, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %472 = getelementptr inbounds [3 x double], ptr %471, i64 0
VisitInstr:   %473 = getelementptr inbounds [3 x double], ptr %472, i64 0, i64 1
GetElementPtr:   %473 = getelementptr inbounds [3 x double], ptr %472, i64 0, i64 1
Check LatCell: 0
In Meet:   %473 = getelementptr inbounds [3 x double], ptr %472, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %473 = getelementptr inbounds [3 x double], ptr %472, i64 0, i64 1
VisitInstr:   store double %470, ptr %473, align 8
Check LatCell: 0
In Meet:   store double %470, ptr %473, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %470, ptr %473, align 8
VisitInstr:   %474 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %474 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %474 = load double, ptr %40, align 8
VisitInstr:   %475 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %475 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %475 = load double, ptr %41, align 8
VisitInstr:   %476 = fmul double %475, 0x3FED5C0357681EF3
BinaryOp:   %476 = fmul double %475, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %476 = fmul double %475, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %476 = fmul double %475, 0x3FED5C0357681EF3
VisitInstr:   %477 = call double @llvm.fmuladd.f64(double %474, double 0x3FD9752E50F4B399, double %476)
Check LatCell: 0
In Meet:   %477 = call double @llvm.fmuladd.f64(double %474, double 0x3FD9752E50F4B399, double %476), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %477 = call double @llvm.fmuladd.f64(double %474, double 0x3FD9752E50F4B399, double %476)
VisitInstr:   %478 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %478 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %478 = load ptr, ptr %6, align 8
VisitInstr:   %479 = getelementptr inbounds [3 x double], ptr %478, i64 0
GetElementPtr:   %479 = getelementptr inbounds [3 x double], ptr %478, i64 0
Check LatCell: 0
In Meet:   %479 = getelementptr inbounds [3 x double], ptr %478, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %479 = getelementptr inbounds [3 x double], ptr %478, i64 0
VisitInstr:   %480 = getelementptr inbounds [3 x double], ptr %479, i64 0, i64 2
GetElementPtr:   %480 = getelementptr inbounds [3 x double], ptr %479, i64 0, i64 2
Check LatCell: 0
In Meet:   %480 = getelementptr inbounds [3 x double], ptr %479, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %480 = getelementptr inbounds [3 x double], ptr %479, i64 0, i64 2
VisitInstr:   store double %477, ptr %480, align 8
Check LatCell: 0
In Meet:   store double %477, ptr %480, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %477, ptr %480, align 8
VisitInstr:   %481 = load double, ptr %26, align 8
Check LatCell: 0
In Meet:   %481 = load double, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %481 = load double, ptr %26, align 8
VisitInstr:   %482 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %482 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %482 = load double, ptr %29, align 8
VisitInstr:   %483 = fmul double 2.000000e+00, %482
BinaryOp:   %483 = fmul double 2.000000e+00, %482
Check LatCell: 0
In Meet:   %483 = fmul double 2.000000e+00, %482, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %483 = fmul double 2.000000e+00, %482
VisitInstr:   %484 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %484 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %484 = load double, ptr %29, align 8
VisitInstr:   %485 = call double @llvm.fmuladd.f64(double %483, double %484, double -1.000000e+00)
Check LatCell: 0
In Meet:   %485 = call double @llvm.fmuladd.f64(double %483, double %484, double -1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %485 = call double @llvm.fmuladd.f64(double %483, double %484, double -1.000000e+00)
VisitInstr:   %486 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %486 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %486 = load double, ptr %36, align 8
VisitInstr:   %487 = load double, ptr %38, align 8
Check LatCell: 0
In Meet:   %487 = load double, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %487 = load double, ptr %38, align 8
VisitInstr:   %488 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %488 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %488 = load double, ptr %37, align 8
VisitInstr:   %489 = fmul double %487, %488
BinaryOp:   %489 = fmul double %487, %488
Check LatCell: 0
In Meet:   %489 = fmul double %487, %488, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %489 = fmul double %487, %488
VisitInstr:   %490 = call double @llvm.fmuladd.f64(double %485, double %486, double %489)
Check LatCell: 0
In Meet:   %490 = call double @llvm.fmuladd.f64(double %485, double %486, double %489), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %490 = call double @llvm.fmuladd.f64(double %485, double %486, double %489)
VisitInstr:   %491 = fmul double %481, %490
BinaryOp:   %491 = fmul double %481, %490
Check LatCell: 0
In Meet:   %491 = fmul double %481, %490, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %491 = fmul double %481, %490
VisitInstr:   store double %491, ptr %39, align 8
Check LatCell: 0
In Meet:   store double %491, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %491, ptr %39, align 8
VisitInstr:   %492 = load double, ptr %26, align 8
Check LatCell: 0
In Meet:   %492 = load double, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %492 = load double, ptr %26, align 8
VisitInstr:   %493 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %493 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %493 = load double, ptr %28, align 8
VisitInstr:   %494 = fmul double 2.000000e+00, %493
BinaryOp:   %494 = fmul double 2.000000e+00, %493
Check LatCell: 0
In Meet:   %494 = fmul double 2.000000e+00, %493, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %494 = fmul double 2.000000e+00, %493
VisitInstr:   %495 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %495 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %495 = load double, ptr %28, align 8
VisitInstr:   %496 = fneg double %494
UnaryOp:   %496 = fneg double %494
Check LatCell: 0
In Meet:   %496 = fneg double %494, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %496 = fneg double %494
VisitInstr:   %497 = call double @llvm.fmuladd.f64(double %496, double %495, double 1.000000e+00)
Check LatCell: 0
In Meet:   %497 = call double @llvm.fmuladd.f64(double %496, double %495, double 1.000000e+00), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %497 = call double @llvm.fmuladd.f64(double %496, double %495, double 1.000000e+00)
VisitInstr:   %498 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %498 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %498 = load double, ptr %37, align 8
VisitInstr:   %499 = load double, ptr %38, align 8
Check LatCell: 0
In Meet:   %499 = load double, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %499 = load double, ptr %38, align 8
VisitInstr:   %500 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %500 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %500 = load double, ptr %36, align 8
VisitInstr:   %501 = fmul double %499, %500
BinaryOp:   %501 = fmul double %499, %500
Check LatCell: 0
In Meet:   %501 = fmul double %499, %500, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %501 = fmul double %499, %500
VisitInstr:   %502 = fneg double %501
UnaryOp:   %502 = fneg double %501
Check LatCell: 0
In Meet:   %502 = fneg double %501, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %502 = fneg double %501
VisitInstr:   %503 = call double @llvm.fmuladd.f64(double %497, double %498, double %502)
Check LatCell: 0
In Meet:   %503 = call double @llvm.fmuladd.f64(double %497, double %498, double %502), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %503 = call double @llvm.fmuladd.f64(double %497, double %498, double %502)
VisitInstr:   %504 = fmul double %492, %503
BinaryOp:   %504 = fmul double %492, %503
Check LatCell: 0
In Meet:   %504 = fmul double %492, %503, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %504 = fmul double %492, %503
VisitInstr:   store double %504, ptr %40, align 8
Check LatCell: 0
In Meet:   store double %504, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %504, ptr %40, align 8
VisitInstr:   %505 = load double, ptr %26, align 8
Check LatCell: 0
In Meet:   %505 = load double, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %505 = load double, ptr %26, align 8
VisitInstr:   %506 = load double, ptr %35, align 8
Check LatCell: 0
In Meet:   %506 = load double, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %506 = load double, ptr %35, align 8
VisitInstr:   %507 = fmul double 2.000000e+00, %506
BinaryOp:   %507 = fmul double 2.000000e+00, %506
Check LatCell: 0
In Meet:   %507 = fmul double 2.000000e+00, %506, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %507 = fmul double 2.000000e+00, %506
VisitInstr:   %508 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %508 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %508 = load double, ptr %29, align 8
VisitInstr:   %509 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %509 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %509 = load double, ptr %36, align 8
VisitInstr:   %510 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %510 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %510 = load double, ptr %28, align 8
VisitInstr:   %511 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %511 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %511 = load double, ptr %37, align 8
VisitInstr:   %512 = fmul double %510, %511
BinaryOp:   %512 = fmul double %510, %511
Check LatCell: 0
In Meet:   %512 = fmul double %510, %511, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %512 = fmul double %510, %511
VisitInstr:   %513 = call double @llvm.fmuladd.f64(double %508, double %509, double %512)
Check LatCell: 0
In Meet:   %513 = call double @llvm.fmuladd.f64(double %508, double %509, double %512), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %513 = call double @llvm.fmuladd.f64(double %508, double %509, double %512)
VisitInstr:   %514 = fmul double %507, %513
BinaryOp:   %514 = fmul double %507, %513
Check LatCell: 0
In Meet:   %514 = fmul double %507, %513, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %514 = fmul double %507, %513
VisitInstr:   %515 = fmul double %505, %514
BinaryOp:   %515 = fmul double %505, %514
Check LatCell: 0
In Meet:   %515 = fmul double %505, %514, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %515 = fmul double %505, %514
VisitInstr:   store double %515, ptr %41, align 8
Check LatCell: 0
In Meet:   store double %515, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %515, ptr %41, align 8
VisitInstr:   %516 = load double, ptr %39, align 8
Check LatCell: 0
In Meet:   %516 = load double, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %516 = load double, ptr %39, align 8
VisitInstr:   %517 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %517 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %517 = load ptr, ptr %6, align 8
VisitInstr:   %518 = getelementptr inbounds [3 x double], ptr %517, i64 1
GetElementPtr:   %518 = getelementptr inbounds [3 x double], ptr %517, i64 1
Check LatCell: 0
In Meet:   %518 = getelementptr inbounds [3 x double], ptr %517, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %518 = getelementptr inbounds [3 x double], ptr %517, i64 1
VisitInstr:   %519 = getelementptr inbounds [3 x double], ptr %518, i64 0, i64 0
GetElementPtr:   %519 = getelementptr inbounds [3 x double], ptr %518, i64 0, i64 0
Check LatCell: 0
In Meet:   %519 = getelementptr inbounds [3 x double], ptr %518, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %519 = getelementptr inbounds [3 x double], ptr %518, i64 0, i64 0
VisitInstr:   store double %516, ptr %519, align 8
Check LatCell: 0
In Meet:   store double %516, ptr %519, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %516, ptr %519, align 8
VisitInstr:   %520 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %520 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %520 = load double, ptr %40, align 8
VisitInstr:   %521 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %521 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %521 = load double, ptr %41, align 8
VisitInstr:   %522 = fmul double %521, 0x3FD9752E50F4B399
BinaryOp:   %522 = fmul double %521, 0x3FD9752E50F4B399
Check LatCell: 0
In Meet:   %522 = fmul double %521, 0x3FD9752E50F4B399, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %522 = fmul double %521, 0x3FD9752E50F4B399
VisitInstr:   %523 = fneg double %522
UnaryOp:   %523 = fneg double %522
Check LatCell: 0
In Meet:   %523 = fneg double %522, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %523 = fneg double %522
VisitInstr:   %524 = call double @llvm.fmuladd.f64(double %520, double 0x3FED5C0357681EF3, double %523)
Check LatCell: 0
In Meet:   %524 = call double @llvm.fmuladd.f64(double %520, double 0x3FED5C0357681EF3, double %523), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %524 = call double @llvm.fmuladd.f64(double %520, double 0x3FED5C0357681EF3, double %523)
VisitInstr:   %525 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %525 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %525 = load ptr, ptr %6, align 8
VisitInstr:   %526 = getelementptr inbounds [3 x double], ptr %525, i64 1
GetElementPtr:   %526 = getelementptr inbounds [3 x double], ptr %525, i64 1
Check LatCell: 0
In Meet:   %526 = getelementptr inbounds [3 x double], ptr %525, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %526 = getelementptr inbounds [3 x double], ptr %525, i64 1
VisitInstr:   %527 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
GetElementPtr:   %527 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
Check LatCell: 0
In Meet:   %527 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %527 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
VisitInstr:   store double %524, ptr %527, align 8
Check LatCell: 0
In Meet:   store double %524, ptr %527, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %524, ptr %527, align 8
VisitInstr:   %528 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %528 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %528 = load double, ptr %40, align 8
VisitInstr:   %529 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %529 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %529 = load double, ptr %41, align 8
VisitInstr:   %530 = fmul double %529, 0x3FED5C0357681EF3
BinaryOp:   %530 = fmul double %529, 0x3FED5C0357681EF3
Check LatCell: 0
In Meet:   %530 = fmul double %529, 0x3FED5C0357681EF3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %530 = fmul double %529, 0x3FED5C0357681EF3
VisitInstr:   %531 = call double @llvm.fmuladd.f64(double %528, double 0x3FD9752E50F4B399, double %530)
Check LatCell: 0
In Meet:   %531 = call double @llvm.fmuladd.f64(double %528, double 0x3FD9752E50F4B399, double %530), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %531 = call double @llvm.fmuladd.f64(double %528, double 0x3FD9752E50F4B399, double %530)
VisitInstr:   %532 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %532 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %532 = load ptr, ptr %6, align 8
VisitInstr:   %533 = getelementptr inbounds [3 x double], ptr %532, i64 1
GetElementPtr:   %533 = getelementptr inbounds [3 x double], ptr %532, i64 1
Check LatCell: 0
In Meet:   %533 = getelementptr inbounds [3 x double], ptr %532, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %533 = getelementptr inbounds [3 x double], ptr %532, i64 1
VisitInstr:   %534 = getelementptr inbounds [3 x double], ptr %533, i64 0, i64 2
GetElementPtr:   %534 = getelementptr inbounds [3 x double], ptr %533, i64 0, i64 2
Check LatCell: 0
In Meet:   %534 = getelementptr inbounds [3 x double], ptr %533, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %534 = getelementptr inbounds [3 x double], ptr %533, i64 0, i64 2
VisitInstr:   store double %531, ptr %534, align 8
Check LatCell: 0
In Meet:   store double %531, ptr %534, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %531, ptr %534, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   br label %341
BranchInst:   br label %341
In AddEdge: 0x55e43397d0f0, 0x55e43397d310, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on radecdist
******************************************************
UnitLoopAnalysis running on radecdist
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 46
[UnitLICM]: NumComputeHoisted: 9
[UnitLICM]: Total: 91
UnitSCCP running on radecdist
Visiting BB: 
VisitInstr:   %3 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %3 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca ptr, align 8
VisitInstr:   %4 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %4 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca ptr, align 8
VisitInstr:   store ptr %0, ptr %3, align 8
Check LatCell: 0
In Meet:   store ptr %0, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %0, ptr %3, align 8
VisitInstr:   store ptr %1, ptr %4, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %4, align 8
VisitInstr:   %5 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %5 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = load ptr, ptr %3, align 8
VisitInstr:   %6 = getelementptr inbounds [3 x double], ptr %5, i64 0
GetElementPtr:   %6 = getelementptr inbounds [3 x double], ptr %5, i64 0
Check LatCell: 0
In Meet:   %6 = getelementptr inbounds [3 x double], ptr %5, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = getelementptr inbounds [3 x double], ptr %5, i64 0
VisitInstr:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
GetElementPtr:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds [3 x double], ptr %6, i64 0, i64 0
VisitInstr:   %8 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %8 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = load double, ptr %7, align 8
VisitInstr:   %9 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %9 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load ptr, ptr %3, align 8
VisitInstr:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0
GetElementPtr:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0
Check LatCell: 0
In Meet:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = getelementptr inbounds [3 x double], ptr %9, i64 0
VisitInstr:   %11 = getelementptr inbounds [3 x double], ptr %10, i64 0, i64 0
GetElementPtr:   %11 = getelementptr inbounds [3 x double], ptr %10, i64 0, i64 0
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds [3 x double], ptr %10, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds [3 x double], ptr %10, i64 0, i64 0
VisitInstr:   %12 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %12 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load double, ptr %11, align 8
VisitInstr:   %13 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %13 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load ptr, ptr %3, align 8
VisitInstr:   %14 = getelementptr inbounds [3 x double], ptr %13, i64 0
GetElementPtr:   %14 = getelementptr inbounds [3 x double], ptr %13, i64 0
Check LatCell: 0
In Meet:   %14 = getelementptr inbounds [3 x double], ptr %13, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = getelementptr inbounds [3 x double], ptr %13, i64 0
VisitInstr:   %15 = getelementptr inbounds [3 x double], ptr %14, i64 0, i64 1
GetElementPtr:   %15 = getelementptr inbounds [3 x double], ptr %14, i64 0, i64 1
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds [3 x double], ptr %14, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds [3 x double], ptr %14, i64 0, i64 1
VisitInstr:   %16 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %16 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load double, ptr %15, align 8
VisitInstr:   %17 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %17 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load ptr, ptr %3, align 8
VisitInstr:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0
GetElementPtr:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0
Check LatCell: 0
In Meet:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = getelementptr inbounds [3 x double], ptr %17, i64 0
VisitInstr:   %19 = getelementptr inbounds [3 x double], ptr %18, i64 0, i64 1
GetElementPtr:   %19 = getelementptr inbounds [3 x double], ptr %18, i64 0, i64 1
Check LatCell: 0
In Meet:   %19 = getelementptr inbounds [3 x double], ptr %18, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = getelementptr inbounds [3 x double], ptr %18, i64 0, i64 1
VisitInstr:   %20 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %20 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = load double, ptr %19, align 8
VisitInstr:   %21 = fmul double %16, %20
BinaryOp:   %21 = fmul double %16, %20
Check LatCell: 0
In Meet:   %21 = fmul double %16, %20, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = fmul double %16, %20
VisitInstr:   %22 = call double @llvm.fmuladd.f64(double %8, double %12, double %21)
Check LatCell: 0
In Meet:   %22 = call double @llvm.fmuladd.f64(double %8, double %12, double %21), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = call double @llvm.fmuladd.f64(double %8, double %12, double %21)
VisitInstr:   %23 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %23 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load ptr, ptr %3, align 8
VisitInstr:   %24 = getelementptr inbounds [3 x double], ptr %23, i64 0
GetElementPtr:   %24 = getelementptr inbounds [3 x double], ptr %23, i64 0
Check LatCell: 0
In Meet:   %24 = getelementptr inbounds [3 x double], ptr %23, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = getelementptr inbounds [3 x double], ptr %23, i64 0
VisitInstr:   %25 = getelementptr inbounds [3 x double], ptr %24, i64 0, i64 2
GetElementPtr:   %25 = getelementptr inbounds [3 x double], ptr %24, i64 0, i64 2
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds [3 x double], ptr %24, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds [3 x double], ptr %24, i64 0, i64 2
VisitInstr:   %26 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %26 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = load double, ptr %25, align 8
VisitInstr:   %27 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %27 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = load ptr, ptr %3, align 8
VisitInstr:   %28 = getelementptr inbounds [3 x double], ptr %27, i64 0
GetElementPtr:   %28 = getelementptr inbounds [3 x double], ptr %27, i64 0
Check LatCell: 0
In Meet:   %28 = getelementptr inbounds [3 x double], ptr %27, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = getelementptr inbounds [3 x double], ptr %27, i64 0
VisitInstr:   %29 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
GetElementPtr:   %29 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
VisitInstr:   %30 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %30 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = load double, ptr %29, align 8
VisitInstr:   %31 = call double @llvm.fmuladd.f64(double %26, double %30, double %22)
Check LatCell: 0
In Meet:   %31 = call double @llvm.fmuladd.f64(double %26, double %30, double %22), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = call double @llvm.fmuladd.f64(double %26, double %30, double %22)
VisitInstr:   %32 = call double @sqrt(double noundef %31) #5
Check LatCell: 0
In Meet:   %32 = call double @sqrt(double noundef %31) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = call double @sqrt(double noundef %31) #5
VisitInstr:   %33 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %33 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load ptr, ptr %4, align 8
VisitInstr:   %34 = getelementptr inbounds double, ptr %33, i64 2
GetElementPtr:   %34 = getelementptr inbounds double, ptr %33, i64 2
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds double, ptr %33, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds double, ptr %33, i64 2
VisitInstr:   store double %32, ptr %34, align 8
Check LatCell: 0
In Meet:   store double %32, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %32, ptr %34, align 8
VisitInstr:   %35 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %35 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load ptr, ptr %3, align 8
VisitInstr:   %36 = getelementptr inbounds [3 x double], ptr %35, i64 0
GetElementPtr:   %36 = getelementptr inbounds [3 x double], ptr %35, i64 0
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds [3 x double], ptr %35, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds [3 x double], ptr %35, i64 0
VisitInstr:   %37 = getelementptr inbounds [3 x double], ptr %36, i64 0, i64 1
GetElementPtr:   %37 = getelementptr inbounds [3 x double], ptr %36, i64 0, i64 1
Check LatCell: 0
In Meet:   %37 = getelementptr inbounds [3 x double], ptr %36, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = getelementptr inbounds [3 x double], ptr %36, i64 0, i64 1
VisitInstr:   %38 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %38 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = load double, ptr %37, align 8
VisitInstr:   %39 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %39 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = load ptr, ptr %3, align 8
VisitInstr:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0
GetElementPtr:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0
Check LatCell: 0
In Meet:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = getelementptr inbounds [3 x double], ptr %39, i64 0
VisitInstr:   %41 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 0
GetElementPtr:   %41 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 0
Check LatCell: 0
In Meet:   %41 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 0
VisitInstr:   %42 = load double, ptr %41, align 8
Check LatCell: 0
In Meet:   %42 = load double, ptr %41, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load double, ptr %41, align 8
VisitInstr:   %43 = call double @atan2(double noundef %38, double noundef %42) #5
Check LatCell: 0
In Meet:   %43 = call double @atan2(double noundef %38, double noundef %42) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = call double @atan2(double noundef %38, double noundef %42) #5
VisitInstr:   %44 = fmul double %43, 0x400E8EC8A4AEACC4
BinaryOp:   %44 = fmul double %43, 0x400E8EC8A4AEACC4
Check LatCell: 0
In Meet:   %44 = fmul double %43, 0x400E8EC8A4AEACC4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = fmul double %43, 0x400E8EC8A4AEACC4
VisitInstr:   %45 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %45 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load ptr, ptr %4, align 8
VisitInstr:   %46 = getelementptr inbounds double, ptr %45, i64 0
GetElementPtr:   %46 = getelementptr inbounds double, ptr %45, i64 0
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds double, ptr %45, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds double, ptr %45, i64 0
VisitInstr:   store double %44, ptr %46, align 8
Check LatCell: 0
In Meet:   store double %44, ptr %46, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %44, ptr %46, align 8
VisitInstr:   %47 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %47 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load ptr, ptr %4, align 8
VisitInstr:   %48 = getelementptr inbounds double, ptr %47, i64 0
GetElementPtr:   %48 = getelementptr inbounds double, ptr %47, i64 0
Check LatCell: 0
In Meet:   %48 = getelementptr inbounds double, ptr %47, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = getelementptr inbounds double, ptr %47, i64 0
VisitInstr:   %49 = load double, ptr %48, align 8
Check LatCell: 0
In Meet:   %49 = load double, ptr %48, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load double, ptr %48, align 8
VisitInstr:   %50 = fcmp olt double %49, 0.000000e+00
CmpInst:   %50 = fcmp olt double %49, 0.000000e+00
Check LatCell: 0
In Meet:   %50 = fcmp olt double %49, 0.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = fcmp olt double %49, 0.000000e+00
VisitInstr:   br i1 %50, label %51, label %56
BranchInst:   br i1 %50, label %51, label %56
In BranchInst: -1, 0x0
In AddEdge: 0x55e433984ec0, 0x55e4339870d0, 0
Adding edge:  -> 
In AddEdge: 0x55e433984ec0, 0x55e4339870d0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %52 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %52 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load ptr, ptr %4, align 8
VisitInstr:   %53 = getelementptr inbounds double, ptr %52, i64 0
GetElementPtr:   %53 = getelementptr inbounds double, ptr %52, i64 0
Check LatCell: 0
In Meet:   %53 = getelementptr inbounds double, ptr %52, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = getelementptr inbounds double, ptr %52, i64 0
VisitInstr:   %54 = load double, ptr %53, align 8
Check LatCell: 0
In Meet:   %54 = load double, ptr %53, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = load double, ptr %53, align 8
VisitInstr:   %55 = fadd double %54, 2.400000e+01
BinaryOp:   %55 = fadd double %54, 2.400000e+01
Check LatCell: 0
In Meet:   %55 = fadd double %54, 2.400000e+01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = fadd double %54, 2.400000e+01
VisitInstr:   store double %55, ptr %53, align 8
Check LatCell: 0
In Meet:   store double %55, ptr %53, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %55, ptr %53, align 8
VisitInstr:   br label %56
BranchInst:   br label %56
In AddEdge: 0x55e433986f50, 0x55e4339873e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %57 = load ptr, ptr %3, align 8
Check LatCell: 0
In Meet:   %57 = load ptr, ptr %3, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = load ptr, ptr %3, align 8
VisitInstr:   %58 = getelementptr inbounds [3 x double], ptr %57, i64 0
GetElementPtr:   %58 = getelementptr inbounds [3 x double], ptr %57, i64 0
Check LatCell: 0
In Meet:   %58 = getelementptr inbounds [3 x double], ptr %57, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = getelementptr inbounds [3 x double], ptr %57, i64 0
VisitInstr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
GetElementPtr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
Check LatCell: 0
In Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
VisitInstr:   %60 = load double, ptr %59, align 8
Check LatCell: 0
In Meet:   %60 = load double, ptr %59, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load double, ptr %59, align 8
VisitInstr:   %61 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %61 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = load ptr, ptr %4, align 8
VisitInstr:   %62 = getelementptr inbounds double, ptr %61, i64 2
GetElementPtr:   %62 = getelementptr inbounds double, ptr %61, i64 2
Check LatCell: 0
In Meet:   %62 = getelementptr inbounds double, ptr %61, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = getelementptr inbounds double, ptr %61, i64 2
VisitInstr:   %63 = load double, ptr %62, align 8
Check LatCell: 0
In Meet:   %63 = load double, ptr %62, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = load double, ptr %62, align 8
VisitInstr:   %64 = fdiv double %60, %63
BinaryOp:   %64 = fdiv double %60, %63
Check LatCell: 0
In Meet:   %64 = fdiv double %60, %63, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = fdiv double %60, %63
VisitInstr:   %65 = call double @asin(double noundef %64) #5
Check LatCell: 0
In Meet:   %65 = call double @asin(double noundef %64) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = call double @asin(double noundef %64) #5
VisitInstr:   %66 = fmul double %65, 0x404CA5DC1A63C1F8
BinaryOp:   %66 = fmul double %65, 0x404CA5DC1A63C1F8
Check LatCell: 0
In Meet:   %66 = fmul double %65, 0x404CA5DC1A63C1F8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = fmul double %65, 0x404CA5DC1A63C1F8
VisitInstr:   %67 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %67 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = load ptr, ptr %4, align 8
VisitInstr:   %68 = getelementptr inbounds double, ptr %67, i64 1
GetElementPtr:   %68 = getelementptr inbounds double, ptr %67, i64 1
Check LatCell: 0
In Meet:   %68 = getelementptr inbounds double, ptr %67, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = getelementptr inbounds double, ptr %67, i64 1
VisitInstr:   store double %66, ptr %68, align 8
Check LatCell: 0
In Meet:   store double %66, ptr %68, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %66, ptr %68, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %57 = load ptr, ptr %3, align 8
VisitInstr:   %58 = getelementptr inbounds [3 x double], ptr %57, i64 0
VisitInstr:   %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
VisitInstr:   %60 = load double, ptr %59, align 8
VisitInstr:   %61 = load ptr, ptr %4, align 8
VisitInstr:   %62 = getelementptr inbounds double, ptr %61, i64 2
VisitInstr:   %63 = load double, ptr %62, align 8
VisitInstr:   %64 = fdiv double %60, %63
VisitInstr:   %65 = call double @asin(double noundef %64) #5
VisitInstr:   %66 = fmul double %65, 0x404CA5DC1A63C1F8
VisitInstr:   %67 = load ptr, ptr %4, align 8
VisitInstr:   %68 = getelementptr inbounds double, ptr %67, i64 1
VisitInstr:   store double %66, ptr %68, align 8
VisitInstr:   ret void
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %34 = load i32, ptr %6, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %40 = load i32, ptr %7, align 4
[LoopLoopAnalysis] parent loop header is:   %40 = load i32, ptr %7, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %47 = load i32, ptr %8, align 4
[LoopLoopAnalysis] parent loop header is:   %71 = load i32, ptr %8, align 4
[LoopLoopAnalysis] parent loop header is:   %47 = load i32, ptr %8, align 4
[LoopLoopAnalysis] parent loop header is:   %17 = load i32, ptr %6, align 4
Instruction to be moved:   %47 = load i32, ptr %8, align 4
Instruction to be moved:   %48 = icmp slt i32 %46, 8
Instruction to be moved:   %50 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %51 = load i32, ptr %8, align 4
Instruction to be moved:   %52 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %53 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %54 = load i32, ptr %8, align 4
Instruction to be moved:   %55 = sext i32 %52 to i64
Instruction to be moved:   %56 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %53
Instruction to be moved:   %57 = getelementptr inbounds [3 x double], ptr %54, i64 0, i64 0
Instruction to be moved:   %59 = load i32, ptr %8, align 4
Instruction to be moved:   %60 = add nsw i32 %56, 1
Instruction to be moved:   %40 = load i32, ptr %7, align 4
Instruction to be moved:   %41 = icmp slt i32 %39, 36525
Instruction to be moved:   %43 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %44 = load double, ptr %41, align 16
Instruction to be moved:   %45 = fadd double %42, 1.000000e+00
Instruction to be moved:   %46 = load i32, ptr %8, align 4
Instruction to be moved:   %47 = icmp slt i32 %44, 8
Instruction to be moved:   %48 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %49 = load i32, ptr %8, align 4
Instruction to be moved:   %50 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %51 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %52 = load i32, ptr %8, align 4
Instruction to be moved:   %53 = sext i32 %50 to i64
Instruction to be moved:   %54 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %51
Instruction to be moved:   %55 = getelementptr inbounds [3 x double], ptr %52, i64 0, i64 0
Instruction to be moved:   %56 = load i32, ptr %8, align 4
Instruction to be moved:   %57 = add nsw i32 %54, 1
Instruction to be moved:   %63 = load i32, ptr %7, align 4
Instruction to be moved:   %64 = add nsw i32 %56, 1
Instruction to be moved:   %34 = load i32, ptr %6, align 4
Instruction to be moved:   %35 = icmp slt i32 %33, 20
Instruction to be moved:   %37 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %38 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 1
Instruction to be moved:   %39 = load i32, ptr %7, align 4
Instruction to be moved:   %40 = icmp slt i32 %37, 36525
Instruction to be moved:   %41 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %42 = load double, ptr %39, align 16
Instruction to be moved:   %43 = fadd double %40, 1.000000e+00
Instruction to be moved:   %44 = load i32, ptr %8, align 4
Instruction to be moved:   %45 = icmp slt i32 %42, 8
Instruction to be moved:   %46 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Instruction to be moved:   %47 = load i32, ptr %8, align 4
Instruction to be moved:   %48 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %49 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Instruction to be moved:   %50 = load i32, ptr %8, align 4
Instruction to be moved:   %51 = sext i32 %48 to i64
Instruction to be moved:   %52 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %49
Instruction to be moved:   %53 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 0
Instruction to be moved:   %54 = load i32, ptr %8, align 4
Instruction to be moved:   %55 = add nsw i32 %52, 1
Instruction to be moved:   %56 = load i32, ptr %7, align 4
Instruction to be moved:   %57 = add nsw i32 %54, 1
Instruction to be moved:   %67 = load i32, ptr %6, align 4
Instruction to be moved:   %68 = add nsw i32 %56, 1
Instruction to be moved:   %71 = load i32, ptr %8, align 4
Instruction to be moved:   %72 = icmp slt i32 %70, 8
Instruction to be moved:   %74 = load i32, ptr %8, align 4
Instruction to be moved:   %75 = sext i32 %72 to i64
Instruction to be moved:   %76 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %73
Instruction to be moved:   %77 = getelementptr inbounds [3 x double], ptr %74, i64 0, i64 0
Instruction to be moved:   %79 = load i32, ptr %8, align 4
Instruction to be moved:   %80 = sext i32 %76 to i64
Instruction to be moved:   %81 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %77
Instruction to be moved:   %82 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
Instruction to be moved:   %84 = load i32, ptr %8, align 4
Instruction to be moved:   %85 = sext i32 %80 to i64
Instruction to be moved:   %86 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %81
Instruction to be moved:   %87 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
Instruction to be moved:   %91 = load i32, ptr %8, align 4
Instruction to be moved:   %92 = add nsw i32 %84, 1
Instruction to be moved:   %17 = load i32, ptr %6, align 4
Instruction to be moved:   %18 = load i32, ptr %4, align 4
Instruction to be moved:   %19 = icmp slt i32 %16, %17
Instruction to be moved:   %21 = load ptr, ptr %5, align 8
Instruction to be moved:   %22 = getelementptr inbounds ptr, ptr %19, i64 1
Instruction to be moved:   %29 = load i32, ptr %6, align 4
Instruction to be moved:   %30 = add nsw i32 %21, 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 75
[UnitLICM]: NumComputeHoisted: 27
[UnitLICM]: Total: 170
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca i32, align 4
Check LatCell: 0
In Meet:   %4 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca i32, align 4
VisitInstr:   %5 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %5 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca ptr, align 8
VisitInstr:   %6 = alloca i32, align 4
Check LatCell: 0
In Meet:   %6 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca i32, align 4
VisitInstr:   %7 = alloca i32, align 4
Check LatCell: 0
In Meet:   %7 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i32, align 4
VisitInstr:   %8 = alloca i32, align 4
Check LatCell: 0
In Meet:   %8 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca i32, align 4
VisitInstr:   %9 = alloca [2 x double], align 16
Check LatCell: 0
In Meet:   %9 = alloca [2 x double], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = alloca [2 x double], align 16
VisitInstr:   %10 = alloca [2 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %10 = alloca [2 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = alloca [2 x [3 x double]], align 16
VisitInstr:   %11 = alloca [8 x [3 x double]], align 16
Check LatCell: 0
In Meet:   %11 = alloca [8 x [3 x double]], align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = alloca [8 x [3 x double]], align 16
VisitInstr:   %12 = alloca i8, align 1
Check LatCell: 0
In Meet:   %12 = alloca i8, align 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = alloca i8, align 1
VisitInstr:   store i32 0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %3, align 4
VisitInstr:   store i32 %0, ptr %4, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %4, align 4
VisitInstr:   store ptr %1, ptr %5, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %5, align 8
VisitInstr:   store i8 0, ptr %12, align 1
Check LatCell: 0
In Meet:   store i8 0, ptr %12, align 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i8 0, ptr %12, align 1
VisitInstr:   %13 = load i32, ptr %4, align 4
Check LatCell: 0
In Meet:   %13 = load i32, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load i32, ptr %4, align 4
VisitInstr:   %14 = icmp sgt i32 %13, 1
CmpInst:   %14 = icmp sgt i32 %13, 1
Check LatCell: 0
In Meet:   %14 = icmp sgt i32 %13, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = icmp sgt i32 %13, 1
VisitInstr:   br i1 %14, label %15, label %32
BranchInst:   br i1 %14, label %15, label %32
In BranchInst: -1, 0x0
In AddEdge: 0x55e433987e80, 0x55e433988870, 0
Adding edge:  -> 
In AddEdge: 0x55e433987e80, 0x55e433988870, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 1, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 1, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 1, ptr %6, align 4
VisitInstr:   %16 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %16 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load i32, ptr %6, align 4
VisitInstr:   %17 = load i32, ptr %4, align 4
Check LatCell: 0
In Meet:   %17 = load i32, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load i32, ptr %4, align 4
VisitInstr:   %18 = icmp slt i32 %16, %17
CmpInst:   %18 = icmp slt i32 %16, %17
Check LatCell: 0
In Meet:   %18 = icmp slt i32 %16, %17, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = icmp slt i32 %16, %17
VisitInstr:   %19 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %19 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = load ptr, ptr %5, align 8
VisitInstr:   %20 = getelementptr inbounds ptr, ptr %19, i64 1
GetElementPtr:   %20 = getelementptr inbounds ptr, ptr %19, i64 1
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds ptr, ptr %19, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds ptr, ptr %19, i64 1
VisitInstr:   %21 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %21 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = load i32, ptr %6, align 4
VisitInstr:   %22 = add nsw i32 %21, 1
BinaryOp:   %22 = add nsw i32 %21, 1
Check LatCell: 0
In Meet:   %22 = add nsw i32 %21, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = add nsw i32 %21, 1
VisitInstr:   br label %23
BranchInst:   br label %23
In AddEdge: 0x55e433987fe0, 0x55e4339889c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 0, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %6, align 4
VisitInstr:   %33 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %33 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load i32, ptr %6, align 4
VisitInstr:   %34 = icmp slt i32 %33, 20
CmpInst:   %34 = icmp slt i32 %33, 20
Check LatCell: 0
In Meet:   %34 = icmp slt i32 %33, 20, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = icmp slt i32 %33, 20
VisitInstr:   %35 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
GetElementPtr:   %35 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Check LatCell: 0
In Meet:   %35 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
VisitInstr:   %36 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 1
GetElementPtr:   %36 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 1
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 1
VisitInstr:   %37 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %37 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = load i32, ptr %7, align 4
VisitInstr:   %38 = icmp slt i32 %37, 36525
CmpInst:   %38 = icmp slt i32 %37, 36525
Check LatCell: 0
In Meet:   %38 = icmp slt i32 %37, 36525, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = icmp slt i32 %37, 36525
VisitInstr:   %39 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
GetElementPtr:   %39 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
VisitInstr:   %40 = load double, ptr %39, align 16
Check LatCell: 0
In Meet:   %40 = load double, ptr %39, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load double, ptr %39, align 16
VisitInstr:   %41 = fadd double %40, 1.000000e+00
BinaryOp:   %41 = fadd double %40, 1.000000e+00
Check LatCell: 0
In Meet:   %41 = fadd double %40, 1.000000e+00, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = fadd double %40, 1.000000e+00
VisitInstr:   %42 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %42 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load i32, ptr %8, align 4
VisitInstr:   %43 = icmp slt i32 %42, 8
CmpInst:   %43 = icmp slt i32 %42, 8
Check LatCell: 0
In Meet:   %43 = icmp slt i32 %42, 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = icmp slt i32 %42, 8
VisitInstr:   %44 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
GetElementPtr:   %44 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds [2 x double], ptr %9, i64 0, i64 0
VisitInstr:   %45 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %45 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load i32, ptr %8, align 4
VisitInstr:   %46 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
GetElementPtr:   %46 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
VisitInstr:   %47 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
GetElementPtr:   %47 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
Check LatCell: 0
In Meet:   %47 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = getelementptr inbounds [2 x [3 x double]], ptr %10, i64 0, i64 0
VisitInstr:   %48 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %48 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load i32, ptr %8, align 4
VisitInstr:   %49 = sext i32 %48 to i64
UnaryOp:   %49 = sext i32 %48 to i64
Check LatCell: 0
In Meet:   %49 = sext i32 %48 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = sext i32 %48 to i64
VisitInstr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %49
GetElementPtr:   %50 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %49
Check LatCell: 0
In Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %49, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %49
VisitInstr:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 0
GetElementPtr:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 0
Check LatCell: 0
In Meet:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = getelementptr inbounds [3 x double], ptr %50, i64 0, i64 0
VisitInstr:   %52 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %52 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load i32, ptr %8, align 4
VisitInstr:   %53 = add nsw i32 %52, 1
BinaryOp:   %53 = add nsw i32 %52, 1
Check LatCell: 0
In Meet:   %53 = add nsw i32 %52, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = add nsw i32 %52, 1
VisitInstr:   %54 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %54 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = load i32, ptr %7, align 4
VisitInstr:   %55 = add nsw i32 %54, 1
BinaryOp:   %55 = add nsw i32 %54, 1
Check LatCell: 0
In Meet:   %55 = add nsw i32 %54, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = add nsw i32 %54, 1
VisitInstr:   %56 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %56 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load i32, ptr %6, align 4
VisitInstr:   %57 = add nsw i32 %56, 1
BinaryOp:   %57 = add nsw i32 %56, 1
Check LatCell: 0
In Meet:   %57 = add nsw i32 %56, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = add nsw i32 %56, 1
VisitInstr:   br label %58
BranchInst:   br label %58
In AddEdge: 0x55e433988780, 0x55e4339896f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %18, label %24, label %31
BranchInst:   br i1 %18, label %24, label %31
In BranchInst: -1, 0x0
In AddEdge: 0x55e433988950, 0x55e433988c30, 0
Adding edge:  -> 
In AddEdge: 0x55e433988950, 0x55e433988c30, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %34, label %59, label %69
BranchInst:   br i1 %34, label %59, label %69
In BranchInst: -1, 0x0
In AddEdge: 0x55e433989680, 0x55e433989970, 0
Adding edge:  -> 
In AddEdge: 0x55e433989680, 0x55e433989970, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %25 = load ptr, ptr %20, align 8
Check LatCell: 0
In Meet:   %25 = load ptr, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = load ptr, ptr %20, align 8
VisitInstr:   %26 = call i32 @strcmp(ptr noundef %25, ptr noundef @.str) #5
Check LatCell: 0
In Meet:   %26 = call i32 @strcmp(ptr noundef %25, ptr noundef @.str) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = call i32 @strcmp(ptr noundef %25, ptr noundef @.str) #5
VisitInstr:   %27 = icmp ne i32 %26, 0
CmpInst:   %27 = icmp ne i32 %26, 0
Check LatCell: 0
In Meet:   %27 = icmp ne i32 %26, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = icmp ne i32 %26, 0
VisitInstr:   br i1 %27, label %29, label %28
BranchInst:   br i1 %27, label %29, label %28
In BranchInst: -1, 0x0
In AddEdge: 0x55e433988af0, 0x55e433989100, 0
Adding edge:  -> 
In AddEdge: 0x55e433988af0, 0x55e433989100, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %32
BranchInst:   br label %32
In AddEdge: 0x55e433988b40, 0x55e4339895a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store double 0x4142B42C80000000, ptr %35, align 16
Check LatCell: 0
In Meet:   store double 0x4142B42C80000000, ptr %35, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0x4142B42C80000000, ptr %35, align 16
VisitInstr:   store double 0.000000e+00, ptr %36, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %36, align 8
VisitInstr:   store i32 0, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %7, align 4
VisitInstr:   br label %60
BranchInst:   br label %60
In AddEdge: 0x55e433989870, 0x55e433989d60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 0, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %8, align 4
VisitInstr:   %70 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %70 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = load i32, ptr %8, align 4
VisitInstr:   %71 = icmp slt i32 %70, 8
CmpInst:   %71 = icmp slt i32 %70, 8
Check LatCell: 0
In Meet:   %71 = icmp slt i32 %70, 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = icmp slt i32 %70, 8
VisitInstr:   %72 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %72 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = load i32, ptr %8, align 4
VisitInstr:   %73 = sext i32 %72 to i64
UnaryOp:   %73 = sext i32 %72 to i64
Check LatCell: 0
In Meet:   %73 = sext i32 %72 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = sext i32 %72 to i64
VisitInstr:   %74 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %73
GetElementPtr:   %74 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %73
Check LatCell: 0
In Meet:   %74 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %73, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %73
VisitInstr:   %75 = getelementptr inbounds [3 x double], ptr %74, i64 0, i64 0
GetElementPtr:   %75 = getelementptr inbounds [3 x double], ptr %74, i64 0, i64 0
Check LatCell: 0
In Meet:   %75 = getelementptr inbounds [3 x double], ptr %74, i64 0, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = getelementptr inbounds [3 x double], ptr %74, i64 0, i64 0
VisitInstr:   %76 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %76 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = load i32, ptr %8, align 4
VisitInstr:   %77 = sext i32 %76 to i64
UnaryOp:   %77 = sext i32 %76 to i64
Check LatCell: 0
In Meet:   %77 = sext i32 %76 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = sext i32 %76 to i64
VisitInstr:   %78 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %77
GetElementPtr:   %78 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %77
Check LatCell: 0
In Meet:   %78 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %77, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %77
VisitInstr:   %79 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
GetElementPtr:   %79 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
Check LatCell: 0
In Meet:   %79 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
VisitInstr:   %80 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %80 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load i32, ptr %8, align 4
VisitInstr:   %81 = sext i32 %80 to i64
UnaryOp:   %81 = sext i32 %80 to i64
Check LatCell: 0
In Meet:   %81 = sext i32 %80 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = sext i32 %80 to i64
VisitInstr:   %82 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %81
GetElementPtr:   %82 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %81
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds [8 x [3 x double]], ptr %11, i64 0, i64 %81
VisitInstr:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
GetElementPtr:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
Check LatCell: 0
In Meet:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = getelementptr inbounds [3 x double], ptr %82, i64 0, i64 2
VisitInstr:   %84 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %84 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = load i32, ptr %8, align 4
VisitInstr:   %85 = add nsw i32 %84, 1
BinaryOp:   %85 = add nsw i32 %84, 1
Check LatCell: 0
In Meet:   %85 = add nsw i32 %84, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = add nsw i32 %84, 1
VisitInstr:   br label %86
BranchInst:   br label %86
In AddEdge: 0x55e4339898c0, 0x55e43398b8e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %30
BranchInst:   br label %30
In AddEdge: 0x55e433988fc0, 0x55e4339892f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i8 1, ptr %12, align 1
Check LatCell: 0
In Meet:   store i8 1, ptr %12, align 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i8 1, ptr %12, align 1
VisitInstr:   br label %31
BranchInst:   br label %31
In AddEdge: 0x55e433989010, 0x55e433989230, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %38, label %61, label %67
BranchInst:   br i1 %38, label %61, label %67
In BranchInst: -1, 0x0
In AddEdge: 0x55e433989cf0, 0x55e43398a020, 0
Adding edge:  -> 
In AddEdge: 0x55e433989cf0, 0x55e43398a020, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %71, label %87, label %93
BranchInst:   br i1 %71, label %87, label %93
In BranchInst: -1, 0x0
In AddEdge: 0x55e43398b870, 0x55e43398bb70, 0
Adding edge:  -> 
In AddEdge: 0x55e43398b870, 0x55e43398bb70, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %22, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 %22, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %22, ptr %6, align 4
VisitInstr:   br label %23, !llvm.loop !6
BranchInst:   br label %23, !llvm.loop !6
In AddEdge: 0x55e433989280, 0x55e4339894f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store double %41, ptr %39, align 16
Check LatCell: 0
In Meet:   store double %41, ptr %39, align 16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %41, ptr %39, align 16
VisitInstr:   store i32 0, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %8, align 4
VisitInstr:   br label %62
BranchInst:   br label %62
In AddEdge: 0x55e433989ee0, 0x55e43398a3c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %68
BranchInst:   br label %68
In AddEdge: 0x55e433989f30, 0x55e43398b510, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %88 = load double, ptr %75, align 8
Check LatCell: 0
In Meet:   %88 = load double, ptr %75, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = load double, ptr %75, align 8
VisitInstr:   %89 = load double, ptr %79, align 8
Check LatCell: 0
In Meet:   %89 = load double, ptr %79, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = load double, ptr %79, align 8
VisitInstr:   %90 = load double, ptr %83, align 8
Check LatCell: 0
In Meet:   %90 = load double, ptr %83, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = load double, ptr %83, align 8
VisitInstr:   %91 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %88, double noundef %89, double noundef %90)
Check LatCell: 0
In Meet:   %91 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %88, double noundef %89, double noundef %90), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %88, double noundef %89, double noundef %90)
VisitInstr:   br label %92
BranchInst:   br label %92
In AddEdge: 0x55e43398ba30, 0x55e43398c670, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %94 = load ptr, ptr @stdout, align 8
Check LatCell: 0
In Meet:   %94 = load ptr, ptr @stdout, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = load ptr, ptr @stdout, align 8
VisitInstr:   %95 = call i32 @fflush(ptr noundef %94)
Check LatCell: 0
In Meet:   %95 = call i32 @fflush(ptr noundef %94), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = call i32 @fflush(ptr noundef %94)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
Visiting BB: 
VisitInstr:   br i1 %43, label %63, label %65
BranchInst:   br i1 %43, label %63, label %65
In BranchInst: -1, 0x0
In AddEdge: 0x55e43398a350, 0x55e43398a650, 0
Adding edge:  -> 
In AddEdge: 0x55e43398a350, 0x55e43398a650, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %57, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 %57, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %57, ptr %6, align 4
VisitInstr:   br label %58, !llvm.loop !10
BranchInst:   br label %58, !llvm.loop !10
In AddEdge: 0x55e43398b4a0, 0x55e43398b710, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %85, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 %85, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %85, ptr %8, align 4
VisitInstr:   br label %86, !llvm.loop !11
BranchInst:   br label %86, !llvm.loop !11
In AddEdge: 0x55e43398c600, 0x55e43398c870, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   call void @planetpv(ptr noundef %44, i32 noundef %45, ptr noundef %46)
Check LatCell: 0
In Meet:   call void @planetpv(ptr noundef %44, i32 noundef %45, ptr noundef %46), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @planetpv(ptr noundef %44, i32 noundef %45, ptr noundef %46)
VisitInstr:   call void @radecdist(ptr noundef %47, ptr noundef %51)
Check LatCell: 0
In Meet:   call void @radecdist(ptr noundef %47, ptr noundef %51), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @radecdist(ptr noundef %47, ptr noundef %51)
VisitInstr:   br label %64
BranchInst:   br label %64
In AddEdge: 0x55e43398a510, 0x55e43398ae90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %66
BranchInst:   br label %66
In AddEdge: 0x55e43398a560, 0x55e43398b1d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %53, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 %53, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %53, ptr %8, align 4
VisitInstr:   br label %62, !llvm.loop !8
BranchInst:   br label %62, !llvm.loop !8
In AddEdge: 0x55e43398ae20, 0x55e43398b090, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %55, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %55, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %55, ptr %7, align 4
VisitInstr:   br label %60, !llvm.loop !9
BranchInst:   br label %60, !llvm.loop !9
In AddEdge: 0x55e43398b160, 0x55e43398b3d0, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
