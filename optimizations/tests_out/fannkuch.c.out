Running complicated test: fannkuch.c
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = call i64 @fannkuch(i32 noundef 11)
Check LatCell: 0
In Meet:   %3 = call i64 @fannkuch(i32 noundef 11), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call i64 @fannkuch(i32 noundef 11)
VisitInstr:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, i32 noundef 11, i64 noundef %3) #4
Check LatCell: 0
In Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, i32 noundef 11, i64 noundef %3) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, i32 noundef 11, i64 noundef %3) #4
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitSCCP running on fannkuch
Visiting BB: 
VisitInstr:   %2 = add nsw i32 %0, -1
BinaryOp:   %2 = add nsw i32 %0, -1
Check LatCell: 0
In Meet:   %2 = add nsw i32 %0, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = add nsw i32 %0, -1
VisitInstr:   %3 = icmp slt i32 %0, 1
CmpInst:   %3 = icmp slt i32 %0, 1
Check LatCell: 0
In Meet:   %3 = icmp slt i32 %0, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = icmp slt i32 %0, 1
VisitInstr:   br i1 %3, label %92, label %4
BranchInst:   br i1 %3, label %92, label %4
In BranchInst: -1, 0x0
In AddEdge: 0x5639293dde50, 0x5639293de9c0, 0
Adding edge:  -> 
In AddEdge: 0x5639293dde50, 0x5639293de9c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 0
In Meet:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293ddf10)
Lat2.second: i64 0
Meet:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
VisitInstr:   ret i64 %.0
Check LatCell: 0
In Meet:   ret i64 %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i64 %.0
Visiting BB: 
VisitInstr:   %5 = sext i32 %0 to i64
UnaryOp:   %5 = sext i32 %0 to i64
Check LatCell: 0
In Meet:   %5 = sext i32 %0 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = sext i32 %0 to i64
VisitInstr:   %6 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
Check LatCell: 0
In Meet:   %6 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
VisitInstr:   %7 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
Check LatCell: 0
In Meet:   %7 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
VisitInstr:   %8 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
Check LatCell: 0
In Meet:   %8 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 4) #4
VisitInstr:   br label %9
BranchInst:   br label %9
In AddEdge: 0x5639293de8d0, 0x5639293df4b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
PHI:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
PHI LatOp: 0, 0x5639293dcfb0
Check LatCell: 0
In Meet:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dcfb0)
Lat2.second: i32 0
Meet:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
VisitInstr:   %10 = icmp slt i32 %.04, %0
CmpInst:   %10 = icmp slt i32 %.04, %0
Check LatCell: 0
In Meet:   %10 = icmp slt i32 %.04, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = icmp slt i32 %.04, %0
VisitInstr:   br i1 %10, label %11, label %15
BranchInst:   br i1 %10, label %11, label %15
In BranchInst: -1, 0x0
In AddEdge: 0x5639293df400, 0x5639293df9c0, 0
Adding edge:  -> 
In AddEdge: 0x5639293df400, 0x5639293df9c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %12 = zext i32 %.04 to i64
UnaryOp:   %12 = zext i32 %.04 to i64
Check LatCell: 0
In Meet:   %12 = zext i32 %.04 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941e370)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %12 = zext i32 %.04 to i64
VisitInstr:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
GetElementPtr:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds i32, ptr %7, i64 %12, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
VisitInstr:   store i32 %.04, ptr %13, align 4
Check LatCell: 0
In Meet:   store i32 %.04, ptr %13, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.04, ptr %13, align 4
VisitInstr:   %14 = add nuw nsw i32 %.04, 1
BinaryOp:   %14 = add nuw nsw i32 %.04, 1
Check LatCell: 0
In Meet:   %14 = add nuw nsw i32 %.04, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %14 = add nuw nsw i32 %.04, 1
Adding SSA:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
VisitInstr:   br label %9, !llvm.loop !6
BranchInst:   br label %9, !llvm.loop !6
In AddEdge: 0x5639293df880, 0x5639293dff70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
PHI:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
VisitInstr:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 0
In Meet:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293ddf10)
Lat2.second: i64 0
Meet:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
VisitInstr:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
PHI:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
PHI LatOp: 0, 0x5639293dcfb0
Check LatCell: 0
In Meet:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dcfb0)
Lat2.second: i32 0
Meet:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
VisitInstr:   %16 = icmp slt i32 %.02, 30
CmpInst:   %16 = icmp slt i32 %.02, 30
Check LatCell: 0
In Meet:   %16 = icmp slt i32 %.02, 30, Lat1: (1, 0x0), Lat2: (0, 0x563929422b10)
Lat2.second: i1 true
Meet:   %16 = icmp slt i32 %.02, 30
VisitInstr:   br i1 %16, label %17, label %28
BranchInst:   br i1 %16, label %17, label %28
In BranchInst: 0, 0x563929422b10
In AddEdge: 0x5639293e4480, 0x5639293e4780, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
PHI:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
PHI LatOp: 0, 0x5639293dcfb0
Check LatCell: 0
In Meet:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dcfb0)
Lat2.second: i32 0
Meet:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
VisitInstr:   %18 = icmp slt i32 %.15, %0
CmpInst:   %18 = icmp slt i32 %.15, %0
Check LatCell: 0
In Meet:   %18 = icmp slt i32 %.15, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = icmp slt i32 %.15, %0
VisitInstr:   br i1 %18, label %19, label %26
BranchInst:   br i1 %18, label %19, label %26
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e4860, 0x5639293e4bd0, 0
Adding edge:  -> 
In AddEdge: 0x5639293e4860, 0x5639293e4bd0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %20 = zext i32 %.15 to i64
UnaryOp:   %20 = zext i32 %.15 to i64
Check LatCell: 0
In Meet:   %20 = zext i32 %.15 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941e370)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %20 = zext i32 %.15 to i64
VisitInstr:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
GetElementPtr:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds i32, ptr %7, i64 %20, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
VisitInstr:   %22 = load i32, ptr %21, align 4
Check LatCell: 0
In Meet:   %22 = load i32, ptr %21, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load i32, ptr %21, align 4
VisitInstr:   %23 = add nsw i32 %22, 1
BinaryOp:   %23 = add nsw i32 %22, 1
Check LatCell: 0
In Meet:   %23 = add nsw i32 %22, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = add nsw i32 %22, 1
VisitInstr:   %24 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, i32 noundef %23) #5
Check LatCell: 0
In Meet:   %24 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, i32 noundef %23) #5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, i32 noundef %23) #5
VisitInstr:   %25 = add nuw nsw i32 %.15, 1
BinaryOp:   %25 = add nuw nsw i32 %.15, 1
Check LatCell: 0
In Meet:   %25 = add nuw nsw i32 %.15, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %25 = add nuw nsw i32 %.15, 1
Adding SSA:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
VisitInstr:   br label %17, !llvm.loop !8
BranchInst:   br label %17, !llvm.loop !8
In AddEdge: 0x5639293e4a90, 0x5639293e56a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %putchar = call i32 @putchar(i32 10)
Check LatCell: 0
In Meet:   %putchar = call i32 @putchar(i32 10), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %putchar = call i32 @putchar(i32 10)
VisitInstr:   %27 = add nsw i32 %.02, 1
BinaryOp:   %27 = add nsw i32 %.02, 1
Check LatCell: 0
In Meet:   %27 = add nsw i32 %.02, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %27 = add nsw i32 %.02, 1
VisitInstr:   br label %28
BranchInst:   br label %28
In AddEdge: 0x5639293e4ae0, 0x5639293e5a90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 0
In Meet:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
Adding SSA:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
VisitInstr:   br label %29
BranchInst:   br label %29
In AddEdge: 0x5639293e4690, 0x5639293e5b50, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
PHI:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
VisitInstr:   %.not = icmp eq i32 %.111, 1
CmpInst:   %.not = icmp eq i32 %.111, 1
Check LatCell: 0
In Meet:   %.not = icmp eq i32 %.111, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.not = icmp eq i32 %.111, 1
VisitInstr:   br i1 %.not, label %34, label %30
BranchInst:   br i1 %.not, label %34, label %30
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e5ae0, 0x5639293e5da0, 0
Adding edge:  -> 
In AddEdge: 0x5639293e5ae0, 0x5639293e5da0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %35 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %35 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load i32, ptr %7, align 4
VisitInstr:   %36 = icmp eq i32 %35, 0
CmpInst:   %36 = icmp eq i32 %35, 0
Check LatCell: 0
In Meet:   %36 = icmp eq i32 %35, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = icmp eq i32 %35, 0
VisitInstr:   br i1 %36, label %69, label %37
BranchInst:   br i1 %36, label %69, label %37
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e5cf0, 0x5639293e68b0, 0
Adding edge:  -> 
In AddEdge: 0x5639293e5cf0, 0x5639293e68b0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %31 = add nsw i32 %.111, -1
BinaryOp:   %31 = add nsw i32 %.111, -1
Check LatCell: 0
In Meet:   %31 = add nsw i32 %.111, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = add nsw i32 %.111, -1
Adding SSA:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
VisitInstr:   %32 = sext i32 %31 to i64
UnaryOp:   %32 = sext i32 %31 to i64
Check LatCell: 0
In Meet:   %32 = sext i32 %31 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = sext i32 %31 to i64
VisitInstr:   %33 = getelementptr inbounds i32, ptr %8, i64 %32
GetElementPtr:   %33 = getelementptr inbounds i32, ptr %8, i64 %32
Check LatCell: 0
In Meet:   %33 = getelementptr inbounds i32, ptr %8, i64 %32, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = getelementptr inbounds i32, ptr %8, i64 %32
VisitInstr:   store i32 %.111, ptr %33, align 4
Check LatCell: 0
In Meet:   store i32 %.111, ptr %33, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.111, ptr %33, align 4
VisitInstr:   br label %29, !llvm.loop !9
BranchInst:   br label %29, !llvm.loop !9
In AddEdge: 0x5639293e5ca0, 0x5639293e6410, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
PHI:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 0
In Meet:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293ddf10)
Lat2.second: i64 0
Meet:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
Adding SSA:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
Adding SSA:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
VisitInstr:   br label %70
BranchInst:   br label %70
In AddEdge: 0x5639293e6770, 0x5639293eada0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %38 = sext i32 %2 to i64
UnaryOp:   %38 = sext i32 %2 to i64
Check LatCell: 0
In Meet:   %38 = sext i32 %2 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = sext i32 %2 to i64
VisitInstr:   %39 = getelementptr inbounds i32, ptr %7, i64 %38
GetElementPtr:   %39 = getelementptr inbounds i32, ptr %7, i64 %38
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds i32, ptr %7, i64 %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds i32, ptr %7, i64 %38
VisitInstr:   %40 = load i32, ptr %39, align 4
Check LatCell: 0
In Meet:   %40 = load i32, ptr %39, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load i32, ptr %39, align 4
VisitInstr:   %41 = icmp eq i32 %40, %2
CmpInst:   %41 = icmp eq i32 %40, %2
Check LatCell: 0
In Meet:   %41 = icmp eq i32 %40, %2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = icmp eq i32 %40, %2
VisitInstr:   br i1 %41, label %69, label %42
BranchInst:   br i1 %41, label %69, label %42
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e67c0, 0x5639293e6d10, 0
Adding edge:  -> 
In AddEdge: 0x5639293e67c0, 0x5639293e6d10, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
PHI:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
Adding SSA:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
VisitInstr:   %71 = icmp eq i32 %.212, %0
CmpInst:   %71 = icmp eq i32 %.212, %0
Check LatCell: 0
In Meet:   %71 = icmp eq i32 %.212, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = icmp eq i32 %.212, %0
VisitInstr:   br i1 %71, label %92, label %72
BranchInst:   br i1 %71, label %92, label %72
In BranchInst: -1, 0x0
In AddEdge: 0x5639293ead30, 0x5639293eb060, 0
Adding edge:  -> 
In AddEdge: 0x5639293ead30, 0x5639293eb060, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
PHI:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 0
In Meet:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
VisitInstr:   %43 = icmp slt i32 %.2, %0
CmpInst:   %43 = icmp slt i32 %.2, %0
Check LatCell: 0
In Meet:   %43 = icmp slt i32 %.2, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = icmp slt i32 %.2, %0
VisitInstr:   br i1 %43, label %44, label %50
BranchInst:   br i1 %43, label %44, label %50
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e6e80, 0x5639293e71f0, 0
Adding edge:  -> 
In AddEdge: 0x5639293e6e80, 0x5639293e71f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %73 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %73 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = load i32, ptr %7, align 4
VisitInstr:   br label %74
BranchInst:   br label %74
In AddEdge: 0x5639293eafb0, 0x5639293eb530, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %45 = zext i32 %.2 to i64
UnaryOp:   %45 = zext i32 %.2 to i64
Check LatCell: 0
In Meet:   %45 = zext i32 %.2 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941f170)
Lat2.second: i32 zext (i32 1 to i32)
Meet:   %45 = zext i32 %.2 to i64
VisitInstr:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
GetElementPtr:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds i32, ptr %7, i64 %45, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
VisitInstr:   %47 = load i32, ptr %46, align 4
Check LatCell: 0
In Meet:   %47 = load i32, ptr %46, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load i32, ptr %46, align 4
VisitInstr:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
GetElementPtr:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
Check LatCell: 0
In Meet:   %48 = getelementptr inbounds i32, ptr %6, i64 %45, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
VisitInstr:   store i32 %47, ptr %48, align 4
Check LatCell: 0
In Meet:   store i32 %47, ptr %48, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %47, ptr %48, align 4
VisitInstr:   %49 = add nuw nsw i32 %.2, 1
BinaryOp:   %49 = add nuw nsw i32 %.2, 1
Check LatCell: 0
In Meet:   %49 = add nuw nsw i32 %.2, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293ee5d0)
Lat2.second: i32 2
Meet:   %49 = add nuw nsw i32 %.2, 1
Adding SSA:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
VisitInstr:   br label %42, !llvm.loop !10
BranchInst:   br label %42, !llvm.loop !10
In AddEdge: 0x5639293e70b0, 0x5639293e7990, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %51 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %51 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = load i32, ptr %7, align 4
VisitInstr:   br label %52
BranchInst:   br label %52
In AddEdge: 0x5639293e7100, 0x5639293e7d60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
PHI:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
PHI LatOp: 0, 0x5639293dcfb0
Check LatCell: 0
In Meet:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dcfb0)
Lat2.second: i32 0
Meet:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
VisitInstr:   %75 = icmp slt i32 %.4, %.212
CmpInst:   %75 = icmp slt i32 %.4, %.212
Check LatCell: 0
In Meet:   %75 = icmp slt i32 %.4, %.212, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = icmp slt i32 %.4, %.212
VisitInstr:   br i1 %75, label %76, label %83
BranchInst:   br i1 %75, label %76, label %83
In BranchInst: -1, 0x0
In AddEdge: 0x5639293eb4c0, 0x5639293eb7f0, 0
Adding edge:  -> 
In AddEdge: 0x5639293eb4c0, 0x5639293eb7f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
PHI:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 0
In Meet:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293ddf10)
Lat2.second: i64 0
Meet:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
VisitInstr:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
PHI:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
VisitInstr:   br label %53
BranchInst:   br label %53
In AddEdge: 0x5639293e7cf0, 0x5639293e8040, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %77 = add nuw nsw i32 %.4, 1
BinaryOp:   %77 = add nuw nsw i32 %.4, 1
Check LatCell: 0
In Meet:   %77 = add nuw nsw i32 %.4, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %77 = add nuw nsw i32 %.4, 1
Adding SSA:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
VisitInstr:   %78 = zext i32 %77 to i64
UnaryOp:   %78 = zext i32 %77 to i64
Check LatCell: 0
In Meet:   %78 = zext i32 %77 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941f170)
Lat2.second: i32 zext (i32 1 to i32)
Meet:   %78 = zext i32 %77 to i64
VisitInstr:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
GetElementPtr:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
Check LatCell: 0
In Meet:   %79 = getelementptr inbounds i32, ptr %7, i64 %78, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
VisitInstr:   %80 = load i32, ptr %79, align 4
Check LatCell: 0
In Meet:   %80 = load i32, ptr %79, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load i32, ptr %79, align 4
VisitInstr:   %81 = zext i32 %.4 to i64
UnaryOp:   %81 = zext i32 %.4 to i64
Check LatCell: 0
In Meet:   %81 = zext i32 %.4 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941e370)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %81 = zext i32 %.4 to i64
VisitInstr:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
GetElementPtr:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds i32, ptr %7, i64 %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
VisitInstr:   store i32 %80, ptr %82, align 4
Check LatCell: 0
In Meet:   store i32 %80, ptr %82, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %80, ptr %82, align 4
VisitInstr:   br label %74, !llvm.loop !13
BranchInst:   br label %74, !llvm.loop !13
In AddEdge: 0x5639293eb6f0, 0x5639293ebfd0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %84 = sext i32 %.212 to i64
UnaryOp:   %84 = sext i32 %.212 to i64
Check LatCell: 0
In Meet:   %84 = sext i32 %.212 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = sext i32 %.212 to i64
VisitInstr:   %85 = getelementptr inbounds i32, ptr %7, i64 %84
GetElementPtr:   %85 = getelementptr inbounds i32, ptr %7, i64 %84
Check LatCell: 0
In Meet:   %85 = getelementptr inbounds i32, ptr %7, i64 %84, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = getelementptr inbounds i32, ptr %7, i64 %84
VisitInstr:   store i32 %73, ptr %85, align 4
Check LatCell: 0
In Meet:   store i32 %73, ptr %85, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %73, ptr %85, align 4
VisitInstr:   %86 = getelementptr inbounds i32, ptr %8, i64 %84
GetElementPtr:   %86 = getelementptr inbounds i32, ptr %8, i64 %84
Check LatCell: 0
In Meet:   %86 = getelementptr inbounds i32, ptr %8, i64 %84, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = getelementptr inbounds i32, ptr %8, i64 %84
VisitInstr:   %87 = load i32, ptr %86, align 4
Check LatCell: 0
In Meet:   %87 = load i32, ptr %86, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = load i32, ptr %86, align 4
VisitInstr:   %88 = add nsw i32 %87, -1
BinaryOp:   %88 = add nsw i32 %87, -1
Check LatCell: 0
In Meet:   %88 = add nsw i32 %87, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = add nsw i32 %87, -1
VisitInstr:   store i32 %88, ptr %86, align 4
Check LatCell: 0
In Meet:   store i32 %88, ptr %86, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %88, ptr %86, align 4
VisitInstr:   %89 = icmp sgt i32 %87, 1
CmpInst:   %89 = icmp sgt i32 %87, 1
Check LatCell: 0
In Meet:   %89 = icmp sgt i32 %87, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = icmp sgt i32 %87, 1
VisitInstr:   br i1 %89, label %15, label %90
BranchInst:   br i1 %89, label %15, label %90
In BranchInst: -1, 0x0
In AddEdge: 0x5639293eb740, 0x5639293ec920, 0
Adding edge:  -> 
In AddEdge: 0x5639293eb740, 0x5639293ec920, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
PHI:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 0
In Meet:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ], Lat1: (1, 0x0), Lat2: (0, 0x5639293dd660)
Lat2.second: i32 1
Meet:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
VisitInstr:   %.01.in = phi i32 [ %.03, %52 ], [ %.01, %55 ]
PHI:   %.01.in = phi i32 [ %.03, %52 ], [ %.01, %55 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.01.in = phi i32 [ %.03, %52 ], [ %.01, %55 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.01.in = phi i32 [ %.03, %52 ], [ %.01, %55 ]
VisitInstr:   %.01 = add nsw i32 %.01.in, -1
BinaryOp:   %.01 = add nsw i32 %.01.in, -1
Check LatCell: 0
In Meet:   %.01 = add nsw i32 %.01.in, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.01 = add nsw i32 %.01.in, -1
VisitInstr:   %54 = icmp slt i32 %.3, %.01
CmpInst:   %54 = icmp slt i32 %.3, %.01
Check LatCell: 0
In Meet:   %54 = icmp slt i32 %.3, %.01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = icmp slt i32 %.3, %.01
VisitInstr:   br i1 %54, label %55, label %63
BranchInst:   br i1 %54, label %55, label %63
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e7fd0, 0x5639293e8340, 0
Adding edge:  -> 
In AddEdge: 0x5639293e7fd0, 0x5639293e8340, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %91 = add nsw i32 %.212, 1
BinaryOp:   %91 = add nsw i32 %.212, 1
Check LatCell: 0
In Meet:   %91 = add nsw i32 %.212, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = add nsw i32 %.212, 1
Adding SSA:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
VisitInstr:   br label %70
BranchInst:   br label %70
In AddEdge: 0x5639293ec830, 0x5639293ecbe0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %56 = zext i32 %.3 to i64
UnaryOp:   %56 = zext i32 %.3 to i64
Check LatCell: 0
In Meet:   %56 = zext i32 %.3 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56392941f170)
Lat2.second: i32 zext (i32 1 to i32)
Meet:   %56 = zext i32 %.3 to i64
VisitInstr:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
GetElementPtr:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
Check LatCell: 0
In Meet:   %57 = getelementptr inbounds i32, ptr %6, i64 %56, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
VisitInstr:   %58 = load i32, ptr %57, align 4
Check LatCell: 0
In Meet:   %58 = load i32, ptr %57, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = load i32, ptr %57, align 4
VisitInstr:   %59 = sext i32 %.01 to i64
UnaryOp:   %59 = sext i32 %.01 to i64
Check LatCell: 0
In Meet:   %59 = sext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = sext i32 %.01 to i64
VisitInstr:   %60 = getelementptr inbounds i32, ptr %6, i64 %59
GetElementPtr:   %60 = getelementptr inbounds i32, ptr %6, i64 %59
Check LatCell: 0
In Meet:   %60 = getelementptr inbounds i32, ptr %6, i64 %59, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = getelementptr inbounds i32, ptr %6, i64 %59
VisitInstr:   %61 = load i32, ptr %60, align 4
Check LatCell: 0
In Meet:   %61 = load i32, ptr %60, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = load i32, ptr %60, align 4
VisitInstr:   store i32 %61, ptr %57, align 4
Check LatCell: 0
In Meet:   store i32 %61, ptr %57, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %61, ptr %57, align 4
VisitInstr:   store i32 %58, ptr %60, align 4
Check LatCell: 0
In Meet:   store i32 %58, ptr %60, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %58, ptr %60, align 4
VisitInstr:   %62 = add nuw nsw i32 %.3, 1
BinaryOp:   %62 = add nuw nsw i32 %.3, 1
Check LatCell: 0
In Meet:   %62 = add nuw nsw i32 %.3, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293ee5d0)
Lat2.second: i32 2
Meet:   %62 = add nuw nsw i32 %.3, 1
Adding SSA:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
VisitInstr:   br label %53, !llvm.loop !11
BranchInst:   br label %53, !llvm.loop !11
In AddEdge: 0x5639293e8200, 0x5639293e9a60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %64 = add nuw nsw i64 %.06, 1
BinaryOp:   %64 = add nuw nsw i64 %.06, 1
Check LatCell: 0
In Meet:   %64 = add nuw nsw i64 %.06, 1, Lat1: (1, 0x0), Lat2: (0, 0x5639293e9c20)
Lat2.second: i64 1
Meet:   %64 = add nuw nsw i64 %.06, 1
Adding SSA:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
VisitInstr:   %65 = sext i32 %.03 to i64
UnaryOp:   %65 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %65 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = sext i32 %.03 to i64
VisitInstr:   %66 = getelementptr inbounds i32, ptr %6, i64 %65
GetElementPtr:   %66 = getelementptr inbounds i32, ptr %6, i64 %65
Check LatCell: 0
In Meet:   %66 = getelementptr inbounds i32, ptr %6, i64 %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = getelementptr inbounds i32, ptr %6, i64 %65
VisitInstr:   %67 = load i32, ptr %66, align 4
Check LatCell: 0
In Meet:   %67 = load i32, ptr %66, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = load i32, ptr %66, align 4
Adding SSA:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
VisitInstr:   store i32 %.03, ptr %66, align 4
Check LatCell: 0
In Meet:   store i32 %.03, ptr %66, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.03, ptr %66, align 4
VisitInstr:   %.not13 = icmp eq i32 %67, 0
CmpInst:   %.not13 = icmp eq i32 %67, 0
Check LatCell: 0
In Meet:   %.not13 = icmp eq i32 %67, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.not13 = icmp eq i32 %67, 0
VisitInstr:   br i1 %.not13, label %68, label %52, !llvm.loop !12
BranchInst:   br i1 %.not13, label %68, label %52, !llvm.loop !12
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e8250, 0x5639293ea6c0, 0
Adding edge:  -> 
In AddEdge: 0x5639293e8250, 0x5639293ea6c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.not14 = icmp sgt i64 %.07, %.06
CmpInst:   %.not14 = icmp sgt i64 %.07, %.06
Check LatCell: 0
In Meet:   %.not14 = icmp sgt i64 %.07, %.06, Lat1: (1, 0x0), Lat2: (0, 0x56392941e890)
Lat2.second: i1 false
Meet:   %.not14 = icmp sgt i64 %.07, %.06
VisitInstr:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Select:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Select LatCond: 0, 0x56392941e890
Select LatTrue: 0, 0x5639293ddf10
Select LatFals: 0, 0x5639293e9c20
Check LatCell: 0
In Meet:   %spec.select = select i1 %.not14, i64 %.07, i64 %64, Lat1: (1, 0x0), Lat2: (0, 0x5639293e9c20)
Lat2.second: i64 1
Meet:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Adding SSA:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
VisitInstr:   br label %69
BranchInst:   br label %69
In AddEdge: 0x5639293ea610, 0x5639293eace0, 0
Adding edge:  -> 
Visiting SSA:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
VisitInstr:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
PHI:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
PHI LatOp: 0, 0x5639293dcfb0
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 1
In Meet:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ], Lat1: (0, 0x5639293dcfb0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
Adding SSA:   %12 = zext i32 %.04 to i64
Adding SSA:   %14 = add nuw nsw i32 %.04, 1
Adding SSA:   store i32 %.04, ptr %13, align 4
Adding SSA:   %10 = icmp slt i32 %.04, %0
Visiting SSA:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
VisitInstr:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
PHI:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
PHI LatOp: 0, 0x5639293dd660
PHI LatOp: 0, 0x5639293dcfb0
Check LatCell: 1
In Meet:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ], Lat1: (0, 0x5639293dcfb0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
Adding SSA:   %20 = zext i32 %.15 to i64
Adding SSA:   %25 = add nuw nsw i32 %.15, 1
Adding SSA:   %18 = icmp slt i32 %.15, %0
Visiting SSA:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
VisitInstr:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
PHI:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
PHI LatOp: 0, 0x5639293dcfb0
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 1
In Meet:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ], Lat1: (0, 0x5639293dcfb0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
Adding SSA:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
Adding SSA:   %27 = add nsw i32 %.02, 1
Adding SSA:   %16 = icmp slt i32 %.02, 30
Visiting SSA:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
VisitInstr:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
Visiting SSA:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
VisitInstr:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 1
In Meet:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ], Lat1: (0, 0x5639293ddf10), Lat2: (0, 0x5639293ddf10)
Lat1.second: i64 0
Lat2.second: i64 0
Visiting SSA:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
VisitInstr:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: 0, 0x5639293ddf10
Check LatCell: 1
In Meet:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ], Lat1: (0, 0x5639293ddf10), Lat2: (0, 0x5639293ddf10)
Lat1.second: i64 0
Lat2.second: i64 0
Visiting SSA:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
VisitInstr:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
Visiting SSA:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
VisitInstr:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
PHI:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
PHI LatOp: 0, 0x5639293ee5d0
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 1
In Meet:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ], Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
Adding SSA:   %45 = zext i32 %.2 to i64
Adding SSA:   %49 = add nuw nsw i32 %.2, 1
Adding SSA:   %43 = icmp slt i32 %.2, %0
Visiting SSA:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
VisitInstr:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
PHI:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
PHI LatOp: 0, 0x5639293dcfb0
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 1
In Meet:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ], Lat1: (0, 0x5639293dcfb0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
Adding SSA:   %81 = zext i32 %.4 to i64
Adding SSA:   %77 = add nuw nsw i32 %.4, 1
Adding SSA:   %75 = icmp slt i32 %.4, %.212
Visiting SSA:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
VisitInstr:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
Visiting SSA:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
VisitInstr:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
PHI:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
PHI LatOp: 0, 0x5639293dd660
PHI LatOp: 0, 0x5639293ee5d0
Check LatCell: 1
In Meet:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ], Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
Adding SSA:   %56 = zext i32 %.3 to i64
Adding SSA:   %62 = add nuw nsw i32 %.3, 1
Adding SSA:   %54 = icmp slt i32 %.3, %.01
Visiting SSA:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
VisitInstr:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
PHI:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: 0, 0x5639293e9c20
Check LatCell: 1
In Meet:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ], Lat1: (0, 0x5639293ddf10), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
Adding SSA:   %.not14 = icmp sgt i64 %.07, %.06
Adding SSA:   %64 = add nuw nsw i64 %.06, 1
Visiting SSA:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
VisitInstr:   %.03 = phi i32 [ %51, %50 ], [ %67, %63 ]
Visiting SSA:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
VisitInstr:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
PHI:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: 0, 0x5639293e9c20
Check LatCell: 1
In Meet:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ], Lat1: (0, 0x5639293ddf10), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
Adding SSA:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
Adding SSA:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
Visiting SSA:   %12 = zext i32 %.04 to i64
VisitInstr:   %12 = zext i32 %.04 to i64
UnaryOp:   %12 = zext i32 %.04 to i64
Check LatCell: 1
In Meet:   %12 = zext i32 %.04 to i64, Lat1: (0, 0x56392941e370), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %12 = zext i32 %.04 to i64
Adding SSA:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
Visiting SSA:   %14 = add nuw nsw i32 %.04, 1
VisitInstr:   %14 = add nuw nsw i32 %.04, 1
BinaryOp:   %14 = add nuw nsw i32 %.04, 1
Check LatCell: 1
In Meet:   %14 = add nuw nsw i32 %.04, 1, Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %14 = add nuw nsw i32 %.04, 1
Adding SSA:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
Visiting SSA:   store i32 %.04, ptr %13, align 4
VisitInstr:   store i32 %.04, ptr %13, align 4
Visiting SSA:   %10 = icmp slt i32 %.04, %0
VisitInstr:   %10 = icmp slt i32 %.04, %0
Visiting SSA:   %20 = zext i32 %.15 to i64
VisitInstr:   %20 = zext i32 %.15 to i64
UnaryOp:   %20 = zext i32 %.15 to i64
Check LatCell: 1
In Meet:   %20 = zext i32 %.15 to i64, Lat1: (0, 0x56392941e370), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %20 = zext i32 %.15 to i64
Adding SSA:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
Visiting SSA:   %25 = add nuw nsw i32 %.15, 1
VisitInstr:   %25 = add nuw nsw i32 %.15, 1
BinaryOp:   %25 = add nuw nsw i32 %.15, 1
Check LatCell: 1
In Meet:   %25 = add nuw nsw i32 %.15, 1, Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %25 = add nuw nsw i32 %.15, 1
Adding SSA:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
Visiting SSA:   %18 = icmp slt i32 %.15, %0
VisitInstr:   %18 = icmp slt i32 %.15, %0
Visiting SSA:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
VisitInstr:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI LatOp: 0, 0x5639293dd660
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ], Lat1: (0, 0x5639293dd660), Lat2: (0, 0x5639293dd660)
Lat1.second: i32 1
Lat2.second: i32 1
Visiting SSA:   %27 = add nsw i32 %.02, 1
VisitInstr:   %27 = add nsw i32 %.02, 1
BinaryOp:   %27 = add nsw i32 %.02, 1
Check LatCell: 1
In Meet:   %27 = add nsw i32 %.02, 1, Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %27 = add nsw i32 %.02, 1
Adding SSA:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
Visiting SSA:   %16 = icmp slt i32 %.02, 30
VisitInstr:   %16 = icmp slt i32 %.02, 30
CmpInst:   %16 = icmp slt i32 %.02, 30
Check LatCell: 1
In Meet:   %16 = icmp slt i32 %.02, 30, Lat1: (0, 0x563929422b10), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %16 = icmp slt i32 %.02, 30
Adding SSA:   br i1 %16, label %17, label %28
Visiting SSA:   %45 = zext i32 %.2 to i64
VisitInstr:   %45 = zext i32 %.2 to i64
UnaryOp:   %45 = zext i32 %.2 to i64
Check LatCell: 1
In Meet:   %45 = zext i32 %.2 to i64, Lat1: (0, 0x56392941f170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 1 to i32)
Meet:   %45 = zext i32 %.2 to i64
Adding SSA:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
Adding SSA:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
Visiting SSA:   %49 = add nuw nsw i32 %.2, 1
VisitInstr:   %49 = add nuw nsw i32 %.2, 1
BinaryOp:   %49 = add nuw nsw i32 %.2, 1
Check LatCell: 1
In Meet:   %49 = add nuw nsw i32 %.2, 1, Lat1: (0, 0x5639293ee5d0), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %49 = add nuw nsw i32 %.2, 1
Adding SSA:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
Visiting SSA:   %43 = icmp slt i32 %.2, %0
VisitInstr:   %43 = icmp slt i32 %.2, %0
Visiting SSA:   %81 = zext i32 %.4 to i64
VisitInstr:   %81 = zext i32 %.4 to i64
UnaryOp:   %81 = zext i32 %.4 to i64
Check LatCell: 1
In Meet:   %81 = zext i32 %.4 to i64, Lat1: (0, 0x56392941e370), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %81 = zext i32 %.4 to i64
Adding SSA:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
Visiting SSA:   %77 = add nuw nsw i32 %.4, 1
VisitInstr:   %77 = add nuw nsw i32 %.4, 1
BinaryOp:   %77 = add nuw nsw i32 %.4, 1
Check LatCell: 1
In Meet:   %77 = add nuw nsw i32 %.4, 1, Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %77 = add nuw nsw i32 %.4, 1
Adding SSA:   %78 = zext i32 %77 to i64
Adding SSA:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
Visiting SSA:   %75 = icmp slt i32 %.4, %.212
VisitInstr:   %75 = icmp slt i32 %.4, %.212
Visiting SSA:   %56 = zext i32 %.3 to i64
VisitInstr:   %56 = zext i32 %.3 to i64
UnaryOp:   %56 = zext i32 %.3 to i64
Check LatCell: 1
In Meet:   %56 = zext i32 %.3 to i64, Lat1: (0, 0x56392941f170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 1 to i32)
Meet:   %56 = zext i32 %.3 to i64
Adding SSA:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
Visiting SSA:   %62 = add nuw nsw i32 %.3, 1
VisitInstr:   %62 = add nuw nsw i32 %.3, 1
BinaryOp:   %62 = add nuw nsw i32 %.3, 1
Check LatCell: 1
In Meet:   %62 = add nuw nsw i32 %.3, 1, Lat1: (0, 0x5639293ee5d0), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %62 = add nuw nsw i32 %.3, 1
Adding SSA:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
Visiting SSA:   %54 = icmp slt i32 %.3, %.01
VisitInstr:   %54 = icmp slt i32 %.3, %.01
Visiting SSA:   %.not14 = icmp sgt i64 %.07, %.06
VisitInstr:   %.not14 = icmp sgt i64 %.07, %.06
CmpInst:   %.not14 = icmp sgt i64 %.07, %.06
Check LatCell: 1
In Meet:   %.not14 = icmp sgt i64 %.07, %.06, Lat1: (0, 0x56392941e890), Lat2: (-1, 0x0)
Lat1.second: i1 false
Meet:   %.not14 = icmp sgt i64 %.07, %.06
Adding SSA:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Visiting SSA:   %64 = add nuw nsw i64 %.06, 1
VisitInstr:   %64 = add nuw nsw i64 %.06, 1
BinaryOp:   %64 = add nuw nsw i64 %.06, 1
Check LatCell: 1
In Meet:   %64 = add nuw nsw i64 %.06, 1, Lat1: (0, 0x5639293e9c20), Lat2: (-1, 0x0)
Lat1.second: i64 1
Meet:   %64 = add nuw nsw i64 %.06, 1
Adding SSA:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
Visiting SSA:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
VisitInstr:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ], Lat1: (0, 0x5639293ddf10), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.07 = phi i64 [ 0, %9 ], [ %.29, %83 ]
Adding SSA:   %.not14 = icmp sgt i64 %.07, %.06
Adding SSA:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
Visiting SSA:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
VisitInstr:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
PHI LatOp: 0, 0x5639293ddf10
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ], Lat1: (0, 0x5639293ddf10), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.0 = phi i64 [ 0, %1 ], [ %.29, %70 ]
Adding SSA:   ret i64 %.0
Visiting SSA:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
VisitInstr:   %13 = getelementptr inbounds i32, ptr %7, i64 %12
Visiting SSA:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
VisitInstr:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
Visiting SSA:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
VisitInstr:   %21 = getelementptr inbounds i32, ptr %7, i64 %20
Visiting SSA:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
VisitInstr:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
Visiting SSA:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
VisitInstr:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ], Lat1: (0, 0x5639293dd660), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.1 = phi i32 [ %27, %26 ], [ %.02, %15 ]
Adding SSA:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
Visiting SSA:   br i1 %16, label %17, label %28
VisitInstr:   br i1 %16, label %17, label %28
BranchInst:   br i1 %16, label %17, label %28
In BranchInst: -1, 0x0
In AddEdge: 0x5639293e4480, 0x5639293e4780, 0
In AddEdge: 0x5639293e4480, 0x5639293e4780, 1
Adding edge:  -> 
Visiting SSA:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
VisitInstr:   %48 = getelementptr inbounds i32, ptr %6, i64 %45
Visiting SSA:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
VisitInstr:   %46 = getelementptr inbounds i32, ptr %7, i64 %45
Visiting SSA:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
VisitInstr:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
Visiting SSA:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
VisitInstr:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
Visiting SSA:   %78 = zext i32 %77 to i64
VisitInstr:   %78 = zext i32 %77 to i64
UnaryOp:   %78 = zext i32 %77 to i64
Check LatCell: 1
In Meet:   %78 = zext i32 %77 to i64, Lat1: (0, 0x56392941f170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 1 to i32)
Meet:   %78 = zext i32 %77 to i64
Adding SSA:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
Visiting SSA:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
VisitInstr:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
Visiting SSA:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
VisitInstr:   %57 = getelementptr inbounds i32, ptr %6, i64 %56
Visiting SSA:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
VisitInstr:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
Visiting SSA:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
VisitInstr:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Select:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Select LatCond: -1, 0x0
Select LatTrue: -1, 0x0
Select LatFals: -1, 0x0
Check LatCell: 1
In Meet:   %spec.select = select i1 %.not14, i64 %.07, i64 %64, Lat1: (0, 0x5639293e9c20), Lat2: (-1, 0x0)
Lat1.second: i64 1
Meet:   %spec.select = select i1 %.not14, i64 %.07, i64 %64
Visiting SSA:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
VisitInstr:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
Visiting SSA:   %.not14 = icmp sgt i64 %.07, %.06
VisitInstr:   %.not14 = icmp sgt i64 %.07, %.06
Visiting SSA:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
VisitInstr:   %.29 = phi i64 [ %.07, %34 ], [ %.07, %37 ], [ %spec.select, %68 ]
Visiting SSA:   ret i64 %.0
VisitInstr:   ret i64 %.0
Visiting SSA:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
VisitInstr:   %.02 = phi i32 [ 0, %9 ], [ %.1, %83 ]
Visiting SSA:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
VisitInstr:   %79 = getelementptr inbounds i32, ptr %7, i64 %78
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on fannkuch
******************************************************
UnitLoopAnalysis running on fannkuch
[LoopLoopAnalysis] parent loop header is:   %.04 = phi i32 [ 0, %4 ], [ %14, %11 ]
[LoopLoopAnalysis] parent loop header is:   %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
[LoopLoopAnalysis] parent loop header is:   %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
[LoopLoopAnalysis] parent loop header is:   %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
[LoopLoopAnalysis] parent loop header is:   %.010 = phi i32 [ %0, %9 ], [ %.212, %83 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.06 = phi i64 [ 0, %50 ], [ %64, %63 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.2 = phi i32 [ %49, %44 ], [ 1, %37 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.111 = phi i32 [ %.010, %28 ], [ %31, %30 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
[LoopLoopAnalysis] parent loop header is:   %.3 = phi i32 [ 1, %52 ], [ %62, %55 ]
[LoopLoopAnalysis] parent loop header is:   %.212 = phi i32 [ %.111, %69 ], [ %91, %90 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
[LoopLoopAnalysis] parent loop header is:   %.4 = phi i32 [ 0, %72 ], [ %77, %76 ]
[LoopLoopAnalysis] parent loop header is:   %.15 = phi i32 [ %25, %19 ], [ 0, %15 ]
Instruction to be moved:   %35 = load i32, ptr %7, align 4
Instruction to be moved:   %36 = icmp eq i32 %11, 0
Instruction to be moved:   %38 = sext i32 %2 to i64
Instruction to be moved:   %39 = getelementptr inbounds i32, ptr %7, i64 %13
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 1
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 4
----------------------------------------
Running sccp only: fannkuch.c
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = call i64 @fannkuch(i32 noundef 11)
Check LatCell: 0
In Meet:   %3 = call i64 @fannkuch(i32 noundef 11), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call i64 @fannkuch(i32 noundef 11)
VisitInstr:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef 11, i64 noundef %3)
Check LatCell: 0
In Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef 11, i64 noundef %3), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef 11, i64 noundef %3)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitSCCP running on fannkuch
Visiting BB: 
VisitInstr:   %2 = sub nsw i32 %0, 1
BinaryOp:   %2 = sub nsw i32 %0, 1
Check LatCell: 0
In Meet:   %2 = sub nsw i32 %0, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = sub nsw i32 %0, 1
VisitInstr:   %3 = icmp slt i32 %0, 1
CmpInst:   %3 = icmp slt i32 %0, 1
Check LatCell: 0
In Meet:   %3 = icmp slt i32 %0, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = icmp slt i32 %0, 1
VisitInstr:   br i1 %3, label %4, label %5
BranchInst:   br i1 %3, label %4, label %5
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c920c70, 0x55b33c9217e0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c920c70, 0x55b33c9217e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %127
BranchInst:   br label %127
In AddEdge: 0x55b33c920e40, 0x55b33c921930, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = sext i32 %0 to i64
UnaryOp:   %6 = sext i32 %0 to i64
Check LatCell: 0
In Meet:   %6 = sext i32 %0 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = sext i32 %0 to i64
VisitInstr:   %7 = call noalias ptr @calloc(i64 noundef %6, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %7 = call noalias ptr @calloc(i64 noundef %6, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = call noalias ptr @calloc(i64 noundef %6, i64 noundef 4) #3
VisitInstr:   %8 = sext i32 %0 to i64
UnaryOp:   %8 = sext i32 %0 to i64
Check LatCell: 0
In Meet:   %8 = sext i32 %0 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = sext i32 %0 to i64
VisitInstr:   %9 = call noalias ptr @calloc(i64 noundef %8, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %9 = call noalias ptr @calloc(i64 noundef %8, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = call noalias ptr @calloc(i64 noundef %8, i64 noundef 4) #3
VisitInstr:   %10 = sext i32 %0 to i64
UnaryOp:   %10 = sext i32 %0 to i64
Check LatCell: 0
In Meet:   %10 = sext i32 %0 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = sext i32 %0 to i64
VisitInstr:   %11 = call noalias ptr @calloc(i64 noundef %10, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %11 = call noalias ptr @calloc(i64 noundef %10, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = call noalias ptr @calloc(i64 noundef %10, i64 noundef 4) #3
VisitInstr:   br label %12
BranchInst:   br label %12
In AddEdge: 0x55b33c9216f0, 0x55b33c9222d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 0
In Meet:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920d30)
Lat2.second: i64 0
Meet:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
VisitInstr:   ret i64 %.0
Check LatCell: 0
In Meet:   ret i64 %.0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i64 %.0
Visiting BB: 
VisitInstr:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
PHI:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
PHI LatOp: 0, 0x55b33c91fdd0
Check LatCell: 0
In Meet:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c91fdd0)
Lat2.second: i32 0
Meet:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
VisitInstr:   %13 = icmp slt i32 %.04, %0
CmpInst:   %13 = icmp slt i32 %.04, %0
Check LatCell: 0
In Meet:   %13 = icmp slt i32 %.04, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = icmp slt i32 %.04, %0
VisitInstr:   br i1 %13, label %14, label %19
BranchInst:   br i1 %13, label %14, label %19
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c922220, 0x55b33c9227e0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c922220, 0x55b33c9227e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %15 = sext i32 %.04 to i64
UnaryOp:   %15 = sext i32 %.04 to i64
Check LatCell: 0
In Meet:   %15 = sext i32 %.04 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c921ed0)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %15 = sext i32 %.04 to i64
VisitInstr:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
GetElementPtr:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
Check LatCell: 0
In Meet:   %16 = getelementptr inbounds i32, ptr %9, i64 %15, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
VisitInstr:   store i32 %.04, ptr %16, align 4
Check LatCell: 0
In Meet:   store i32 %.04, ptr %16, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.04, ptr %16, align 4
VisitInstr:   br label %17
BranchInst:   br label %17
In AddEdge: 0x55b33c9226a0, 0x55b33c922b90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %20
BranchInst:   br label %20
In AddEdge: 0x55b33c9226f0, 0x55b33c927310, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %18 = add nsw i32 %.04, 1
BinaryOp:   %18 = add nsw i32 %.04, 1
Check LatCell: 0
In Meet:   %18 = add nsw i32 %.04, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %18 = add nsw i32 %.04, 1
Adding SSA:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
VisitInstr:   br label %12, !llvm.loop !6
BranchInst:   br label %12, !llvm.loop !6
In AddEdge: 0x55b33c922b20, 0x55b33c922d90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
PHI:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
VisitInstr:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 0
In Meet:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920d30)
Lat2.second: i64 0
Meet:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
VisitInstr:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
PHI:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
PHI LatOp: 0, 0x55b33c91fdd0
Check LatCell: 0
In Meet:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c91fdd0)
Lat2.second: i32 0
Meet:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
VisitInstr:   %21 = icmp slt i32 %.02, 30
CmpInst:   %21 = icmp slt i32 %.02, 30
Check LatCell: 0
In Meet:   %21 = icmp slt i32 %.02, 30, Lat1: (1, 0x0), Lat2: (0, 0x55b33c921c90)
Lat2.second: i1 true
Meet:   %21 = icmp slt i32 %.02, 30
VisitInstr:   br i1 %21, label %22, label %36
BranchInst:   br i1 %21, label %22, label %36
In BranchInst: 0, 0x55b33c921c90
In AddEdge: 0x55b33c9272a0, 0x55b33c9275a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %23
BranchInst:   br label %23
In AddEdge: 0x55b33c927460, 0x55b33c9276f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
PHI:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
PHI LatOp: 0, 0x55b33c91fdd0
Check LatCell: 0
In Meet:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c91fdd0)
Lat2.second: i32 0
Meet:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
VisitInstr:   %24 = icmp slt i32 %.15, %0
CmpInst:   %24 = icmp slt i32 %.15, %0
Check LatCell: 0
In Meet:   %24 = icmp slt i32 %.15, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = icmp slt i32 %.15, %0
VisitInstr:   br i1 %24, label %25, label %33
BranchInst:   br i1 %24, label %25, label %33
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c927680, 0x55b33c9279f0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c927680, 0x55b33c9279f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %26 = sext i32 %.15 to i64
UnaryOp:   %26 = sext i32 %.15 to i64
Check LatCell: 0
In Meet:   %26 = sext i32 %.15 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c921ed0)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %26 = sext i32 %.15 to i64
VisitInstr:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
GetElementPtr:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
Check LatCell: 0
In Meet:   %27 = getelementptr inbounds i32, ptr %9, i64 %26, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
VisitInstr:   %28 = load i32, ptr %27, align 4
Check LatCell: 0
In Meet:   %28 = load i32, ptr %27, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = load i32, ptr %27, align 4
VisitInstr:   %29 = add nsw i32 1, %28
BinaryOp:   %29 = add nsw i32 1, %28
Check LatCell: 0
In Meet:   %29 = add nsw i32 1, %28, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = add nsw i32 1, %28
VisitInstr:   %30 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %29)
Check LatCell: 0
In Meet:   %30 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %29), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %29)
VisitInstr:   br label %31
BranchInst:   br label %31
In AddEdge: 0x55b33c9278b0, 0x55b33c927eb0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %34 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)
Check LatCell: 0
In Meet:   %34 = call i32 (ptr, ...) @printf(ptr noundef @.str.2), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)
VisitInstr:   %35 = add nsw i32 %.02, 1
BinaryOp:   %35 = add nsw i32 %.02, 1
Check LatCell: 0
In Meet:   %35 = add nsw i32 %.02, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %35 = add nsw i32 %.02, 1
VisitInstr:   br label %36
BranchInst:   br label %36
In AddEdge: 0x55b33c927900, 0x55b33c9288b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %32 = add nsw i32 %.15, 1
BinaryOp:   %32 = add nsw i32 %.15, 1
Check LatCell: 0
In Meet:   %32 = add nsw i32 %.15, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %32 = add nsw i32 %.15, 1
Adding SSA:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
VisitInstr:   br label %23, !llvm.loop !8
BranchInst:   br label %23, !llvm.loop !8
In AddEdge: 0x55b33c927e40, 0x55b33c9284c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 0
In Meet:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
Adding SSA:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
VisitInstr:   br label %37
BranchInst:   br label %37
In AddEdge: 0x55b33c9274b0, 0x55b33c928970, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
PHI:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
VisitInstr:   %38 = icmp ne i32 %.111, 1
CmpInst:   %38 = icmp ne i32 %.111, 1
Check LatCell: 0
In Meet:   %38 = icmp ne i32 %.111, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = icmp ne i32 %.111, 1
VisitInstr:   br i1 %38, label %39, label %45
BranchInst:   br i1 %38, label %39, label %45
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c928900, 0x55b33c928bc0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c928900, 0x55b33c928bc0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %40 = sub nsw i32 %.111, 1
BinaryOp:   %40 = sub nsw i32 %.111, 1
Check LatCell: 0
In Meet:   %40 = sub nsw i32 %.111, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = sub nsw i32 %.111, 1
VisitInstr:   %41 = sext i32 %40 to i64
UnaryOp:   %41 = sext i32 %40 to i64
Check LatCell: 0
In Meet:   %41 = sext i32 %40 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = sext i32 %40 to i64
VisitInstr:   %42 = getelementptr inbounds i32, ptr %11, i64 %41
GetElementPtr:   %42 = getelementptr inbounds i32, ptr %11, i64 %41
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds i32, ptr %11, i64 %41, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds i32, ptr %11, i64 %41
VisitInstr:   store i32 %.111, ptr %42, align 4
Check LatCell: 0
In Meet:   store i32 %.111, ptr %42, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.111, ptr %42, align 4
VisitInstr:   br label %43
BranchInst:   br label %43
In AddEdge: 0x55b33c928ac0, 0x55b33c929000, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %46 = getelementptr inbounds i32, ptr %9, i64 0
GetElementPtr:   %46 = getelementptr inbounds i32, ptr %9, i64 0
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds i32, ptr %9, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds i32, ptr %9, i64 0
VisitInstr:   %47 = load i32, ptr %46, align 4
Check LatCell: 0
In Meet:   %47 = load i32, ptr %46, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load i32, ptr %46, align 4
VisitInstr:   %48 = icmp eq i32 %47, 0
CmpInst:   %48 = icmp eq i32 %47, 0
Check LatCell: 0
In Meet:   %48 = icmp eq i32 %47, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = icmp eq i32 %47, 0
VisitInstr:   br i1 %48, label %99, label %49
BranchInst:   br i1 %48, label %99, label %49
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c928b10, 0x55b33c9296d0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c928b10, 0x55b33c9296d0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %44 = add nsw i32 %.111, -1
BinaryOp:   %44 = add nsw i32 %.111, -1
Check LatCell: 0
In Meet:   %44 = add nsw i32 %.111, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = add nsw i32 %.111, -1
Adding SSA:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
VisitInstr:   br label %37, !llvm.loop !9
BranchInst:   br label %37, !llvm.loop !9
In AddEdge: 0x55b33c928f90, 0x55b33c929230, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
PHI:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 0
In Meet:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920d30)
Lat2.second: i64 0
Meet:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
Adding SSA:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
Adding SSA:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
VisitInstr:   br label %100
BranchInst:   br label %100
In AddEdge: 0x55b33c929590, 0x55b33c92dbc0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %50 = sext i32 %2 to i64
UnaryOp:   %50 = sext i32 %2 to i64
Check LatCell: 0
In Meet:   %50 = sext i32 %2 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = sext i32 %2 to i64
VisitInstr:   %51 = getelementptr inbounds i32, ptr %9, i64 %50
GetElementPtr:   %51 = getelementptr inbounds i32, ptr %9, i64 %50
Check LatCell: 0
In Meet:   %51 = getelementptr inbounds i32, ptr %9, i64 %50, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = getelementptr inbounds i32, ptr %9, i64 %50
VisitInstr:   %52 = load i32, ptr %51, align 4
Check LatCell: 0
In Meet:   %52 = load i32, ptr %51, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load i32, ptr %51, align 4
VisitInstr:   %53 = icmp eq i32 %52, %2
CmpInst:   %53 = icmp eq i32 %52, %2
Check LatCell: 0
In Meet:   %53 = icmp eq i32 %52, %2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = icmp eq i32 %52, %2
VisitInstr:   br i1 %53, label %99, label %54
BranchInst:   br i1 %53, label %99, label %54
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c9295e0, 0x55b33c929b30, 0
Adding edge:  -> 
In AddEdge: 0x55b33c9295e0, 0x55b33c929b30, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
PHI:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
Adding SSA:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
VisitInstr:   %101 = icmp eq i32 %.212, %0
CmpInst:   %101 = icmp eq i32 %.212, %0
Check LatCell: 0
In Meet:   %101 = icmp eq i32 %.212, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = icmp eq i32 %.212, %0
VisitInstr:   br i1 %101, label %102, label %103
BranchInst:   br i1 %101, label %102, label %103
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92db50, 0x55b33c92de80, 0
Adding edge:  -> 
In AddEdge: 0x55b33c92db50, 0x55b33c92de80, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %55
BranchInst:   br label %55
In AddEdge: 0x55b33c929a80, 0x55b33c929d10, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %127
BranchInst:   br label %127
In AddEdge: 0x55b33c92dd80, 0x55b33c92dff0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %104 = getelementptr inbounds i32, ptr %9, i64 0
GetElementPtr:   %104 = getelementptr inbounds i32, ptr %9, i64 0
Check LatCell: 0
In Meet:   %104 = getelementptr inbounds i32, ptr %9, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = getelementptr inbounds i32, ptr %9, i64 0
VisitInstr:   %105 = load i32, ptr %104, align 4
Check LatCell: 0
In Meet:   %105 = load i32, ptr %104, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = load i32, ptr %104, align 4
VisitInstr:   br label %106
BranchInst:   br label %106
In AddEdge: 0x55b33c92ddd0, 0x55b33c92e350, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
PHI:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 0
In Meet:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
VisitInstr:   %56 = icmp slt i32 %.2, %0
CmpInst:   %56 = icmp slt i32 %.2, %0
Check LatCell: 0
In Meet:   %56 = icmp slt i32 %.2, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = icmp slt i32 %.2, %0
VisitInstr:   br i1 %56, label %57, label %65
BranchInst:   br i1 %56, label %57, label %65
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c929ca0, 0x55b33c92a010, 0
Adding edge:  -> 
In AddEdge: 0x55b33c929ca0, 0x55b33c92a010, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
PHI:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
PHI LatOp: 0, 0x55b33c91fdd0
Check LatCell: 0
In Meet:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c91fdd0)
Lat2.second: i32 0
Meet:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
VisitInstr:   %107 = icmp slt i32 %.4, %.212
CmpInst:   %107 = icmp slt i32 %.4, %.212
Check LatCell: 0
In Meet:   %107 = icmp slt i32 %.4, %.212, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %107 = icmp slt i32 %.4, %.212
VisitInstr:   br i1 %107, label %108, label %115
BranchInst:   br i1 %107, label %108, label %115
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92e2e0, 0x55b33c92e610, 0
Adding edge:  -> 
In AddEdge: 0x55b33c92e2e0, 0x55b33c92e610, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %58 = sext i32 %.2 to i64
UnaryOp:   %58 = sext i32 %.2 to i64
Check LatCell: 0
In Meet:   %58 = sext i32 %.2 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c927660)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %58 = sext i32 %.2 to i64
VisitInstr:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
GetElementPtr:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
Check LatCell: 0
In Meet:   %59 = getelementptr inbounds i32, ptr %9, i64 %58, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
VisitInstr:   %60 = load i32, ptr %59, align 4
Check LatCell: 0
In Meet:   %60 = load i32, ptr %59, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load i32, ptr %59, align 4
VisitInstr:   %61 = sext i32 %.2 to i64
UnaryOp:   %61 = sext i32 %.2 to i64
Check LatCell: 0
In Meet:   %61 = sext i32 %.2 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c927660)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %61 = sext i32 %.2 to i64
VisitInstr:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
GetElementPtr:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
Check LatCell: 0
In Meet:   %62 = getelementptr inbounds i32, ptr %7, i64 %61, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
VisitInstr:   store i32 %60, ptr %62, align 4
Check LatCell: 0
In Meet:   store i32 %60, ptr %62, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %60, ptr %62, align 4
VisitInstr:   br label %63
BranchInst:   br label %63
In AddEdge: 0x55b33c929ed0, 0x55b33c92a5b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %66 = getelementptr inbounds i32, ptr %9, i64 0
GetElementPtr:   %66 = getelementptr inbounds i32, ptr %9, i64 0
Check LatCell: 0
In Meet:   %66 = getelementptr inbounds i32, ptr %9, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = getelementptr inbounds i32, ptr %9, i64 0
VisitInstr:   %67 = load i32, ptr %66, align 4
Check LatCell: 0
In Meet:   %67 = load i32, ptr %66, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = load i32, ptr %66, align 4
VisitInstr:   br label %68
BranchInst:   br label %68
In AddEdge: 0x55b33c929f20, 0x55b33c92ab80, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %109 = add nsw i32 %.4, 1
BinaryOp:   %109 = add nsw i32 %.4, 1
Check LatCell: 0
In Meet:   %109 = add nsw i32 %.4, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %109 = add nsw i32 %.4, 1
Adding SSA:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
VisitInstr:   %110 = sext i32 %109 to i64
UnaryOp:   %110 = sext i32 %109 to i64
Check LatCell: 0
In Meet:   %110 = sext i32 %109 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c927660)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %110 = sext i32 %109 to i64
VisitInstr:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
GetElementPtr:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
Check LatCell: 0
In Meet:   %111 = getelementptr inbounds i32, ptr %9, i64 %110, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
VisitInstr:   %112 = load i32, ptr %111, align 4
Check LatCell: 0
In Meet:   %112 = load i32, ptr %111, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = load i32, ptr %111, align 4
VisitInstr:   %113 = sext i32 %.4 to i64
UnaryOp:   %113 = sext i32 %.4 to i64
Check LatCell: 0
In Meet:   %113 = sext i32 %.4 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c921ed0)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %113 = sext i32 %.4 to i64
VisitInstr:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
GetElementPtr:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
Check LatCell: 0
In Meet:   %114 = getelementptr inbounds i32, ptr %9, i64 %113, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
VisitInstr:   store i32 %112, ptr %114, align 4
Check LatCell: 0
In Meet:   store i32 %112, ptr %114, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %112, ptr %114, align 4
VisitInstr:   br label %106, !llvm.loop !13
BranchInst:   br label %106, !llvm.loop !13
In AddEdge: 0x55b33c92e510, 0x55b33c92edf0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %116 = sext i32 %.212 to i64
UnaryOp:   %116 = sext i32 %.212 to i64
Check LatCell: 0
In Meet:   %116 = sext i32 %.212 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = sext i32 %.212 to i64
VisitInstr:   %117 = getelementptr inbounds i32, ptr %9, i64 %116
GetElementPtr:   %117 = getelementptr inbounds i32, ptr %9, i64 %116
Check LatCell: 0
In Meet:   %117 = getelementptr inbounds i32, ptr %9, i64 %116, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %117 = getelementptr inbounds i32, ptr %9, i64 %116
VisitInstr:   store i32 %105, ptr %117, align 4
Check LatCell: 0
In Meet:   store i32 %105, ptr %117, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %105, ptr %117, align 4
VisitInstr:   %118 = sext i32 %.212 to i64
UnaryOp:   %118 = sext i32 %.212 to i64
Check LatCell: 0
In Meet:   %118 = sext i32 %.212 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = sext i32 %.212 to i64
VisitInstr:   %119 = getelementptr inbounds i32, ptr %11, i64 %118
GetElementPtr:   %119 = getelementptr inbounds i32, ptr %11, i64 %118
Check LatCell: 0
In Meet:   %119 = getelementptr inbounds i32, ptr %11, i64 %118, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = getelementptr inbounds i32, ptr %11, i64 %118
VisitInstr:   %120 = load i32, ptr %119, align 4
Check LatCell: 0
In Meet:   %120 = load i32, ptr %119, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = load i32, ptr %119, align 4
VisitInstr:   %121 = sub nsw i32 %120, 1
BinaryOp:   %121 = sub nsw i32 %120, 1
Check LatCell: 0
In Meet:   %121 = sub nsw i32 %120, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = sub nsw i32 %120, 1
VisitInstr:   store i32 %121, ptr %119, align 4
Check LatCell: 0
In Meet:   store i32 %121, ptr %119, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %121, ptr %119, align 4
VisitInstr:   %122 = icmp sgt i32 %121, 0
CmpInst:   %122 = icmp sgt i32 %121, 0
Check LatCell: 0
In Meet:   %122 = icmp sgt i32 %121, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %122 = icmp sgt i32 %121, 0
VisitInstr:   br i1 %122, label %123, label %124
BranchInst:   br i1 %122, label %123, label %124
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92e560, 0x55b33c92f740, 0
Adding edge:  -> 
In AddEdge: 0x55b33c92e560, 0x55b33c92f740, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %64 = add nsw i32 %.2, 1
BinaryOp:   %64 = add nsw i32 %.2, 1
Check LatCell: 0
In Meet:   %64 = add nsw i32 %.2, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c9313f0)
Lat2.second: i32 2
Meet:   %64 = add nsw i32 %.2, 1
Adding SSA:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
VisitInstr:   br label %55, !llvm.loop !10
BranchInst:   br label %55, !llvm.loop !10
In AddEdge: 0x55b33c92a540, 0x55b33c92a7b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
PHI:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 0
In Meet:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920d30)
Lat2.second: i64 0
Meet:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
VisitInstr:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
PHI:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
VisitInstr:   %69 = sub nsw i32 %.03, 1
BinaryOp:   %69 = sub nsw i32 %.03, 1
Check LatCell: 0
In Meet:   %69 = sub nsw i32 %.03, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = sub nsw i32 %.03, 1
VisitInstr:   br label %70
BranchInst:   br label %70
In AddEdge: 0x55b33c92ab10, 0x55b33c92ae60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %126
BranchInst:   br label %126
In AddEdge: 0x55b33c92f600, 0x55b33c92f800, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %125 = add nsw i32 %.212, 1
BinaryOp:   %125 = add nsw i32 %.212, 1
Check LatCell: 0
In Meet:   %125 = add nsw i32 %.212, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = add nsw i32 %.212, 1
Adding SSA:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
VisitInstr:   br label %100
BranchInst:   br label %100
In AddEdge: 0x55b33c92f650, 0x55b33c92fa00, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
PHI:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 0
In Meet:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c920480)
Lat2.second: i32 1
Meet:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
VisitInstr:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
PHI:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
VisitInstr:   %71 = icmp slt i32 %.3, %.01
CmpInst:   %71 = icmp slt i32 %.3, %.01
Check LatCell: 0
In Meet:   %71 = icmp slt i32 %.3, %.01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = icmp slt i32 %.3, %.01
VisitInstr:   br i1 %71, label %72, label %86
BranchInst:   br i1 %71, label %72, label %86
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92adf0, 0x55b33c92b160, 0
Adding edge:  -> 
In AddEdge: 0x55b33c92adf0, 0x55b33c92b160, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %20
BranchInst:   br label %20
In AddEdge: 0x55b33c92f790, 0x55b33c92fa70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %73 = sext i32 %.3 to i64
UnaryOp:   %73 = sext i32 %.3 to i64
Check LatCell: 0
In Meet:   %73 = sext i32 %.3 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c927660)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %73 = sext i32 %.3 to i64
VisitInstr:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
GetElementPtr:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
Check LatCell: 0
In Meet:   %74 = getelementptr inbounds i32, ptr %7, i64 %73, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
VisitInstr:   %75 = load i32, ptr %74, align 4
Check LatCell: 0
In Meet:   %75 = load i32, ptr %74, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load i32, ptr %74, align 4
VisitInstr:   %76 = sext i32 %.01 to i64
UnaryOp:   %76 = sext i32 %.01 to i64
Check LatCell: 0
In Meet:   %76 = sext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = sext i32 %.01 to i64
VisitInstr:   %77 = getelementptr inbounds i32, ptr %7, i64 %76
GetElementPtr:   %77 = getelementptr inbounds i32, ptr %7, i64 %76
Check LatCell: 0
In Meet:   %77 = getelementptr inbounds i32, ptr %7, i64 %76, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = getelementptr inbounds i32, ptr %7, i64 %76
VisitInstr:   %78 = load i32, ptr %77, align 4
Check LatCell: 0
In Meet:   %78 = load i32, ptr %77, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = load i32, ptr %77, align 4
VisitInstr:   %79 = sext i32 %.3 to i64
UnaryOp:   %79 = sext i32 %.3 to i64
Check LatCell: 0
In Meet:   %79 = sext i32 %.3 to i64, Lat1: (1, 0x0), Lat2: (0, 0x55b33c927660)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %79 = sext i32 %.3 to i64
VisitInstr:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
GetElementPtr:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
Check LatCell: 0
In Meet:   %80 = getelementptr inbounds i32, ptr %7, i64 %79, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
VisitInstr:   store i32 %78, ptr %80, align 4
Check LatCell: 0
In Meet:   store i32 %78, ptr %80, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %78, ptr %80, align 4
VisitInstr:   %81 = sext i32 %.01 to i64
UnaryOp:   %81 = sext i32 %.01 to i64
Check LatCell: 0
In Meet:   %81 = sext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = sext i32 %.01 to i64
VisitInstr:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
GetElementPtr:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds i32, ptr %7, i64 %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds i32, ptr %7, i64 %81
VisitInstr:   store i32 %75, ptr %82, align 4
Check LatCell: 0
In Meet:   store i32 %75, ptr %82, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %75, ptr %82, align 4
VisitInstr:   br label %83
BranchInst:   br label %83
In AddEdge: 0x55b33c92b020, 0x55b33c92c4f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %87 = add nsw i64 %.06, 1
BinaryOp:   %87 = add nsw i64 %.06, 1
Check LatCell: 0
In Meet:   %87 = add nsw i64 %.06, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c92ca40)
Lat2.second: i64 1
Meet:   %87 = add nsw i64 %.06, 1
Adding SSA:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
VisitInstr:   %88 = sext i32 %.03 to i64
UnaryOp:   %88 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %88 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = sext i32 %.03 to i64
VisitInstr:   %89 = getelementptr inbounds i32, ptr %7, i64 %88
GetElementPtr:   %89 = getelementptr inbounds i32, ptr %7, i64 %88
Check LatCell: 0
In Meet:   %89 = getelementptr inbounds i32, ptr %7, i64 %88, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = getelementptr inbounds i32, ptr %7, i64 %88
VisitInstr:   %90 = load i32, ptr %89, align 4
Check LatCell: 0
In Meet:   %90 = load i32, ptr %89, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = load i32, ptr %89, align 4
Adding SSA:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
VisitInstr:   %91 = sext i32 %.03 to i64
UnaryOp:   %91 = sext i32 %.03 to i64
Check LatCell: 0
In Meet:   %91 = sext i32 %.03 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = sext i32 %.03 to i64
VisitInstr:   %92 = getelementptr inbounds i32, ptr %7, i64 %91
GetElementPtr:   %92 = getelementptr inbounds i32, ptr %7, i64 %91
Check LatCell: 0
In Meet:   %92 = getelementptr inbounds i32, ptr %7, i64 %91, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = getelementptr inbounds i32, ptr %7, i64 %91
VisitInstr:   store i32 %.03, ptr %92, align 4
Check LatCell: 0
In Meet:   store i32 %.03, ptr %92, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %.03, ptr %92, align 4
VisitInstr:   br label %93
BranchInst:   br label %93
In AddEdge: 0x55b33c92b070, 0x55b33c92d2e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %84 = add nsw i32 %.3, 1
BinaryOp:   %84 = add nsw i32 %.3, 1
Check LatCell: 0
In Meet:   %84 = add nsw i32 %.3, 1, Lat1: (1, 0x0), Lat2: (0, 0x55b33c9313f0)
Lat2.second: i32 2
Meet:   %84 = add nsw i32 %.3, 1
Adding SSA:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
VisitInstr:   %85 = add nsw i32 %.01, -1
BinaryOp:   %85 = add nsw i32 %.01, -1
Check LatCell: 0
In Meet:   %85 = add nsw i32 %.01, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = add nsw i32 %.01, -1
Adding SSA:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
VisitInstr:   br label %70, !llvm.loop !11
BranchInst:   br label %70, !llvm.loop !11
In AddEdge: 0x55b33c92c480, 0x55b33c92c880, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %94 = icmp ne i32 %90, 0
CmpInst:   %94 = icmp ne i32 %90, 0
Check LatCell: 0
In Meet:   %94 = icmp ne i32 %90, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = icmp ne i32 %90, 0
VisitInstr:   br i1 %94, label %68, label %95, !llvm.loop !12
BranchInst:   br i1 %94, label %68, label %95, !llvm.loop !12
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92d270, 0x55b33c92d4e0, 0
Adding edge:  -> 
In AddEdge: 0x55b33c92d270, 0x55b33c92d4e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %96 = icmp slt i64 %.07, %87
CmpInst:   %96 = icmp slt i64 %.07, %87
Check LatCell: 0
In Meet:   %96 = icmp slt i64 %.07, %87, Lat1: (1, 0x0), Lat2: (0, 0x55b33c921c90)
Lat2.second: i1 true
Meet:   %96 = icmp slt i64 %.07, %87
VisitInstr:   br i1 %96, label %97, label %98
BranchInst:   br i1 %96, label %97, label %98
In BranchInst: 0, 0x55b33c921c90
In AddEdge: 0x55b33c92d430, 0x55b33c92d920, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %98
BranchInst:   br label %98
In AddEdge: 0x55b33c92d7e0, 0x55b33c92da90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
PHI:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
PHI LatOp: 0, 0x55b33c92ca40
Check LatCell: 0
In Meet:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ], Lat1: (1, 0x0), Lat2: (0, 0x55b33c92ca40)
Lat2.second: i64 1
Meet:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
Adding SSA:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
VisitInstr:   br label %99
BranchInst:   br label %99
In AddEdge: 0x55b33c92d830, 0x55b33c92db00, 0
Adding edge:  -> 
Visiting SSA:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
VisitInstr:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
PHI:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
PHI LatOp: 0, 0x55b33c91fdd0
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 1
In Meet:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ], Lat1: (0, 0x55b33c91fdd0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
Adding SSA:   %18 = add nsw i32 %.04, 1
Adding SSA:   %15 = sext i32 %.04 to i64
Adding SSA:   store i32 %.04, ptr %16, align 4
Adding SSA:   %13 = icmp slt i32 %.04, %0
Visiting SSA:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
VisitInstr:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
PHI:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
PHI LatOp: 0, 0x55b33c91fdd0
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 1
In Meet:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ], Lat1: (0, 0x55b33c91fdd0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
Adding SSA:   %32 = add nsw i32 %.15, 1
Adding SSA:   %26 = sext i32 %.15 to i64
Adding SSA:   %24 = icmp slt i32 %.15, %0
Visiting SSA:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
VisitInstr:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
PHI:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
PHI LatOp: 0, 0x55b33c91fdd0
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 1
In Meet:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ], Lat1: (0, 0x55b33c91fdd0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
Adding SSA:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
Adding SSA:   %35 = add nsw i32 %.02, 1
Adding SSA:   %21 = icmp slt i32 %.02, 30
Visiting SSA:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
VisitInstr:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
Visiting SSA:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
VisitInstr:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 1
In Meet:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ], Lat1: (0, 0x55b33c920d30), Lat2: (0, 0x55b33c920d30)
Lat1.second: i64 0
Lat2.second: i64 0
Visiting SSA:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
VisitInstr:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: 0, 0x55b33c920d30
Check LatCell: 1
In Meet:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ], Lat1: (0, 0x55b33c920d30), Lat2: (0, 0x55b33c920d30)
Lat1.second: i64 0
Lat2.second: i64 0
Visiting SSA:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
VisitInstr:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
Visiting SSA:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
VisitInstr:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
PHI:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
PHI LatOp: 0, 0x55b33c91fdd0
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 1
In Meet:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ], Lat1: (0, 0x55b33c91fdd0), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
Adding SSA:   %113 = sext i32 %.4 to i64
Adding SSA:   %109 = add nsw i32 %.4, 1
Adding SSA:   %107 = icmp slt i32 %.4, %.212
Visiting SSA:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
VisitInstr:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
PHI:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
PHI LatOp: 0, 0x55b33c920480
PHI LatOp: 0, 0x55b33c9313f0
Check LatCell: 1
In Meet:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ], Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
Adding SSA:   %64 = add nsw i32 %.2, 1
Adding SSA:   %61 = sext i32 %.2 to i64
Adding SSA:   %58 = sext i32 %.2 to i64
Adding SSA:   %56 = icmp slt i32 %.2, %0
Visiting SSA:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
VisitInstr:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
Visiting SSA:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
VisitInstr:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
PHI:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: 0, 0x55b33c92ca40
Check LatCell: 1
In Meet:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ], Lat1: (0, 0x55b33c920d30), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
Adding SSA:   %87 = add nsw i64 %.06, 1
Visiting SSA:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
VisitInstr:   %.03 = phi i32 [ %67, %65 ], [ %90, %93 ]
Visiting SSA:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
VisitInstr:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
PHI:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
PHI LatOp: 0, 0x55b33c920480
PHI LatOp: 0, 0x55b33c9313f0
Check LatCell: 1
In Meet:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ], Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
Adding SSA:   %84 = add nsw i32 %.3, 1
Adding SSA:   %79 = sext i32 %.3 to i64
Adding SSA:   %73 = sext i32 %.3 to i64
Adding SSA:   %71 = icmp slt i32 %.3, %.01
Visiting SSA:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
VisitInstr:   %.01 = phi i32 [ %69, %68 ], [ %85, %83 ]
Visiting SSA:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
VisitInstr:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
PHI:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: 0, 0x55b33c92ca40
Check LatCell: 1
In Meet:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ], Lat1: (0, 0x55b33c920d30), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
Adding SSA:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
Adding SSA:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
Visiting SSA:   %18 = add nsw i32 %.04, 1
VisitInstr:   %18 = add nsw i32 %.04, 1
BinaryOp:   %18 = add nsw i32 %.04, 1
Check LatCell: 1
In Meet:   %18 = add nsw i32 %.04, 1, Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %18 = add nsw i32 %.04, 1
Adding SSA:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
Visiting SSA:   %15 = sext i32 %.04 to i64
VisitInstr:   %15 = sext i32 %.04 to i64
UnaryOp:   %15 = sext i32 %.04 to i64
Check LatCell: 1
In Meet:   %15 = sext i32 %.04 to i64, Lat1: (0, 0x55b33c921ed0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %15 = sext i32 %.04 to i64
Adding SSA:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
Visiting SSA:   store i32 %.04, ptr %16, align 4
VisitInstr:   store i32 %.04, ptr %16, align 4
Visiting SSA:   %13 = icmp slt i32 %.04, %0
VisitInstr:   %13 = icmp slt i32 %.04, %0
Visiting SSA:   %32 = add nsw i32 %.15, 1
VisitInstr:   %32 = add nsw i32 %.15, 1
BinaryOp:   %32 = add nsw i32 %.15, 1
Check LatCell: 1
In Meet:   %32 = add nsw i32 %.15, 1, Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %32 = add nsw i32 %.15, 1
Adding SSA:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
Visiting SSA:   %26 = sext i32 %.15 to i64
VisitInstr:   %26 = sext i32 %.15 to i64
UnaryOp:   %26 = sext i32 %.15 to i64
Check LatCell: 1
In Meet:   %26 = sext i32 %.15 to i64, Lat1: (0, 0x55b33c921ed0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %26 = sext i32 %.15 to i64
Adding SSA:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
Visiting SSA:   %24 = icmp slt i32 %.15, %0
VisitInstr:   %24 = icmp slt i32 %.15, %0
Visiting SSA:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
VisitInstr:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI LatOp: 0, 0x55b33c920480
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ], Lat1: (0, 0x55b33c920480), Lat2: (0, 0x55b33c920480)
Lat1.second: i32 1
Lat2.second: i32 1
Visiting SSA:   %35 = add nsw i32 %.02, 1
VisitInstr:   %35 = add nsw i32 %.02, 1
BinaryOp:   %35 = add nsw i32 %.02, 1
Check LatCell: 1
In Meet:   %35 = add nsw i32 %.02, 1, Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %35 = add nsw i32 %.02, 1
Adding SSA:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
Visiting SSA:   %21 = icmp slt i32 %.02, 30
VisitInstr:   %21 = icmp slt i32 %.02, 30
CmpInst:   %21 = icmp slt i32 %.02, 30
Check LatCell: 1
In Meet:   %21 = icmp slt i32 %.02, 30, Lat1: (0, 0x55b33c921c90), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %21 = icmp slt i32 %.02, 30
Adding SSA:   br i1 %21, label %22, label %36
Visiting SSA:   %113 = sext i32 %.4 to i64
VisitInstr:   %113 = sext i32 %.4 to i64
UnaryOp:   %113 = sext i32 %.4 to i64
Check LatCell: 1
In Meet:   %113 = sext i32 %.4 to i64, Lat1: (0, 0x55b33c921ed0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %113 = sext i32 %.4 to i64
Adding SSA:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
Visiting SSA:   %109 = add nsw i32 %.4, 1
VisitInstr:   %109 = add nsw i32 %.4, 1
BinaryOp:   %109 = add nsw i32 %.4, 1
Check LatCell: 1
In Meet:   %109 = add nsw i32 %.4, 1, Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %109 = add nsw i32 %.4, 1
Adding SSA:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
Adding SSA:   %110 = sext i32 %109 to i64
Visiting SSA:   %107 = icmp slt i32 %.4, %.212
VisitInstr:   %107 = icmp slt i32 %.4, %.212
Visiting SSA:   %64 = add nsw i32 %.2, 1
VisitInstr:   %64 = add nsw i32 %.2, 1
BinaryOp:   %64 = add nsw i32 %.2, 1
Check LatCell: 1
In Meet:   %64 = add nsw i32 %.2, 1, Lat1: (0, 0x55b33c9313f0), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %64 = add nsw i32 %.2, 1
Adding SSA:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
Visiting SSA:   %61 = sext i32 %.2 to i64
VisitInstr:   %61 = sext i32 %.2 to i64
UnaryOp:   %61 = sext i32 %.2 to i64
Check LatCell: 1
In Meet:   %61 = sext i32 %.2 to i64, Lat1: (0, 0x55b33c927660), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %61 = sext i32 %.2 to i64
Adding SSA:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
Visiting SSA:   %58 = sext i32 %.2 to i64
VisitInstr:   %58 = sext i32 %.2 to i64
UnaryOp:   %58 = sext i32 %.2 to i64
Check LatCell: 1
In Meet:   %58 = sext i32 %.2 to i64, Lat1: (0, 0x55b33c927660), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %58 = sext i32 %.2 to i64
Adding SSA:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
Visiting SSA:   %56 = icmp slt i32 %.2, %0
VisitInstr:   %56 = icmp slt i32 %.2, %0
Visiting SSA:   %87 = add nsw i64 %.06, 1
VisitInstr:   %87 = add nsw i64 %.06, 1
BinaryOp:   %87 = add nsw i64 %.06, 1
Check LatCell: 1
In Meet:   %87 = add nsw i64 %.06, 1, Lat1: (0, 0x55b33c92ca40), Lat2: (-1, 0x0)
Lat1.second: i64 1
Meet:   %87 = add nsw i64 %.06, 1
Adding SSA:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
Adding SSA:   %96 = icmp slt i64 %.07, %87
Adding SSA:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
Visiting SSA:   %84 = add nsw i32 %.3, 1
VisitInstr:   %84 = add nsw i32 %.3, 1
BinaryOp:   %84 = add nsw i32 %.3, 1
Check LatCell: 1
In Meet:   %84 = add nsw i32 %.3, 1, Lat1: (0, 0x55b33c9313f0), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %84 = add nsw i32 %.3, 1
Adding SSA:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
Visiting SSA:   %79 = sext i32 %.3 to i64
VisitInstr:   %79 = sext i32 %.3 to i64
UnaryOp:   %79 = sext i32 %.3 to i64
Check LatCell: 1
In Meet:   %79 = sext i32 %.3 to i64, Lat1: (0, 0x55b33c927660), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %79 = sext i32 %.3 to i64
Adding SSA:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
Visiting SSA:   %73 = sext i32 %.3 to i64
VisitInstr:   %73 = sext i32 %.3 to i64
UnaryOp:   %73 = sext i32 %.3 to i64
Check LatCell: 1
In Meet:   %73 = sext i32 %.3 to i64, Lat1: (0, 0x55b33c927660), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %73 = sext i32 %.3 to i64
Adding SSA:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
Visiting SSA:   %71 = icmp slt i32 %.3, %.01
VisitInstr:   %71 = icmp slt i32 %.3, %.01
Visiting SSA:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
VisitInstr:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ], Lat1: (0, 0x55b33c920d30), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.07 = phi i64 [ 0, %19 ], [ %.29, %126 ]
Adding SSA:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
Visiting SSA:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
VisitInstr:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
PHI LatOp: 0, 0x55b33c920d30
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ], Lat1: (0, 0x55b33c920d30), Lat2: (-1, 0x0)
Lat1.second: i64 0
Meet:   %.0 = phi i64 [ 0, %4 ], [ %.29, %102 ]
Adding SSA:   ret i64 %.0
Visiting SSA:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
VisitInstr:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
Visiting SSA:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
VisitInstr:   %16 = getelementptr inbounds i32, ptr %9, i64 %15
Visiting SSA:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
VisitInstr:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
Visiting SSA:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
VisitInstr:   %27 = getelementptr inbounds i32, ptr %9, i64 %26
Visiting SSA:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
VisitInstr:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ], Lat1: (0, 0x55b33c920480), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.1 = phi i32 [ %35, %33 ], [ %.02, %20 ]
Adding SSA:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
Visiting SSA:   br i1 %21, label %22, label %36
VisitInstr:   br i1 %21, label %22, label %36
BranchInst:   br i1 %21, label %22, label %36
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c9272a0, 0x55b33c9275a0, 0
In AddEdge: 0x55b33c9272a0, 0x55b33c9275a0, 1
Adding edge:  -> 
Visiting SSA:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
VisitInstr:   %114 = getelementptr inbounds i32, ptr %9, i64 %113
Visiting SSA:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
VisitInstr:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
Visiting SSA:   %110 = sext i32 %109 to i64
VisitInstr:   %110 = sext i32 %109 to i64
UnaryOp:   %110 = sext i32 %109 to i64
Check LatCell: 1
In Meet:   %110 = sext i32 %109 to i64, Lat1: (0, 0x55b33c927660), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %110 = sext i32 %109 to i64
Adding SSA:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
Visiting SSA:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
VisitInstr:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
Visiting SSA:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
VisitInstr:   %62 = getelementptr inbounds i32, ptr %7, i64 %61
Visiting SSA:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
VisitInstr:   %59 = getelementptr inbounds i32, ptr %9, i64 %58
Visiting SSA:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
VisitInstr:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
PHI:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ], Lat1: (0, 0x55b33c92ca40), Lat2: (-1, 0x0)
Lat1.second: i64 1
Meet:   %.18 = phi i64 [ %87, %97 ], [ %.07, %95 ]
Visiting SSA:   %96 = icmp slt i64 %.07, %87
VisitInstr:   %96 = icmp slt i64 %.07, %87
CmpInst:   %96 = icmp slt i64 %.07, %87
Check LatCell: 1
In Meet:   %96 = icmp slt i64 %.07, %87, Lat1: (0, 0x55b33c921c90), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %96 = icmp slt i64 %.07, %87
Adding SSA:   br i1 %96, label %97, label %98
Visiting SSA:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
VisitInstr:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
Visiting SSA:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
VisitInstr:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
Visiting SSA:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
VisitInstr:   %80 = getelementptr inbounds i32, ptr %7, i64 %79
Visiting SSA:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
VisitInstr:   %74 = getelementptr inbounds i32, ptr %7, i64 %73
Visiting SSA:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
VisitInstr:   %.29 = phi i64 [ %.07, %45 ], [ %.07, %49 ], [ %.18, %98 ]
Visiting SSA:   ret i64 %.0
VisitInstr:   ret i64 %.0
Visiting SSA:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
VisitInstr:   %.02 = phi i32 [ 0, %19 ], [ %.1, %126 ]
Visiting SSA:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
VisitInstr:   %111 = getelementptr inbounds i32, ptr %9, i64 %110
Visiting SSA:   br i1 %96, label %97, label %98
VisitInstr:   br i1 %96, label %97, label %98
BranchInst:   br i1 %96, label %97, label %98
In BranchInst: -1, 0x0
In AddEdge: 0x55b33c92d430, 0x55b33c92d920, 0
In AddEdge: 0x55b33c92d430, 0x55b33c92d920, 1
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
----------------------------------------
Running licm only: fannkuch.c
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitLICM running on fannkuch
******************************************************
UnitLoopAnalysis running on fannkuch
[LoopLoopAnalysis] parent loop header is:   %.04 = phi i32 [ 0, %5 ], [ %18, %17 ]
[LoopLoopAnalysis] parent loop header is:   %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
[LoopLoopAnalysis] parent loop header is:   %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
[LoopLoopAnalysis] parent loop header is:   %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
[LoopLoopAnalysis] parent loop header is:   %.010 = phi i32 [ %0, %19 ], [ %.212, %126 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.06 = phi i64 [ 0, %65 ], [ %87, %93 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.2 = phi i32 [ 1, %54 ], [ %64, %63 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.111 = phi i32 [ %.010, %36 ], [ %44, %43 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
[LoopLoopAnalysis] parent loop header is:   %.3 = phi i32 [ 1, %68 ], [ %84, %83 ]
[LoopLoopAnalysis] parent loop header is:   %.212 = phi i32 [ %.111, %99 ], [ %125, %124 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
[LoopLoopAnalysis] parent loop header is:   %.4 = phi i32 [ 0, %103 ], [ %109, %108 ]
[LoopLoopAnalysis] parent loop header is:   %.15 = phi i32 [ 0, %22 ], [ %32, %31 ]
Instruction to be moved:   %104 = getelementptr inbounds i32, ptr %9, i64 0
Instruction to be moved:   %46 = getelementptr inbounds i32, ptr %9, i64 0
Instruction to be moved:   %47 = load i32, ptr %20, align 4
Instruction to be moved:   %48 = icmp eq i32 %21, 0
Instruction to be moved:   %100 = getelementptr inbounds i32, ptr %9, i64 0
Instruction to be moved:   %51 = sext i32 %2 to i64
Instruction to be moved:   %52 = getelementptr inbounds i32, ptr %9, i64 %24
Instruction to be moved:   %67 = getelementptr inbounds i32, ptr %9, i64 0
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 1
[UnitLICM]: NumComputeHoisted: 1
[UnitLICM]: Total: 8
----------------------------------------
Running sccp and licm: fannkuch.c
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 0
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca i32, align 4
Check LatCell: 0
In Meet:   %4 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca i32, align 4
VisitInstr:   %5 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %5 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca ptr, align 8
VisitInstr:   %6 = alloca i32, align 4
Check LatCell: 0
In Meet:   %6 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca i32, align 4
VisitInstr:   store i32 0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %3, align 4
VisitInstr:   store i32 %0, ptr %4, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %4, align 4
VisitInstr:   store ptr %1, ptr %5, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %5, align 8
VisitInstr:   store i32 11, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 11, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 11, ptr %6, align 4
VisitInstr:   %7 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %7 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = load i32, ptr %6, align 4
VisitInstr:   %8 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %8 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = load i32, ptr %6, align 4
VisitInstr:   %9 = call i64 @fannkuch(i32 noundef %8)
Check LatCell: 0
In Meet:   %9 = call i64 @fannkuch(i32 noundef %8), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = call i64 @fannkuch(i32 noundef %8)
VisitInstr:   %10 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %7, i64 noundef %9)
Check LatCell: 0
In Meet:   %10 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %7, i64 noundef %9), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %7, i64 noundef %9)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on fannkuch
******************************************************
UnitLoopAnalysis running on fannkuch
[LoopLoopAnalysis] parent loop header is:   %33 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %72 = load i32, ptr %9, align 4
[LoopLoopAnalysis] parent loop header is:   %99 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   store i32 1, ptr %10, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %123 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %48 = load i32, ptr %12, align 4
[LoopLoopAnalysis] It has child loop header : ^-  store i32 1, ptr %10, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %99 = load i32, ptr %10, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %177 = load i32, ptr %9, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %72 = load i32, ptr %9, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %52 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %123 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %177 = load i32, ptr %9, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %187 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %187 = load i32, ptr %10, align 4
[LoopLoopAnalysis] parent loop header is:   %52 = load i32, ptr %10, align 4
Instruction to be moved:   %33 = load i32, ptr %10, align 4
Instruction to be moved:   %34 = load i32, ptr %3, align 4
Instruction to be moved:   %35 = icmp slt i32 %32, %33
Instruction to be moved:   %37 = load i32, ptr %10, align 4
Instruction to be moved:   %38 = load ptr, ptr %5, align 8
Instruction to be moved:   %39 = load i32, ptr %10, align 4
Instruction to be moved:   %40 = sext i32 %37 to i64
Instruction to be moved:   %41 = getelementptr inbounds i32, ptr %36, i64 %38
Instruction to be moved:   %43 = load i32, ptr %10, align 4
Instruction to be moved:   %44 = add nsw i32 %40, 1
Instruction to be moved:   %123 = load i32, ptr %10, align 4
Instruction to be moved:   %124 = load i32, ptr %14, align 4
Instruction to be moved:   %125 = icmp slt i32 %122, %123
Instruction to be moved:   %127 = load ptr, ptr %4, align 8
Instruction to be moved:   %128 = load i32, ptr %10, align 4
Instruction to be moved:   %129 = sext i32 %126 to i64
Instruction to be moved:   %130 = getelementptr inbounds i32, ptr %125, i64 %127
Instruction to be moved:   %132 = load ptr, ptr %4, align 8
Instruction to be moved:   %133 = load i32, ptr %14, align 4
Instruction to be moved:   %134 = sext i32 %130 to i64
Instruction to be moved:   %135 = getelementptr inbounds i32, ptr %129, i64 %131
Instruction to be moved:   %137 = load ptr, ptr %4, align 8
Instruction to be moved:   %138 = load i32, ptr %10, align 4
Instruction to be moved:   %139 = sext i32 %134 to i64
Instruction to be moved:   %140 = getelementptr inbounds i32, ptr %133, i64 %135
Instruction to be moved:   %141 = load i32, ptr %15, align 4
Instruction to be moved:   %142 = load ptr, ptr %4, align 8
Instruction to be moved:   %143 = load i32, ptr %14, align 4
Instruction to be moved:   %144 = sext i32 %139 to i64
Instruction to be moved:   %145 = getelementptr inbounds i32, ptr %138, i64 %140
Instruction to be moved:   %147 = load i32, ptr %10, align 4
Instruction to be moved:   %148 = add nsw i32 %142, 1
Instruction to be moved:   %149 = load i32, ptr %14, align 4
Instruction to be moved:   %150 = add nsw i32 %144, -1
Instruction to be moved:   %120 = load i32, ptr %11, align 4
Instruction to be moved:   %121 = sub nsw i32 %119, 1
Instruction to be moved:   %122 = load i32, ptr %10, align 4
Instruction to be moved:   %123 = load i32, ptr %14, align 4
Instruction to be moved:   %124 = icmp slt i32 %121, %122
Instruction to be moved:   %125 = load ptr, ptr %4, align 8
Instruction to be moved:   %126 = load i32, ptr %10, align 4
Instruction to be moved:   %127 = sext i32 %125 to i64
Instruction to be moved:   %128 = getelementptr inbounds i32, ptr %124, i64 %126
Instruction to be moved:   %129 = load ptr, ptr %4, align 8
Instruction to be moved:   %130 = load i32, ptr %14, align 4
Instruction to be moved:   %131 = sext i32 %129 to i64
Instruction to be moved:   %132 = getelementptr inbounds i32, ptr %128, i64 %130
Instruction to be moved:   %133 = load ptr, ptr %4, align 8
Instruction to be moved:   %134 = load i32, ptr %10, align 4
Instruction to be moved:   %135 = sext i32 %133 to i64
Instruction to be moved:   %136 = getelementptr inbounds i32, ptr %132, i64 %134
Instruction to be moved:   %137 = load i32, ptr %15, align 4
Instruction to be moved:   %138 = load ptr, ptr %4, align 8
Instruction to be moved:   %139 = load i32, ptr %14, align 4
Instruction to be moved:   %140 = sext i32 %138 to i64
Instruction to be moved:   %141 = getelementptr inbounds i32, ptr %137, i64 %139
Instruction to be moved:   %142 = load i32, ptr %10, align 4
Instruction to be moved:   %143 = add nsw i32 %141, 1
Instruction to be moved:   %144 = load i32, ptr %14, align 4
Instruction to be moved:   %145 = add nsw i32 %143, -1
Instruction to be moved:   %152 = load i64, ptr %7, align 8
Instruction to be moved:   %153 = add nsw i64 %145, 1
Instruction to be moved:   %154 = load ptr, ptr %4, align 8
Instruction to be moved:   %155 = load i32, ptr %11, align 4
Instruction to be moved:   %156 = sext i32 %148 to i64
Instruction to be moved:   %157 = getelementptr inbounds i32, ptr %147, i64 %149
Instruction to be moved:   %158 = load i32, ptr %150, align 4
Instruction to be moved:   %159 = load i32, ptr %11, align 4
Instruction to be moved:   %160 = load ptr, ptr %4, align 8
Instruction to be moved:   %161 = load i32, ptr %11, align 4
Instruction to be moved:   %162 = sext i32 %154 to i64
Instruction to be moved:   %163 = getelementptr inbounds i32, ptr %153, i64 %155
Instruction to be moved:   %164 = load i32, ptr %14, align 4
Instruction to be moved:   %166 = load i32, ptr %11, align 4
Instruction to be moved:   %167 = icmp ne i32 %158, 0
Instruction to be moved:   %99 = load i32, ptr %10, align 4
Instruction to be moved:   %100 = load i32, ptr %3, align 4
Instruction to be moved:   %101 = icmp slt i32 %98, %99
Instruction to be moved:   %103 = load ptr, ptr %5, align 8
Instruction to be moved:   %104 = load i32, ptr %10, align 4
Instruction to be moved:   %105 = sext i32 %102 to i64
Instruction to be moved:   %106 = getelementptr inbounds i32, ptr %101, i64 %103
Instruction to be moved:   %108 = load ptr, ptr %4, align 8
Instruction to be moved:   %109 = load i32, ptr %10, align 4
Instruction to be moved:   %110 = sext i32 %106 to i64
Instruction to be moved:   %111 = getelementptr inbounds i32, ptr %105, i64 %107
Instruction to be moved:   %113 = load i32, ptr %10, align 4
Instruction to be moved:   %114 = add nsw i32 %109, 1
Instruction to be moved:   %187 = load i32, ptr %10, align 4
Instruction to be moved:   %188 = load i32, ptr %9, align 4
Instruction to be moved:   %189 = icmp slt i32 %186, %187
Instruction to be moved:   %191 = load i32, ptr %10, align 4
Instruction to be moved:   %192 = add nsw i32 %189, 1
Instruction to be moved:   %193 = load ptr, ptr %5, align 8
Instruction to be moved:   %194 = load i32, ptr %11, align 4
Instruction to be moved:   %195 = sext i32 %192 to i64
Instruction to be moved:   %196 = getelementptr inbounds i32, ptr %191, i64 %193
Instruction to be moved:   %198 = load ptr, ptr %5, align 8
Instruction to be moved:   %199 = load i32, ptr %10, align 4
Instruction to be moved:   %200 = sext i32 %196 to i64
Instruction to be moved:   %201 = getelementptr inbounds i32, ptr %195, i64 %197
Instruction to be moved:   %202 = load i32, ptr %11, align 4
Instruction to be moved:   %177 = load i32, ptr %9, align 4
Instruction to be moved:   %178 = load i32, ptr %3, align 4
Instruction to be moved:   %179 = icmp eq i32 %176, %177
Instruction to be moved:   %183 = load ptr, ptr %5, align 8
Instruction to be moved:   %184 = getelementptr inbounds i32, ptr %179, i64 0
Instruction to be moved:   %186 = load i32, ptr %10, align 4
Instruction to be moved:   %187 = load i32, ptr %9, align 4
Instruction to be moved:   %188 = icmp slt i32 %181, %182
Instruction to be moved:   %189 = load i32, ptr %10, align 4
Instruction to be moved:   %190 = add nsw i32 %184, 1
Instruction to be moved:   %191 = load ptr, ptr %5, align 8
Instruction to be moved:   %192 = load i32, ptr %11, align 4
Instruction to be moved:   %193 = sext i32 %187 to i64
Instruction to be moved:   %194 = getelementptr inbounds i32, ptr %186, i64 %188
Instruction to be moved:   %195 = load ptr, ptr %5, align 8
Instruction to be moved:   %196 = load i32, ptr %10, align 4
Instruction to be moved:   %197 = sext i32 %191 to i64
Instruction to be moved:   %198 = getelementptr inbounds i32, ptr %190, i64 %192
Instruction to be moved:   %199 = load i32, ptr %11, align 4
Instruction to be moved:   %204 = load i32, ptr %16, align 4
Instruction to be moved:   %205 = load ptr, ptr %5, align 8
Instruction to be moved:   %206 = load i32, ptr %9, align 4
Instruction to be moved:   %207 = sext i32 %197 to i64
Instruction to be moved:   %208 = getelementptr inbounds i32, ptr %196, i64 %198
Instruction to be moved:   %209 = load ptr, ptr %6, align 8
Instruction to be moved:   %210 = load i32, ptr %9, align 4
Instruction to be moved:   %211 = sext i32 %201 to i64
Instruction to be moved:   %212 = getelementptr inbounds i32, ptr %200, i64 %202
Instruction to be moved:   %218 = load i32, ptr %9, align 4
Instruction to be moved:   %219 = add nsw i32 %204, 1
Instruction to be moved:   %72 = load i32, ptr %9, align 4
Instruction to be moved:   %73 = icmp ne i32 %71, 1
Instruction to be moved:   %75 = load i32, ptr %9, align 4
Instruction to be moved:   %76 = load ptr, ptr %6, align 8
Instruction to be moved:   %77 = load i32, ptr %9, align 4
Instruction to be moved:   %78 = sub nsw i32 %75, 1
Instruction to be moved:   %79 = sext i32 %76 to i64
Instruction to be moved:   %80 = getelementptr inbounds i32, ptr %74, i64 %77
Instruction to be moved:   %82 = load i32, ptr %9, align 4
Instruction to be moved:   %83 = add nsw i32 %79, -1
Instruction to be moved:   %52 = load i32, ptr %10, align 4
Instruction to be moved:   %53 = load i32, ptr %3, align 4
Instruction to be moved:   %54 = icmp slt i32 %51, %52
Instruction to be moved:   %56 = load ptr, ptr %5, align 8
Instruction to be moved:   %57 = load i32, ptr %10, align 4
Instruction to be moved:   %58 = sext i32 %55 to i64
Instruction to be moved:   %59 = getelementptr inbounds i32, ptr %54, i64 %56
Instruction to be moved:   %64 = load i32, ptr %10, align 4
Instruction to be moved:   %65 = add nsw i32 %58, 1
Instruction to be moved:   %48 = load i32, ptr %12, align 4
Instruction to be moved:   %49 = icmp slt i32 %47, 30
Instruction to be moved:   %51 = load i32, ptr %10, align 4
Instruction to be moved:   %52 = load i32, ptr %3, align 4
Instruction to be moved:   %53 = icmp slt i32 %49, %50
Instruction to be moved:   %54 = load ptr, ptr %5, align 8
Instruction to be moved:   %55 = load i32, ptr %10, align 4
Instruction to be moved:   %56 = sext i32 %53 to i64
Instruction to be moved:   %57 = getelementptr inbounds i32, ptr %52, i64 %54
Instruction to be moved:   %58 = load i32, ptr %10, align 4
Instruction to be moved:   %59 = add nsw i32 %56, 1
Instruction to be moved:   %71 = load i32, ptr %9, align 4
Instruction to be moved:   %72 = icmp ne i32 %58, 1
Instruction to be moved:   %73 = load i32, ptr %9, align 4
Instruction to be moved:   %74 = load ptr, ptr %6, align 8
Instruction to be moved:   %75 = load i32, ptr %9, align 4
Instruction to be moved:   %76 = sub nsw i32 %62, 1
Instruction to be moved:   %77 = sext i32 %63 to i64
Instruction to be moved:   %78 = getelementptr inbounds i32, ptr %61, i64 %64
Instruction to be moved:   %79 = load i32, ptr %9, align 4
Instruction to be moved:   %80 = add nsw i32 %66, -1
Instruction to be moved:   %78 = load i32, ptr %12, align 4
Instruction to be moved:   %79 = add nsw i32 %68, 1
Instruction to be moved:   %85 = load ptr, ptr %5, align 8
Instruction to be moved:   %86 = getelementptr inbounds i32, ptr %70, i64 0
Instruction to be moved:   %87 = load i32, ptr %71, align 4
Instruction to be moved:   %88 = icmp eq i32 %72, 0
Instruction to be moved:   %176 = load i32, ptr %9, align 4
Instruction to be moved:   %177 = load i32, ptr %3, align 4
Instruction to be moved:   %178 = icmp eq i32 %74, %75
Instruction to be moved:   %179 = load ptr, ptr %5, align 8
Instruction to be moved:   %180 = getelementptr inbounds i32, ptr %77, i64 0
Instruction to be moved:   %181 = load i32, ptr %10, align 4
Instruction to be moved:   %182 = load i32, ptr %9, align 4
Instruction to be moved:   %183 = icmp slt i32 %79, %80
Instruction to be moved:   %184 = load i32, ptr %10, align 4
Instruction to be moved:   %185 = add nsw i32 %82, 1
Instruction to be moved:   %186 = load ptr, ptr %5, align 8
Instruction to be moved:   %187 = load i32, ptr %11, align 4
Instruction to be moved:   %188 = sext i32 %85 to i64
Instruction to be moved:   %189 = getelementptr inbounds i32, ptr %84, i64 %86
Instruction to be moved:   %190 = load ptr, ptr %5, align 8
Instruction to be moved:   %191 = load i32, ptr %10, align 4
Instruction to be moved:   %192 = sext i32 %89 to i64
Instruction to be moved:   %193 = getelementptr inbounds i32, ptr %88, i64 %90
Instruction to be moved:   %194 = load i32, ptr %11, align 4
Instruction to be moved:   %195 = load i32, ptr %16, align 4
Instruction to be moved:   %196 = load ptr, ptr %5, align 8
Instruction to be moved:   %197 = load i32, ptr %9, align 4
Instruction to be moved:   %198 = sext i32 %95 to i64
Instruction to be moved:   %199 = getelementptr inbounds i32, ptr %94, i64 %96
Instruction to be moved:   %200 = load ptr, ptr %6, align 8
Instruction to be moved:   %201 = load i32, ptr %9, align 4
Instruction to be moved:   %202 = sext i32 %99 to i64
Instruction to be moved:   %203 = getelementptr inbounds i32, ptr %98, i64 %100
Instruction to be moved:   %204 = load i32, ptr %9, align 4
Instruction to be moved:   %205 = add nsw i32 %102, 1
Instruction to be moved:   %120 = load ptr, ptr %5, align 8
Instruction to be moved:   %121 = load i32, ptr %13, align 4
Instruction to be moved:   %122 = sext i32 %105 to i64
Instruction to be moved:   %123 = getelementptr inbounds i32, ptr %104, i64 %106
Instruction to be moved:   %125 = load i32, ptr %13, align 4
Instruction to be moved:   %128 = load i32, ptr %10, align 4
Instruction to be moved:   %129 = load i32, ptr %3, align 4
Instruction to be moved:   %130 = icmp slt i32 %109, %110
Instruction to be moved:   %131 = load ptr, ptr %5, align 8
Instruction to be moved:   %132 = load i32, ptr %10, align 4
Instruction to be moved:   %133 = sext i32 %113 to i64
Instruction to be moved:   %134 = getelementptr inbounds i32, ptr %112, i64 %114
Instruction to be moved:   %135 = load ptr, ptr %4, align 8
Instruction to be moved:   %136 = load i32, ptr %10, align 4
Instruction to be moved:   %137 = sext i32 %117 to i64
Instruction to be moved:   %138 = getelementptr inbounds i32, ptr %116, i64 %118
Instruction to be moved:   %139 = load i32, ptr %10, align 4
Instruction to be moved:   %140 = add nsw i32 %120, 1
Instruction to be moved:   %146 = load ptr, ptr %5, align 8
Instruction to be moved:   %147 = getelementptr inbounds i32, ptr %122, i64 0
Instruction to be moved:   %149 = load i32, ptr %11, align 4
Instruction to be moved:   %150 = sub nsw i32 %124, 1
Instruction to be moved:   %151 = load i32, ptr %10, align 4
Instruction to be moved:   %152 = load i32, ptr %14, align 4
Instruction to be moved:   %153 = icmp slt i32 %126, %127
Instruction to be moved:   %154 = load ptr, ptr %4, align 8
Instruction to be moved:   %155 = load i32, ptr %10, align 4
Instruction to be moved:   %156 = sext i32 %130 to i64
Instruction to be moved:   %157 = getelementptr inbounds i32, ptr %129, i64 %131
Instruction to be moved:   %158 = load ptr, ptr %4, align 8
Instruction to be moved:   %159 = load i32, ptr %14, align 4
Instruction to be moved:   %160 = sext i32 %134 to i64
Instruction to be moved:   %161 = getelementptr inbounds i32, ptr %133, i64 %135
Instruction to be moved:   %162 = load ptr, ptr %4, align 8
Instruction to be moved:   %163 = load i32, ptr %10, align 4
Instruction to be moved:   %164 = sext i32 %138 to i64
Instruction to be moved:   %165 = getelementptr inbounds i32, ptr %137, i64 %139
Instruction to be moved:   %166 = load i32, ptr %15, align 4
Instruction to be moved:   %167 = load ptr, ptr %4, align 8
Instruction to be moved:   %168 = load i32, ptr %14, align 4
Instruction to be moved:   %169 = sext i32 %143 to i64
Instruction to be moved:   %170 = getelementptr inbounds i32, ptr %142, i64 %144
Instruction to be moved:   %171 = load i32, ptr %10, align 4
Instruction to be moved:   %172 = add nsw i32 %146, 1
Instruction to be moved:   %173 = load i32, ptr %14, align 4
Instruction to be moved:   %174 = add nsw i32 %148, -1
Instruction to be moved:   %175 = load i64, ptr %7, align 8
Instruction to be moved:   %176 = add nsw i64 %150, 1
Instruction to be moved:   %177 = load ptr, ptr %4, align 8
Instruction to be moved:   %178 = load i32, ptr %11, align 4
Instruction to be moved:   %179 = sext i32 %153 to i64
Instruction to be moved:   %180 = getelementptr inbounds i32, ptr %152, i64 %154
Instruction to be moved:   %182 = load i32, ptr %11, align 4
Instruction to be moved:   %183 = load ptr, ptr %4, align 8
Instruction to be moved:   %184 = load i32, ptr %11, align 4
Instruction to be moved:   %185 = sext i32 %158 to i64
Instruction to be moved:   %186 = getelementptr inbounds i32, ptr %157, i64 %159
Instruction to be moved:   %187 = load i32, ptr %14, align 4
Instruction to be moved:   %188 = load i32, ptr %11, align 4
Instruction to be moved:   %189 = icmp ne i32 %162, 0
Instruction to be moved:   %199 = load i64, ptr %8, align 8
Instruction to be moved:   %200 = load i64, ptr %7, align 8
Instruction to be moved:   %201 = icmp slt i64 %164, %165
Instruction to be moved:   %203 = load i64, ptr %7, align 8
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 151
[UnitLICM]: NumComputeHoisted: 45
[UnitLICM]: Total: 272
UnitSCCP running on fannkuch
Visiting BB: 
VisitInstr:   %2 = alloca i64, align 8
Check LatCell: 0
In Meet:   %2 = alloca i64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %2 = alloca i64, align 8
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %4 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca ptr, align 8
VisitInstr:   %5 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %5 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca ptr, align 8
VisitInstr:   %6 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %6 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca ptr, align 8
VisitInstr:   %7 = alloca i64, align 8
Check LatCell: 0
In Meet:   %7 = alloca i64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i64, align 8
VisitInstr:   %8 = alloca i64, align 8
Check LatCell: 0
In Meet:   %8 = alloca i64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca i64, align 8
VisitInstr:   %9 = alloca i32, align 4
Check LatCell: 0
In Meet:   %9 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = alloca i32, align 4
VisitInstr:   %10 = alloca i32, align 4
Check LatCell: 0
In Meet:   %10 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = alloca i32, align 4
VisitInstr:   %11 = alloca i32, align 4
Check LatCell: 0
In Meet:   %11 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = alloca i32, align 4
VisitInstr:   %12 = alloca i32, align 4
Check LatCell: 0
In Meet:   %12 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = alloca i32, align 4
VisitInstr:   %13 = alloca i32, align 4
Check LatCell: 0
In Meet:   %13 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = alloca i32, align 4
VisitInstr:   %14 = alloca i32, align 4
Check LatCell: 0
In Meet:   %14 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = alloca i32, align 4
VisitInstr:   %15 = alloca i32, align 4
Check LatCell: 0
In Meet:   %15 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = alloca i32, align 4
VisitInstr:   %16 = alloca i32, align 4
Check LatCell: 0
In Meet:   %16 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = alloca i32, align 4
VisitInstr:   store i32 %0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %3, align 4
VisitInstr:   %17 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %17 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load i32, ptr %3, align 4
VisitInstr:   %18 = sub nsw i32 %17, 1
BinaryOp:   %18 = sub nsw i32 %17, 1
Check LatCell: 0
In Meet:   %18 = sub nsw i32 %17, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = sub nsw i32 %17, 1
VisitInstr:   store i32 %18, ptr %13, align 4
Check LatCell: 0
In Meet:   store i32 %18, ptr %13, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %18, ptr %13, align 4
VisitInstr:   %19 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %19 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = load i32, ptr %3, align 4
VisitInstr:   %20 = icmp slt i32 %19, 1
CmpInst:   %20 = icmp slt i32 %19, 1
Check LatCell: 0
In Meet:   %20 = icmp slt i32 %19, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = icmp slt i32 %19, 1
VisitInstr:   br i1 %20, label %21, label %22
BranchInst:   br i1 %20, label %21, label %22
In BranchInst: -1, 0x0
In AddEdge: 0x556861befc90, 0x556861bf0800, 0
Adding edge:  -> 
In AddEdge: 0x556861befc90, 0x556861bf0800, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i64 0, ptr %2, align 8
Check LatCell: 0
In Meet:   store i64 0, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 0, ptr %2, align 8
VisitInstr:   br label %221
BranchInst:   br label %221
In AddEdge: 0x556861befe60, 0x556861bf0950, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %23 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %23 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load i32, ptr %3, align 4
VisitInstr:   %24 = sext i32 %23 to i64
UnaryOp:   %24 = sext i32 %23 to i64
Check LatCell: 0
In Meet:   %24 = sext i32 %23 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = sext i32 %23 to i64
VisitInstr:   %25 = call noalias ptr @calloc(i64 noundef %24, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %25 = call noalias ptr @calloc(i64 noundef %24, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = call noalias ptr @calloc(i64 noundef %24, i64 noundef 4) #3
VisitInstr:   store ptr %25, ptr %4, align 8
Check LatCell: 0
In Meet:   store ptr %25, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %25, ptr %4, align 8
VisitInstr:   %26 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %26 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = load i32, ptr %3, align 4
VisitInstr:   %27 = sext i32 %26 to i64
UnaryOp:   %27 = sext i32 %26 to i64
Check LatCell: 0
In Meet:   %27 = sext i32 %26 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = sext i32 %26 to i64
VisitInstr:   %28 = call noalias ptr @calloc(i64 noundef %27, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %28 = call noalias ptr @calloc(i64 noundef %27, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = call noalias ptr @calloc(i64 noundef %27, i64 noundef 4) #3
VisitInstr:   store ptr %28, ptr %5, align 8
Check LatCell: 0
In Meet:   store ptr %28, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %28, ptr %5, align 8
VisitInstr:   %29 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %29 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = load i32, ptr %3, align 4
VisitInstr:   %30 = sext i32 %29 to i64
UnaryOp:   %30 = sext i32 %29 to i64
Check LatCell: 0
In Meet:   %30 = sext i32 %29 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = sext i32 %29 to i64
VisitInstr:   %31 = call noalias ptr @calloc(i64 noundef %30, i64 noundef 4) #3
Check LatCell: 0
In Meet:   %31 = call noalias ptr @calloc(i64 noundef %30, i64 noundef 4) #3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = call noalias ptr @calloc(i64 noundef %30, i64 noundef 4) #3
VisitInstr:   store ptr %31, ptr %6, align 8
Check LatCell: 0
In Meet:   store ptr %31, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %31, ptr %6, align 8
VisitInstr:   store i32 0, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %10, align 4
VisitInstr:   %32 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %32 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = load i32, ptr %10, align 4
VisitInstr:   %33 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %33 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load i32, ptr %3, align 4
VisitInstr:   %34 = icmp slt i32 %32, %33
CmpInst:   %34 = icmp slt i32 %32, %33
Check LatCell: 0
In Meet:   %34 = icmp slt i32 %32, %33, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = icmp slt i32 %32, %33
VisitInstr:   %35 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %35 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load i32, ptr %10, align 4
VisitInstr:   %36 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %36 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = load ptr, ptr %5, align 8
VisitInstr:   %37 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %37 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = load i32, ptr %10, align 4
VisitInstr:   %38 = sext i32 %37 to i64
UnaryOp:   %38 = sext i32 %37 to i64
Check LatCell: 0
In Meet:   %38 = sext i32 %37 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = sext i32 %37 to i64
VisitInstr:   %39 = getelementptr inbounds i32, ptr %36, i64 %38
GetElementPtr:   %39 = getelementptr inbounds i32, ptr %36, i64 %38
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds i32, ptr %36, i64 %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds i32, ptr %36, i64 %38
VisitInstr:   %40 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %40 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load i32, ptr %10, align 4
VisitInstr:   %41 = add nsw i32 %40, 1
BinaryOp:   %41 = add nsw i32 %40, 1
Check LatCell: 0
In Meet:   %41 = add nsw i32 %40, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = add nsw i32 %40, 1
VisitInstr:   br label %42
BranchInst:   br label %42
In AddEdge: 0x556861bf0710, 0x556861bf12f0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %222 = load i64, ptr %2, align 8
Check LatCell: 0
In Meet:   %222 = load i64, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %222 = load i64, ptr %2, align 8
VisitInstr:   ret i64 %222
Check LatCell: 0
In Meet:   ret i64 %222, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i64 %222
Visiting BB: 
VisitInstr:   br i1 %34, label %43, label %45
BranchInst:   br i1 %34, label %43, label %45
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf1240, 0x556861bf1800, 0
Adding edge:  -> 
In AddEdge: 0x556861bf1240, 0x556861bf1800, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %35, ptr %39, align 4
Check LatCell: 0
In Meet:   store i32 %35, ptr %39, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %35, ptr %39, align 4
VisitInstr:   br label %44
BranchInst:   br label %44
In AddEdge: 0x556861bf16c0, 0x556861bf1bb0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %46 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %46 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = load i32, ptr %3, align 4
VisitInstr:   store i32 %46, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %46, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %46, ptr %9, align 4
VisitInstr:   store i32 0, ptr %12, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %12, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %12, align 4
VisitInstr:   store i64 0, ptr %8, align 8
Check LatCell: 0
In Meet:   store i64 0, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 0, ptr %8, align 8
VisitInstr:   %47 = load i32, ptr %12, align 4
Check LatCell: 0
In Meet:   %47 = load i32, ptr %12, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load i32, ptr %12, align 4
VisitInstr:   %48 = icmp slt i32 %47, 30
CmpInst:   %48 = icmp slt i32 %47, 30
Check LatCell: 0
In Meet:   %48 = icmp slt i32 %47, 30, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = icmp slt i32 %47, 30
VisitInstr:   %49 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %49 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load i32, ptr %10, align 4
VisitInstr:   %50 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %50 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = load i32, ptr %3, align 4
VisitInstr:   %51 = icmp slt i32 %49, %50
CmpInst:   %51 = icmp slt i32 %49, %50
Check LatCell: 0
In Meet:   %51 = icmp slt i32 %49, %50, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = icmp slt i32 %49, %50
VisitInstr:   %52 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %52 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load ptr, ptr %5, align 8
VisitInstr:   %53 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %53 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load i32, ptr %10, align 4
VisitInstr:   %54 = sext i32 %53 to i64
UnaryOp:   %54 = sext i32 %53 to i64
Check LatCell: 0
In Meet:   %54 = sext i32 %53 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = sext i32 %53 to i64
VisitInstr:   %55 = getelementptr inbounds i32, ptr %52, i64 %54
GetElementPtr:   %55 = getelementptr inbounds i32, ptr %52, i64 %54
Check LatCell: 0
In Meet:   %55 = getelementptr inbounds i32, ptr %52, i64 %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = getelementptr inbounds i32, ptr %52, i64 %54
VisitInstr:   %56 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %56 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load i32, ptr %10, align 4
VisitInstr:   %57 = add nsw i32 %56, 1
BinaryOp:   %57 = add nsw i32 %56, 1
Check LatCell: 0
In Meet:   %57 = add nsw i32 %56, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = add nsw i32 %56, 1
VisitInstr:   %58 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %58 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = load i32, ptr %9, align 4
VisitInstr:   %59 = icmp ne i32 %58, 1
CmpInst:   %59 = icmp ne i32 %58, 1
Check LatCell: 0
In Meet:   %59 = icmp ne i32 %58, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = icmp ne i32 %58, 1
VisitInstr:   %60 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %60 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load i32, ptr %9, align 4
VisitInstr:   %61 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %61 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = load ptr, ptr %6, align 8
VisitInstr:   %62 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %62 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load i32, ptr %9, align 4
VisitInstr:   %63 = sub nsw i32 %62, 1
BinaryOp:   %63 = sub nsw i32 %62, 1
Check LatCell: 0
In Meet:   %63 = sub nsw i32 %62, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = sub nsw i32 %62, 1
VisitInstr:   %64 = sext i32 %63 to i64
UnaryOp:   %64 = sext i32 %63 to i64
Check LatCell: 0
In Meet:   %64 = sext i32 %63 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = sext i32 %63 to i64
VisitInstr:   %65 = getelementptr inbounds i32, ptr %61, i64 %64
GetElementPtr:   %65 = getelementptr inbounds i32, ptr %61, i64 %64
Check LatCell: 0
In Meet:   %65 = getelementptr inbounds i32, ptr %61, i64 %64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = getelementptr inbounds i32, ptr %61, i64 %64
VisitInstr:   %66 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %66 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load i32, ptr %9, align 4
VisitInstr:   %67 = add nsw i32 %66, -1
BinaryOp:   %67 = add nsw i32 %66, -1
Check LatCell: 0
In Meet:   %67 = add nsw i32 %66, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = add nsw i32 %66, -1
VisitInstr:   %68 = load i32, ptr %12, align 4
Check LatCell: 0
In Meet:   %68 = load i32, ptr %12, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = load i32, ptr %12, align 4
VisitInstr:   %69 = add nsw i32 %68, 1
BinaryOp:   %69 = add nsw i32 %68, 1
Check LatCell: 0
In Meet:   %69 = add nsw i32 %68, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = add nsw i32 %68, 1
VisitInstr:   %70 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %70 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = load ptr, ptr %5, align 8
VisitInstr:   %71 = getelementptr inbounds i32, ptr %70, i64 0
GetElementPtr:   %71 = getelementptr inbounds i32, ptr %70, i64 0
Check LatCell: 0
In Meet:   %71 = getelementptr inbounds i32, ptr %70, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = getelementptr inbounds i32, ptr %70, i64 0
VisitInstr:   %72 = load i32, ptr %71, align 4
Check LatCell: 0
In Meet:   %72 = load i32, ptr %71, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = load i32, ptr %71, align 4
VisitInstr:   %73 = icmp eq i32 %72, 0
CmpInst:   %73 = icmp eq i32 %72, 0
Check LatCell: 0
In Meet:   %73 = icmp eq i32 %72, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = icmp eq i32 %72, 0
VisitInstr:   %74 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %74 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = load i32, ptr %9, align 4
VisitInstr:   %75 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %75 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load i32, ptr %3, align 4
VisitInstr:   %76 = icmp eq i32 %74, %75
CmpInst:   %76 = icmp eq i32 %74, %75
Check LatCell: 0
In Meet:   %76 = icmp eq i32 %74, %75, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = icmp eq i32 %74, %75
VisitInstr:   %77 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %77 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = load ptr, ptr %5, align 8
VisitInstr:   %78 = getelementptr inbounds i32, ptr %77, i64 0
GetElementPtr:   %78 = getelementptr inbounds i32, ptr %77, i64 0
Check LatCell: 0
In Meet:   %78 = getelementptr inbounds i32, ptr %77, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = getelementptr inbounds i32, ptr %77, i64 0
VisitInstr:   %79 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %79 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = load i32, ptr %10, align 4
VisitInstr:   %80 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %80 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load i32, ptr %9, align 4
VisitInstr:   %81 = icmp slt i32 %79, %80
CmpInst:   %81 = icmp slt i32 %79, %80
Check LatCell: 0
In Meet:   %81 = icmp slt i32 %79, %80, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = icmp slt i32 %79, %80
VisitInstr:   %82 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %82 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = load i32, ptr %10, align 4
VisitInstr:   %83 = add nsw i32 %82, 1
BinaryOp:   %83 = add nsw i32 %82, 1
Check LatCell: 0
In Meet:   %83 = add nsw i32 %82, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = add nsw i32 %82, 1
VisitInstr:   %84 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %84 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = load ptr, ptr %5, align 8
VisitInstr:   %85 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %85 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = load i32, ptr %11, align 4
VisitInstr:   %86 = sext i32 %85 to i64
UnaryOp:   %86 = sext i32 %85 to i64
Check LatCell: 0
In Meet:   %86 = sext i32 %85 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = sext i32 %85 to i64
VisitInstr:   %87 = getelementptr inbounds i32, ptr %84, i64 %86
GetElementPtr:   %87 = getelementptr inbounds i32, ptr %84, i64 %86
Check LatCell: 0
In Meet:   %87 = getelementptr inbounds i32, ptr %84, i64 %86, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = getelementptr inbounds i32, ptr %84, i64 %86
VisitInstr:   %88 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %88 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = load ptr, ptr %5, align 8
VisitInstr:   %89 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %89 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = load i32, ptr %10, align 4
VisitInstr:   %90 = sext i32 %89 to i64
UnaryOp:   %90 = sext i32 %89 to i64
Check LatCell: 0
In Meet:   %90 = sext i32 %89 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = sext i32 %89 to i64
VisitInstr:   %91 = getelementptr inbounds i32, ptr %88, i64 %90
GetElementPtr:   %91 = getelementptr inbounds i32, ptr %88, i64 %90
Check LatCell: 0
In Meet:   %91 = getelementptr inbounds i32, ptr %88, i64 %90, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = getelementptr inbounds i32, ptr %88, i64 %90
VisitInstr:   %92 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %92 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = load i32, ptr %11, align 4
VisitInstr:   %93 = load i32, ptr %16, align 4
Check LatCell: 0
In Meet:   %93 = load i32, ptr %16, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = load i32, ptr %16, align 4
VisitInstr:   %94 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %94 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = load ptr, ptr %5, align 8
VisitInstr:   %95 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %95 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = load i32, ptr %9, align 4
VisitInstr:   %96 = sext i32 %95 to i64
UnaryOp:   %96 = sext i32 %95 to i64
Check LatCell: 0
In Meet:   %96 = sext i32 %95 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = sext i32 %95 to i64
VisitInstr:   %97 = getelementptr inbounds i32, ptr %94, i64 %96
GetElementPtr:   %97 = getelementptr inbounds i32, ptr %94, i64 %96
Check LatCell: 0
In Meet:   %97 = getelementptr inbounds i32, ptr %94, i64 %96, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = getelementptr inbounds i32, ptr %94, i64 %96
VisitInstr:   %98 = load ptr, ptr %6, align 8
Check LatCell: 0
In Meet:   %98 = load ptr, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = load ptr, ptr %6, align 8
VisitInstr:   %99 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %99 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = load i32, ptr %9, align 4
VisitInstr:   %100 = sext i32 %99 to i64
UnaryOp:   %100 = sext i32 %99 to i64
Check LatCell: 0
In Meet:   %100 = sext i32 %99 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = sext i32 %99 to i64
VisitInstr:   %101 = getelementptr inbounds i32, ptr %98, i64 %100
GetElementPtr:   %101 = getelementptr inbounds i32, ptr %98, i64 %100
Check LatCell: 0
In Meet:   %101 = getelementptr inbounds i32, ptr %98, i64 %100, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = getelementptr inbounds i32, ptr %98, i64 %100
VisitInstr:   %102 = load i32, ptr %9, align 4
Check LatCell: 0
In Meet:   %102 = load i32, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %102 = load i32, ptr %9, align 4
VisitInstr:   %103 = add nsw i32 %102, 1
BinaryOp:   %103 = add nsw i32 %102, 1
Check LatCell: 0
In Meet:   %103 = add nsw i32 %102, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = add nsw i32 %102, 1
VisitInstr:   %104 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %104 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = load ptr, ptr %5, align 8
VisitInstr:   %105 = load i32, ptr %13, align 4
Check LatCell: 0
In Meet:   %105 = load i32, ptr %13, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = load i32, ptr %13, align 4
VisitInstr:   %106 = sext i32 %105 to i64
UnaryOp:   %106 = sext i32 %105 to i64
Check LatCell: 0
In Meet:   %106 = sext i32 %105 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %106 = sext i32 %105 to i64
VisitInstr:   %107 = getelementptr inbounds i32, ptr %104, i64 %106
GetElementPtr:   %107 = getelementptr inbounds i32, ptr %104, i64 %106
Check LatCell: 0
In Meet:   %107 = getelementptr inbounds i32, ptr %104, i64 %106, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %107 = getelementptr inbounds i32, ptr %104, i64 %106
VisitInstr:   %108 = load i32, ptr %13, align 4
Check LatCell: 0
In Meet:   %108 = load i32, ptr %13, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %108 = load i32, ptr %13, align 4
VisitInstr:   %109 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %109 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %109 = load i32, ptr %10, align 4
VisitInstr:   %110 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %110 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %110 = load i32, ptr %3, align 4
VisitInstr:   %111 = icmp slt i32 %109, %110
CmpInst:   %111 = icmp slt i32 %109, %110
Check LatCell: 0
In Meet:   %111 = icmp slt i32 %109, %110, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = icmp slt i32 %109, %110
VisitInstr:   %112 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %112 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = load ptr, ptr %5, align 8
VisitInstr:   %113 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %113 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %113 = load i32, ptr %10, align 4
VisitInstr:   %114 = sext i32 %113 to i64
UnaryOp:   %114 = sext i32 %113 to i64
Check LatCell: 0
In Meet:   %114 = sext i32 %113 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = sext i32 %113 to i64
VisitInstr:   %115 = getelementptr inbounds i32, ptr %112, i64 %114
GetElementPtr:   %115 = getelementptr inbounds i32, ptr %112, i64 %114
Check LatCell: 0
In Meet:   %115 = getelementptr inbounds i32, ptr %112, i64 %114, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %115 = getelementptr inbounds i32, ptr %112, i64 %114
VisitInstr:   %116 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %116 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = load ptr, ptr %4, align 8
VisitInstr:   %117 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %117 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %117 = load i32, ptr %10, align 4
VisitInstr:   %118 = sext i32 %117 to i64
UnaryOp:   %118 = sext i32 %117 to i64
Check LatCell: 0
In Meet:   %118 = sext i32 %117 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = sext i32 %117 to i64
VisitInstr:   %119 = getelementptr inbounds i32, ptr %116, i64 %118
GetElementPtr:   %119 = getelementptr inbounds i32, ptr %116, i64 %118
Check LatCell: 0
In Meet:   %119 = getelementptr inbounds i32, ptr %116, i64 %118, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = getelementptr inbounds i32, ptr %116, i64 %118
VisitInstr:   %120 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %120 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = load i32, ptr %10, align 4
VisitInstr:   %121 = add nsw i32 %120, 1
BinaryOp:   %121 = add nsw i32 %120, 1
Check LatCell: 0
In Meet:   %121 = add nsw i32 %120, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = add nsw i32 %120, 1
VisitInstr:   %122 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %122 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %122 = load ptr, ptr %5, align 8
VisitInstr:   %123 = getelementptr inbounds i32, ptr %122, i64 0
GetElementPtr:   %123 = getelementptr inbounds i32, ptr %122, i64 0
Check LatCell: 0
In Meet:   %123 = getelementptr inbounds i32, ptr %122, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %123 = getelementptr inbounds i32, ptr %122, i64 0
VisitInstr:   %124 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %124 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %124 = load i32, ptr %11, align 4
VisitInstr:   %125 = sub nsw i32 %124, 1
BinaryOp:   %125 = sub nsw i32 %124, 1
Check LatCell: 0
In Meet:   %125 = sub nsw i32 %124, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = sub nsw i32 %124, 1
VisitInstr:   %126 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %126 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %126 = load i32, ptr %10, align 4
VisitInstr:   %127 = load i32, ptr %14, align 4
Check LatCell: 0
In Meet:   %127 = load i32, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %127 = load i32, ptr %14, align 4
VisitInstr:   %128 = icmp slt i32 %126, %127
CmpInst:   %128 = icmp slt i32 %126, %127
Check LatCell: 0
In Meet:   %128 = icmp slt i32 %126, %127, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %128 = icmp slt i32 %126, %127
VisitInstr:   %129 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %129 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %129 = load ptr, ptr %4, align 8
VisitInstr:   %130 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %130 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %130 = load i32, ptr %10, align 4
VisitInstr:   %131 = sext i32 %130 to i64
UnaryOp:   %131 = sext i32 %130 to i64
Check LatCell: 0
In Meet:   %131 = sext i32 %130 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %131 = sext i32 %130 to i64
VisitInstr:   %132 = getelementptr inbounds i32, ptr %129, i64 %131
GetElementPtr:   %132 = getelementptr inbounds i32, ptr %129, i64 %131
Check LatCell: 0
In Meet:   %132 = getelementptr inbounds i32, ptr %129, i64 %131, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %132 = getelementptr inbounds i32, ptr %129, i64 %131
VisitInstr:   %133 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %133 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %133 = load ptr, ptr %4, align 8
VisitInstr:   %134 = load i32, ptr %14, align 4
Check LatCell: 0
In Meet:   %134 = load i32, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %134 = load i32, ptr %14, align 4
VisitInstr:   %135 = sext i32 %134 to i64
UnaryOp:   %135 = sext i32 %134 to i64
Check LatCell: 0
In Meet:   %135 = sext i32 %134 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %135 = sext i32 %134 to i64
VisitInstr:   %136 = getelementptr inbounds i32, ptr %133, i64 %135
GetElementPtr:   %136 = getelementptr inbounds i32, ptr %133, i64 %135
Check LatCell: 0
In Meet:   %136 = getelementptr inbounds i32, ptr %133, i64 %135, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %136 = getelementptr inbounds i32, ptr %133, i64 %135
VisitInstr:   %137 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %137 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %137 = load ptr, ptr %4, align 8
VisitInstr:   %138 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %138 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %138 = load i32, ptr %10, align 4
VisitInstr:   %139 = sext i32 %138 to i64
UnaryOp:   %139 = sext i32 %138 to i64
Check LatCell: 0
In Meet:   %139 = sext i32 %138 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %139 = sext i32 %138 to i64
VisitInstr:   %140 = getelementptr inbounds i32, ptr %137, i64 %139
GetElementPtr:   %140 = getelementptr inbounds i32, ptr %137, i64 %139
Check LatCell: 0
In Meet:   %140 = getelementptr inbounds i32, ptr %137, i64 %139, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %140 = getelementptr inbounds i32, ptr %137, i64 %139
VisitInstr:   %141 = load i32, ptr %15, align 4
Check LatCell: 0
In Meet:   %141 = load i32, ptr %15, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %141 = load i32, ptr %15, align 4
VisitInstr:   %142 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %142 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %142 = load ptr, ptr %4, align 8
VisitInstr:   %143 = load i32, ptr %14, align 4
Check LatCell: 0
In Meet:   %143 = load i32, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %143 = load i32, ptr %14, align 4
VisitInstr:   %144 = sext i32 %143 to i64
UnaryOp:   %144 = sext i32 %143 to i64
Check LatCell: 0
In Meet:   %144 = sext i32 %143 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %144 = sext i32 %143 to i64
VisitInstr:   %145 = getelementptr inbounds i32, ptr %142, i64 %144
GetElementPtr:   %145 = getelementptr inbounds i32, ptr %142, i64 %144
Check LatCell: 0
In Meet:   %145 = getelementptr inbounds i32, ptr %142, i64 %144, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %145 = getelementptr inbounds i32, ptr %142, i64 %144
VisitInstr:   %146 = load i32, ptr %10, align 4
Check LatCell: 0
In Meet:   %146 = load i32, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %146 = load i32, ptr %10, align 4
VisitInstr:   %147 = add nsw i32 %146, 1
BinaryOp:   %147 = add nsw i32 %146, 1
Check LatCell: 0
In Meet:   %147 = add nsw i32 %146, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %147 = add nsw i32 %146, 1
VisitInstr:   %148 = load i32, ptr %14, align 4
Check LatCell: 0
In Meet:   %148 = load i32, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %148 = load i32, ptr %14, align 4
VisitInstr:   %149 = add nsw i32 %148, -1
BinaryOp:   %149 = add nsw i32 %148, -1
Check LatCell: 0
In Meet:   %149 = add nsw i32 %148, -1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %149 = add nsw i32 %148, -1
VisitInstr:   %150 = load i64, ptr %7, align 8
Check LatCell: 0
In Meet:   %150 = load i64, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %150 = load i64, ptr %7, align 8
VisitInstr:   %151 = add nsw i64 %150, 1
BinaryOp:   %151 = add nsw i64 %150, 1
Check LatCell: 0
In Meet:   %151 = add nsw i64 %150, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %151 = add nsw i64 %150, 1
VisitInstr:   %152 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %152 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %152 = load ptr, ptr %4, align 8
VisitInstr:   %153 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %153 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %153 = load i32, ptr %11, align 4
VisitInstr:   %154 = sext i32 %153 to i64
UnaryOp:   %154 = sext i32 %153 to i64
Check LatCell: 0
In Meet:   %154 = sext i32 %153 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %154 = sext i32 %153 to i64
VisitInstr:   %155 = getelementptr inbounds i32, ptr %152, i64 %154
GetElementPtr:   %155 = getelementptr inbounds i32, ptr %152, i64 %154
Check LatCell: 0
In Meet:   %155 = getelementptr inbounds i32, ptr %152, i64 %154, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %155 = getelementptr inbounds i32, ptr %152, i64 %154
VisitInstr:   %156 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %156 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %156 = load i32, ptr %11, align 4
VisitInstr:   %157 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %157 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %157 = load ptr, ptr %4, align 8
VisitInstr:   %158 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %158 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %158 = load i32, ptr %11, align 4
VisitInstr:   %159 = sext i32 %158 to i64
UnaryOp:   %159 = sext i32 %158 to i64
Check LatCell: 0
In Meet:   %159 = sext i32 %158 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %159 = sext i32 %158 to i64
VisitInstr:   %160 = getelementptr inbounds i32, ptr %157, i64 %159
GetElementPtr:   %160 = getelementptr inbounds i32, ptr %157, i64 %159
Check LatCell: 0
In Meet:   %160 = getelementptr inbounds i32, ptr %157, i64 %159, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %160 = getelementptr inbounds i32, ptr %157, i64 %159
VisitInstr:   %161 = load i32, ptr %14, align 4
Check LatCell: 0
In Meet:   %161 = load i32, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %161 = load i32, ptr %14, align 4
VisitInstr:   %162 = load i32, ptr %11, align 4
Check LatCell: 0
In Meet:   %162 = load i32, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %162 = load i32, ptr %11, align 4
VisitInstr:   %163 = icmp ne i32 %162, 0
CmpInst:   %163 = icmp ne i32 %162, 0
Check LatCell: 0
In Meet:   %163 = icmp ne i32 %162, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %163 = icmp ne i32 %162, 0
VisitInstr:   %164 = load i64, ptr %8, align 8
Check LatCell: 0
In Meet:   %164 = load i64, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %164 = load i64, ptr %8, align 8
VisitInstr:   %165 = load i64, ptr %7, align 8
Check LatCell: 0
In Meet:   %165 = load i64, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %165 = load i64, ptr %7, align 8
VisitInstr:   %166 = icmp slt i64 %164, %165
CmpInst:   %166 = icmp slt i64 %164, %165
Check LatCell: 0
In Meet:   %166 = icmp slt i64 %164, %165, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %166 = icmp slt i64 %164, %165
VisitInstr:   %167 = load i64, ptr %7, align 8
Check LatCell: 0
In Meet:   %167 = load i64, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %167 = load i64, ptr %7, align 8
VisitInstr:   br label %168
BranchInst:   br label %168
In AddEdge: 0x556861bf1710, 0x556861bf6330, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %41, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 %41, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %41, ptr %10, align 4
VisitInstr:   br label %42, !llvm.loop !6
BranchInst:   br label %42, !llvm.loop !6
In AddEdge: 0x556861bf1b40, 0x556861bf1db0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %48, label %169, label %178
BranchInst:   br i1 %48, label %169, label %178
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf62c0, 0x556861bf65c0, 0
Adding edge:  -> 
In AddEdge: 0x556861bf62c0, 0x556861bf65c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 0, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %10, align 4
VisitInstr:   br label %170
BranchInst:   br label %170
In AddEdge: 0x556861bf6480, 0x556861bf6710, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %179
BranchInst:   br label %179
In AddEdge: 0x556861bf64d0, 0x556861bf7990, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %51, label %171, label %176
BranchInst:   br i1 %51, label %171, label %176
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf66a0, 0x556861bf6a10, 0
Adding edge:  -> 
In AddEdge: 0x556861bf66a0, 0x556861bf6a10, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %59, label %180, label %182
BranchInst:   br i1 %59, label %180, label %182
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf7920, 0x556861bf7be0, 0
Adding edge:  -> 
In AddEdge: 0x556861bf7920, 0x556861bf7be0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %172 = load i32, ptr %55, align 4
Check LatCell: 0
In Meet:   %172 = load i32, ptr %55, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %172 = load i32, ptr %55, align 4
VisitInstr:   %173 = add nsw i32 1, %172
BinaryOp:   %173 = add nsw i32 1, %172
Check LatCell: 0
In Meet:   %173 = add nsw i32 1, %172, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %173 = add nsw i32 1, %172
VisitInstr:   %174 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %173)
Check LatCell: 0
In Meet:   %174 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %173), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %174 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %173)
VisitInstr:   br label %175
BranchInst:   br label %175
In AddEdge: 0x556861bf68d0, 0x556861bf6ed0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %177 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)
Check LatCell: 0
In Meet:   %177 = call i32 (ptr, ...) @printf(ptr noundef @.str.2), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %177 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)
VisitInstr:   store i32 %69, ptr %12, align 4
Check LatCell: 0
In Meet:   store i32 %69, ptr %12, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %69, ptr %12, align 4
VisitInstr:   br label %178
BranchInst:   br label %178
In AddEdge: 0x556861bf6920, 0x556861bf78d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %60, ptr %65, align 4
Check LatCell: 0
In Meet:   store i32 %60, ptr %65, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %60, ptr %65, align 4
VisitInstr:   br label %181
BranchInst:   br label %181
In AddEdge: 0x556861bf7ae0, 0x556861bf8020, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %73, label %205, label %183
BranchInst:   br i1 %73, label %205, label %183
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf7b30, 0x556861bf86f0, 0
Adding edge:  -> 
In AddEdge: 0x556861bf7b30, 0x556861bf86f0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %57, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 %57, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %57, ptr %10, align 4
VisitInstr:   br label %170, !llvm.loop !8
BranchInst:   br label %170, !llvm.loop !8
In AddEdge: 0x556861bf6e60, 0x556861bf74e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %67, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %67, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %67, ptr %9, align 4
VisitInstr:   br label %179, !llvm.loop !9
BranchInst:   br label %179, !llvm.loop !9
In AddEdge: 0x556861bf7fb0, 0x556861bf8250, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %206
BranchInst:   br label %206
In AddEdge: 0x556861bf85b0, 0x556861bfcbe0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %184 = load i32, ptr %107, align 4
Check LatCell: 0
In Meet:   %184 = load i32, ptr %107, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %184 = load i32, ptr %107, align 4
VisitInstr:   %185 = icmp eq i32 %184, %108
CmpInst:   %185 = icmp eq i32 %184, %108
Check LatCell: 0
In Meet:   %185 = icmp eq i32 %184, %108, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %185 = icmp eq i32 %184, %108
VisitInstr:   br i1 %185, label %205, label %186
BranchInst:   br i1 %185, label %205, label %186
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf8600, 0x556861bf8b50, 0
Adding edge:  -> 
In AddEdge: 0x556861bf8600, 0x556861bf8b50, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %76, label %207, label %209
BranchInst:   br i1 %76, label %207, label %209
In BranchInst: -1, 0x0
In AddEdge: 0x556861bfcb70, 0x556861bfcea0, 0
Adding edge:  -> 
In AddEdge: 0x556861bfcb70, 0x556861bfcea0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i64 0, ptr %7, align 8
Check LatCell: 0
In Meet:   store i64 0, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 0, ptr %7, align 8
VisitInstr:   store i32 1, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 1, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 1, ptr %10, align 4
VisitInstr:   br label %187
BranchInst:   br label %187
In AddEdge: 0x556861bf8aa0, 0x556861bf8d30, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %208 = load i64, ptr %8, align 8
Check LatCell: 0
In Meet:   %208 = load i64, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %208 = load i64, ptr %8, align 8
VisitInstr:   store i64 %208, ptr %2, align 8
Check LatCell: 0
In Meet:   store i64 %208, ptr %2, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 %208, ptr %2, align 8
VisitInstr:   br label %221
BranchInst:   br label %221
In AddEdge: 0x556861bfcda0, 0x556861bfd010, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %210 = load i32, ptr %78, align 4
Check LatCell: 0
In Meet:   %210 = load i32, ptr %78, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %210 = load i32, ptr %78, align 4
VisitInstr:   store i32 %210, ptr %16, align 4
Check LatCell: 0
In Meet:   store i32 %210, ptr %16, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %210, ptr %16, align 4
VisitInstr:   store i32 0, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %10, align 4
VisitInstr:   br label %211
BranchInst:   br label %211
In AddEdge: 0x556861bfcdf0, 0x556861bfd370, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %111, label %188, label %191
BranchInst:   br i1 %111, label %188, label %191
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf8cc0, 0x556861bf9030, 0
Adding edge:  -> 
In AddEdge: 0x556861bf8cc0, 0x556861bf9030, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %81, label %212, label %214
BranchInst:   br i1 %81, label %212, label %214
In BranchInst: -1, 0x0
In AddEdge: 0x556861bfd300, 0x556861bfd630, 0
Adding edge:  -> 
In AddEdge: 0x556861bfd300, 0x556861bfd630, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %189 = load i32, ptr %115, align 4
Check LatCell: 0
In Meet:   %189 = load i32, ptr %115, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %189 = load i32, ptr %115, align 4
VisitInstr:   store i32 %189, ptr %119, align 4
Check LatCell: 0
In Meet:   store i32 %189, ptr %119, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %189, ptr %119, align 4
VisitInstr:   br label %190
BranchInst:   br label %190
In AddEdge: 0x556861bf8ef0, 0x556861bf95d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %192 = load i32, ptr %123, align 4
Check LatCell: 0
In Meet:   %192 = load i32, ptr %123, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %192 = load i32, ptr %123, align 4
VisitInstr:   store i32 %192, ptr %11, align 4
Check LatCell: 0
In Meet:   store i32 %192, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %192, ptr %11, align 4
VisitInstr:   %193 = load i32, ptr %155, align 4
Check LatCell: 0
In Meet:   %193 = load i32, ptr %155, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %193 = load i32, ptr %155, align 4
VisitInstr:   br label %194
BranchInst:   br label %194
In AddEdge: 0x556861bf8f40, 0x556861bf9ba0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %83, ptr %11, align 4
Check LatCell: 0
In Meet:   store i32 %83, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %83, ptr %11, align 4
VisitInstr:   %213 = load i32, ptr %87, align 4
Check LatCell: 0
In Meet:   %213 = load i32, ptr %87, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %213 = load i32, ptr %87, align 4
VisitInstr:   store i32 %213, ptr %91, align 4
Check LatCell: 0
In Meet:   store i32 %213, ptr %91, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %213, ptr %91, align 4
VisitInstr:   store i32 %92, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 %92, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %92, ptr %10, align 4
VisitInstr:   br label %211, !llvm.loop !13
BranchInst:   br label %211, !llvm.loop !13
In AddEdge: 0x556861bfd530, 0x556861bfde10, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %93, ptr %97, align 4
Check LatCell: 0
In Meet:   store i32 %93, ptr %97, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %93, ptr %97, align 4
VisitInstr:   %215 = load i32, ptr %101, align 4
Check LatCell: 0
In Meet:   %215 = load i32, ptr %101, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %215 = load i32, ptr %101, align 4
VisitInstr:   %216 = sub nsw i32 %215, 1
BinaryOp:   %216 = sub nsw i32 %215, 1
Check LatCell: 0
In Meet:   %216 = sub nsw i32 %215, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %216 = sub nsw i32 %215, 1
VisitInstr:   store i32 %216, ptr %101, align 4
Check LatCell: 0
In Meet:   store i32 %216, ptr %101, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %216, ptr %101, align 4
VisitInstr:   %217 = icmp sgt i32 %216, 0
CmpInst:   %217 = icmp sgt i32 %216, 0
Check LatCell: 0
In Meet:   %217 = icmp sgt i32 %216, 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %217 = icmp sgt i32 %216, 0
VisitInstr:   br i1 %217, label %218, label %219
BranchInst:   br i1 %217, label %218, label %219
In BranchInst: -1, 0x0
In AddEdge: 0x556861bfd580, 0x556861bfe760, 0
Adding edge:  -> 
In AddEdge: 0x556861bfd580, 0x556861bfe760, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %121, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 %121, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %121, ptr %10, align 4
VisitInstr:   br label %187, !llvm.loop !10
BranchInst:   br label %187, !llvm.loop !10
In AddEdge: 0x556861bf9560, 0x556861bf97d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 1, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 1, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 1, ptr %10, align 4
VisitInstr:   store i32 %125, ptr %14, align 4
Check LatCell: 0
In Meet:   store i32 %125, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %125, ptr %14, align 4
VisitInstr:   br label %195
BranchInst:   br label %195
In AddEdge: 0x556861bf9b30, 0x556861bf9e80, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %220
BranchInst:   br label %220
In AddEdge: 0x556861bfe620, 0x556861bfe820, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %103, ptr %9, align 4
Check LatCell: 0
In Meet:   store i32 %103, ptr %9, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %103, ptr %9, align 4
VisitInstr:   br label %206
BranchInst:   br label %206
In AddEdge: 0x556861bfe670, 0x556861bfea20, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %128, label %196, label %200
BranchInst:   br i1 %128, label %196, label %200
In BranchInst: -1, 0x0
In AddEdge: 0x556861bf9e10, 0x556861bfa180, 0
Adding edge:  -> 
In AddEdge: 0x556861bf9e10, 0x556861bfa180, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %168
BranchInst:   br label %168
In AddEdge: 0x556861bfe7b0, 0x556861bfea90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %197 = load i32, ptr %132, align 4
Check LatCell: 0
In Meet:   %197 = load i32, ptr %132, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %197 = load i32, ptr %132, align 4
VisitInstr:   store i32 %197, ptr %15, align 4
Check LatCell: 0
In Meet:   store i32 %197, ptr %15, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %197, ptr %15, align 4
VisitInstr:   %198 = load i32, ptr %136, align 4
Check LatCell: 0
In Meet:   %198 = load i32, ptr %136, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %198 = load i32, ptr %136, align 4
VisitInstr:   store i32 %198, ptr %140, align 4
Check LatCell: 0
In Meet:   store i32 %198, ptr %140, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %198, ptr %140, align 4
VisitInstr:   store i32 %141, ptr %145, align 4
Check LatCell: 0
In Meet:   store i32 %141, ptr %145, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %141, ptr %145, align 4
VisitInstr:   br label %199
BranchInst:   br label %199
In AddEdge: 0x556861bfa040, 0x556861bfb510, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i64 %151, ptr %7, align 8
Check LatCell: 0
In Meet:   store i64 %151, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 %151, ptr %7, align 8
VisitInstr:   store i32 %193, ptr %14, align 4
Check LatCell: 0
In Meet:   store i32 %193, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %193, ptr %14, align 4
VisitInstr:   store i32 %156, ptr %160, align 4
Check LatCell: 0
In Meet:   store i32 %156, ptr %160, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %156, ptr %160, align 4
VisitInstr:   store i32 %161, ptr %11, align 4
Check LatCell: 0
In Meet:   store i32 %161, ptr %11, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %161, ptr %11, align 4
VisitInstr:   br label %201
BranchInst:   br label %201
In AddEdge: 0x556861bfa090, 0x556861bfc300, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %147, ptr %10, align 4
Check LatCell: 0
In Meet:   store i32 %147, ptr %10, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %147, ptr %10, align 4
VisitInstr:   store i32 %149, ptr %14, align 4
Check LatCell: 0
In Meet:   store i32 %149, ptr %14, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %149, ptr %14, align 4
VisitInstr:   br label %195, !llvm.loop !11
BranchInst:   br label %195, !llvm.loop !11
In AddEdge: 0x556861bfb4a0, 0x556861bfb8a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %163, label %194, label %202, !llvm.loop !12
BranchInst:   br i1 %163, label %194, label %202, !llvm.loop !12
In BranchInst: -1, 0x0
In AddEdge: 0x556861bfc290, 0x556861bfc500, 0
Adding edge:  -> 
In AddEdge: 0x556861bfc290, 0x556861bfc500, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %166, label %203, label %204
BranchInst:   br i1 %166, label %203, label %204
In BranchInst: -1, 0x0
In AddEdge: 0x556861bfc450, 0x556861bfc940, 0
Adding edge:  -> 
In AddEdge: 0x556861bfc450, 0x556861bfc940, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i64 %167, ptr %8, align 8
Check LatCell: 0
In Meet:   store i64 %167, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i64 %167, ptr %8, align 8
VisitInstr:   br label %204
BranchInst:   br label %204
In AddEdge: 0x556861bfc800, 0x556861bfcab0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %205
BranchInst:   br label %205
In AddEdge: 0x556861bfc850, 0x556861bfcb20, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %205
BranchInst:   br label %205
In AddEdge: 0x556861bfc850, 0x556861bfcb20, 0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
