Running complicated test: n-body.c
UnitSCCP running on advance
Visiting BB: 
VisitInstr:   br label %4
BranchInst:   br label %4
In AddEdge: 0x5630a703bf00, 0x5630a703f7b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
PHI:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
VisitInstr:   %5 = icmp slt i32 %.01, %0
CmpInst:   %5 = icmp slt i32 %.01, %0
Check LatCell: 0
In Meet:   %5 = icmp slt i32 %.01, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = icmp slt i32 %.01, %0
VisitInstr:   br i1 %5, label %6, label %71
BranchInst:   br i1 %5, label %6, label %71
In BranchInst: -1, 0x0
In AddEdge: 0x5630a703f200, 0x5630a703fa20, 0
Adding edge:  -> 
In AddEdge: 0x5630a703f200, 0x5630a703fa20, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %7 = zext i32 %.01 to i64
UnaryOp:   %7 = zext i32 %.01 to i64
Check LatCell: 0
In Meet:   %7 = zext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a7046170)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %7 = zext i32 %.01 to i64
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
GetElementPtr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
VisitInstr:   br label %9
BranchInst:   br label %9
In AddEdge: 0x5630a703f8e0, 0x5630a703fe60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
PHI:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
VisitInstr:   %72 = icmp slt i32 %.1, %0
CmpInst:   %72 = icmp slt i32 %.1, %0
Check LatCell: 0
In Meet:   %72 = icmp slt i32 %.1, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = icmp slt i32 %.1, %0
VisitInstr:   br i1 %72, label %73, label %91
BranchInst:   br i1 %72, label %73, label %91
In BranchInst: -1, 0x0
In AddEdge: 0x5630a7046550, 0x5630a70468c0, 0
Adding edge:  -> 
In AddEdge: 0x5630a7046550, 0x5630a70468c0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
PHI:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
VisitInstr:   %.0 = add nuw nsw i32 %.0.in, 1
BinaryOp:   %.0 = add nuw nsw i32 %.0.in, 1
Check LatCell: 0
In Meet:   %.0 = add nuw nsw i32 %.0.in, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %.0 = add nuw nsw i32 %.0.in, 1
VisitInstr:   %10 = icmp slt i32 %.0, %0
CmpInst:   %10 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %10 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %10, label %11, label %69
BranchInst:   br i1 %10, label %11, label %69
In BranchInst: -1, 0x0
In AddEdge: 0x5630a703fdf0, 0x5630a7040160, 0
Adding edge:  -> 
In AddEdge: 0x5630a703fdf0, 0x5630a7040160, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %74 = zext i32 %.1 to i64
UnaryOp:   %74 = zext i32 %.1 to i64
Check LatCell: 0
In Meet:   %74 = zext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a7046170)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %74 = zext i32 %.1 to i64
VisitInstr:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
GetElementPtr:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
Check LatCell: 0
In Meet:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
VisitInstr:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
GetElementPtr:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
Check LatCell: 0
In Meet:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
VisitInstr:   %77 = load double, ptr %76, align 8
Check LatCell: 0
In Meet:   %77 = load double, ptr %76, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = load double, ptr %76, align 8
VisitInstr:   %78 = load double, ptr %75, align 8
Check LatCell: 0
In Meet:   %78 = load double, ptr %75, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = load double, ptr %75, align 8
VisitInstr:   %79 = call double @llvm.fmuladd.f64(double %2, double %77, double %78)
Check LatCell: 0
In Meet:   %79 = call double @llvm.fmuladd.f64(double %2, double %77, double %78), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = call double @llvm.fmuladd.f64(double %2, double %77, double %78)
VisitInstr:   store double %79, ptr %75, align 8
Check LatCell: 0
In Meet:   store double %79, ptr %75, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %79, ptr %75, align 8
VisitInstr:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
GetElementPtr:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
Check LatCell: 0
In Meet:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
VisitInstr:   %81 = load double, ptr %80, align 8
Check LatCell: 0
In Meet:   %81 = load double, ptr %80, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = load double, ptr %80, align 8
VisitInstr:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
GetElementPtr:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
VisitInstr:   %83 = load double, ptr %82, align 8
Check LatCell: 0
In Meet:   %83 = load double, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = load double, ptr %82, align 8
VisitInstr:   %84 = call double @llvm.fmuladd.f64(double %2, double %81, double %83)
Check LatCell: 0
In Meet:   %84 = call double @llvm.fmuladd.f64(double %2, double %81, double %83), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = call double @llvm.fmuladd.f64(double %2, double %81, double %83)
VisitInstr:   store double %84, ptr %82, align 8
Check LatCell: 0
In Meet:   store double %84, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %84, ptr %82, align 8
VisitInstr:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
GetElementPtr:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
Check LatCell: 0
In Meet:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
VisitInstr:   %86 = load double, ptr %85, align 8
Check LatCell: 0
In Meet:   %86 = load double, ptr %85, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = load double, ptr %85, align 8
VisitInstr:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
GetElementPtr:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
Check LatCell: 0
In Meet:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
VisitInstr:   %88 = load double, ptr %87, align 8
Check LatCell: 0
In Meet:   %88 = load double, ptr %87, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = load double, ptr %87, align 8
VisitInstr:   %89 = call double @llvm.fmuladd.f64(double %2, double %86, double %88)
Check LatCell: 0
In Meet:   %89 = call double @llvm.fmuladd.f64(double %2, double %86, double %88), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = call double @llvm.fmuladd.f64(double %2, double %86, double %88)
VisitInstr:   store double %89, ptr %87, align 8
Check LatCell: 0
In Meet:   store double %89, ptr %87, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %89, ptr %87, align 8
VisitInstr:   %90 = add nuw nsw i32 %.1, 1
BinaryOp:   %90 = add nuw nsw i32 %.1, 1
Check LatCell: 0
In Meet:   %90 = add nuw nsw i32 %.1, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %90 = add nuw nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
VisitInstr:   br label %71, !llvm.loop !9
BranchInst:   br label %71, !llvm.loop !9
In AddEdge: 0x5630a7046780, 0x5630a7047e50, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %12 = zext i32 %.0 to i64
UnaryOp:   %12 = zext i32 %.0 to i64
Check LatCell: 0
In Meet:   %12 = zext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a70461b0)
Lat2.second: i32 zext (i32 1 to i32)
Meet:   %12 = zext i32 %.0 to i64
VisitInstr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
GetElementPtr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
VisitInstr:   %14 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %8, align 8
VisitInstr:   %15 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %15 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = load double, ptr %13, align 8
VisitInstr:   %16 = fsub double %14, %15
BinaryOp:   %16 = fsub double %14, %15
Check LatCell: 0
In Meet:   %16 = fsub double %14, %15, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = fsub double %14, %15
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
GetElementPtr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
GetElementPtr:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
Check LatCell: 0
In Meet:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
VisitInstr:   %20 = load double, ptr %19, align 8
Check LatCell: 0
In Meet:   %20 = load double, ptr %19, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = load double, ptr %19, align 8
VisitInstr:   %21 = fsub double %18, %20
BinaryOp:   %21 = fsub double %18, %20
Check LatCell: 0
In Meet:   %21 = fsub double %18, %20, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = fsub double %18, %20
VisitInstr:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
GetElementPtr:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
Check LatCell: 0
In Meet:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
VisitInstr:   %23 = load double, ptr %22, align 8
Check LatCell: 0
In Meet:   %23 = load double, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load double, ptr %22, align 8
VisitInstr:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
GetElementPtr:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
Check LatCell: 0
In Meet:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
VisitInstr:   %25 = load double, ptr %24, align 8
Check LatCell: 0
In Meet:   %25 = load double, ptr %24, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = load double, ptr %24, align 8
VisitInstr:   %26 = fsub double %23, %25
BinaryOp:   %26 = fsub double %23, %25
Check LatCell: 0
In Meet:   %26 = fsub double %23, %25, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = fsub double %23, %25
VisitInstr:   %27 = fmul double %21, %21
BinaryOp:   %27 = fmul double %21, %21
Check LatCell: 0
In Meet:   %27 = fmul double %21, %21, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = fmul double %21, %21
VisitInstr:   %28 = call double @llvm.fmuladd.f64(double %16, double %16, double %27)
Check LatCell: 0
In Meet:   %28 = call double @llvm.fmuladd.f64(double %16, double %16, double %27), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = call double @llvm.fmuladd.f64(double %16, double %16, double %27)
VisitInstr:   %29 = call double @llvm.fmuladd.f64(double %26, double %26, double %28)
Check LatCell: 0
In Meet:   %29 = call double @llvm.fmuladd.f64(double %26, double %26, double %28), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = call double @llvm.fmuladd.f64(double %26, double %26, double %28)
VisitInstr:   %30 = call double @sqrt(double noundef %29) #4
Check LatCell: 0
In Meet:   %30 = call double @sqrt(double noundef %29) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = call double @sqrt(double noundef %29) #4
VisitInstr:   %31 = fmul double %30, %30
BinaryOp:   %31 = fmul double %30, %30
Check LatCell: 0
In Meet:   %31 = fmul double %30, %30, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = fmul double %30, %30
VisitInstr:   %32 = fmul double %31, %30
BinaryOp:   %32 = fmul double %31, %30
Check LatCell: 0
In Meet:   %32 = fmul double %31, %30, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = fmul double %31, %30
VisitInstr:   %33 = fdiv double %2, %32
BinaryOp:   %33 = fdiv double %2, %32
Check LatCell: 0
In Meet:   %33 = fdiv double %2, %32, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = fdiv double %2, %32
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
GetElementPtr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
VisitInstr:   %35 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %35 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load double, ptr %34, align 8
VisitInstr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
GetElementPtr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
VisitInstr:   %37 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %37 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = load double, ptr %36, align 8
VisitInstr:   %38 = fneg double %16
UnaryOp:   %38 = fneg double %16
Check LatCell: 0
In Meet:   %38 = fneg double %16, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = fneg double %16
VisitInstr:   %39 = fmul double %35, %38
BinaryOp:   %39 = fmul double %35, %38
Check LatCell: 0
In Meet:   %39 = fmul double %35, %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = fmul double %35, %38
VisitInstr:   %40 = call double @llvm.fmuladd.f64(double %39, double %33, double %37)
Check LatCell: 0
In Meet:   %40 = call double @llvm.fmuladd.f64(double %39, double %33, double %37), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = call double @llvm.fmuladd.f64(double %39, double %33, double %37)
VisitInstr:   store double %40, ptr %36, align 8
Check LatCell: 0
In Meet:   store double %40, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %40, ptr %36, align 8
VisitInstr:   %41 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %41 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = load double, ptr %34, align 8
VisitInstr:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
GetElementPtr:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
VisitInstr:   %43 = load double, ptr %42, align 8
Check LatCell: 0
In Meet:   %43 = load double, ptr %42, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = load double, ptr %42, align 8
VisitInstr:   %44 = fneg double %21
UnaryOp:   %44 = fneg double %21
Check LatCell: 0
In Meet:   %44 = fneg double %21, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = fneg double %21
VisitInstr:   %45 = fmul double %41, %44
BinaryOp:   %45 = fmul double %41, %44
Check LatCell: 0
In Meet:   %45 = fmul double %41, %44, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = fmul double %41, %44
VisitInstr:   %46 = call double @llvm.fmuladd.f64(double %45, double %33, double %43)
Check LatCell: 0
In Meet:   %46 = call double @llvm.fmuladd.f64(double %45, double %33, double %43), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = call double @llvm.fmuladd.f64(double %45, double %33, double %43)
VisitInstr:   store double %46, ptr %42, align 8
Check LatCell: 0
In Meet:   store double %46, ptr %42, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %46, ptr %42, align 8
VisitInstr:   %47 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %47 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load double, ptr %34, align 8
VisitInstr:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
GetElementPtr:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
Check LatCell: 0
In Meet:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
VisitInstr:   %49 = load double, ptr %48, align 8
Check LatCell: 0
In Meet:   %49 = load double, ptr %48, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load double, ptr %48, align 8
VisitInstr:   %50 = fneg double %26
UnaryOp:   %50 = fneg double %26
Check LatCell: 0
In Meet:   %50 = fneg double %26, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = fneg double %26
VisitInstr:   %51 = fmul double %47, %50
BinaryOp:   %51 = fmul double %47, %50
Check LatCell: 0
In Meet:   %51 = fmul double %47, %50, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = fmul double %47, %50
VisitInstr:   %52 = call double @llvm.fmuladd.f64(double %51, double %33, double %49)
Check LatCell: 0
In Meet:   %52 = call double @llvm.fmuladd.f64(double %51, double %33, double %49), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = call double @llvm.fmuladd.f64(double %51, double %33, double %49)
VisitInstr:   store double %52, ptr %48, align 8
Check LatCell: 0
In Meet:   store double %52, ptr %48, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %52, ptr %48, align 8
VisitInstr:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
GetElementPtr:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
Check LatCell: 0
In Meet:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
VisitInstr:   %54 = load double, ptr %53, align 8
Check LatCell: 0
In Meet:   %54 = load double, ptr %53, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = load double, ptr %53, align 8
VisitInstr:   %55 = fmul double %16, %54
BinaryOp:   %55 = fmul double %16, %54
Check LatCell: 0
In Meet:   %55 = fmul double %16, %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = fmul double %16, %54
VisitInstr:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
GetElementPtr:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
Check LatCell: 0
In Meet:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
VisitInstr:   %57 = load double, ptr %56, align 8
Check LatCell: 0
In Meet:   %57 = load double, ptr %56, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = load double, ptr %56, align 8
VisitInstr:   %58 = call double @llvm.fmuladd.f64(double %55, double %33, double %57)
Check LatCell: 0
In Meet:   %58 = call double @llvm.fmuladd.f64(double %55, double %33, double %57), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = call double @llvm.fmuladd.f64(double %55, double %33, double %57)
VisitInstr:   store double %58, ptr %56, align 8
Check LatCell: 0
In Meet:   store double %58, ptr %56, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %58, ptr %56, align 8
VisitInstr:   %59 = load double, ptr %53, align 8
Check LatCell: 0
In Meet:   %59 = load double, ptr %53, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = load double, ptr %53, align 8
VisitInstr:   %60 = fmul double %21, %59
BinaryOp:   %60 = fmul double %21, %59
Check LatCell: 0
In Meet:   %60 = fmul double %21, %59, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = fmul double %21, %59
VisitInstr:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
GetElementPtr:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
Check LatCell: 0
In Meet:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
VisitInstr:   %62 = load double, ptr %61, align 8
Check LatCell: 0
In Meet:   %62 = load double, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load double, ptr %61, align 8
VisitInstr:   %63 = call double @llvm.fmuladd.f64(double %60, double %33, double %62)
Check LatCell: 0
In Meet:   %63 = call double @llvm.fmuladd.f64(double %60, double %33, double %62), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = call double @llvm.fmuladd.f64(double %60, double %33, double %62)
VisitInstr:   store double %63, ptr %61, align 8
Check LatCell: 0
In Meet:   store double %63, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %63, ptr %61, align 8
VisitInstr:   %64 = load double, ptr %53, align 8
Check LatCell: 0
In Meet:   %64 = load double, ptr %53, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = load double, ptr %53, align 8
VisitInstr:   %65 = fmul double %26, %64
BinaryOp:   %65 = fmul double %26, %64
Check LatCell: 0
In Meet:   %65 = fmul double %26, %64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = fmul double %26, %64
VisitInstr:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
GetElementPtr:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
Check LatCell: 0
In Meet:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
VisitInstr:   %67 = load double, ptr %66, align 8
Check LatCell: 0
In Meet:   %67 = load double, ptr %66, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = load double, ptr %66, align 8
VisitInstr:   %68 = call double @llvm.fmuladd.f64(double %65, double %33, double %67)
Check LatCell: 0
In Meet:   %68 = call double @llvm.fmuladd.f64(double %65, double %33, double %67), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = call double @llvm.fmuladd.f64(double %65, double %33, double %67)
VisitInstr:   store double %68, ptr %66, align 8
Check LatCell: 0
In Meet:   store double %68, ptr %66, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %68, ptr %66, align 8
VisitInstr:   br label %9, !llvm.loop !6
BranchInst:   br label %9, !llvm.loop !6
In AddEdge: 0x5630a7040020, 0x5630a70455a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %70 = add nuw nsw i32 %.01, 1
BinaryOp:   %70 = add nuw nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %70 = add nuw nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %70 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
VisitInstr:   br label %4, !llvm.loop !8
BranchInst:   br label %4, !llvm.loop !8
In AddEdge: 0x5630a7046100, 0x5630a7046370, 0
Adding edge:  -> 
Visiting SSA:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
VisitInstr:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
PHI:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
PHI LatOp: 0, 0x5630a703f1d0
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 1
In Meet:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
Adding SSA:   %74 = zext i32 %.1 to i64
Adding SSA:   %90 = add nuw nsw i32 %.1, 1
Adding SSA:   %72 = icmp slt i32 %.1, %0
Visiting SSA:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
PHI:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
PHI LatOp: 0, 0x5630a703e800
PHI LatOp: 0, 0x5630a703f1d0
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
Adding SSA:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
Adding SSA:   %7 = zext i32 %.01 to i64
Adding SSA:   %70 = add nuw nsw i32 %.01, 1
Adding SSA:   %5 = icmp slt i32 %.01, %0
Visiting SSA:   %74 = zext i32 %.1 to i64
VisitInstr:   %74 = zext i32 %.1 to i64
UnaryOp:   %74 = zext i32 %.1 to i64
Check LatCell: 1
In Meet:   %74 = zext i32 %.1 to i64, Lat1: (0, 0x5630a7046170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %74 = zext i32 %.1 to i64
Adding SSA:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
Adding SSA:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
Adding SSA:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
Adding SSA:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
Adding SSA:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
Adding SSA:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
Visiting SSA:   %90 = add nuw nsw i32 %.1, 1
VisitInstr:   %90 = add nuw nsw i32 %.1, 1
BinaryOp:   %90 = add nuw nsw i32 %.1, 1
Check LatCell: 1
In Meet:   %90 = add nuw nsw i32 %.1, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %90 = add nuw nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
Visiting SSA:   %72 = icmp slt i32 %.1, %0
VisitInstr:   %72 = icmp slt i32 %.1, %0
Visiting SSA:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
VisitInstr:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
PHI:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
Adding SSA:   %.0 = add nuw nsw i32 %.0.in, 1
Visiting SSA:   %7 = zext i32 %.01 to i64
VisitInstr:   %7 = zext i32 %.01 to i64
UnaryOp:   %7 = zext i32 %.01 to i64
Check LatCell: 1
In Meet:   %7 = zext i32 %.01 to i64, Lat1: (0, 0x5630a7046170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %7 = zext i32 %.01 to i64
Adding SSA:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
Adding SSA:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
Adding SSA:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
Adding SSA:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
Adding SSA:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
Adding SSA:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
Adding SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Visiting SSA:   %70 = add nuw nsw i32 %.01, 1
VisitInstr:   %70 = add nuw nsw i32 %.01, 1
BinaryOp:   %70 = add nuw nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %70 = add nuw nsw i32 %.01, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %70 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
Visiting SSA:   %5 = icmp slt i32 %.01, %0
VisitInstr:   %5 = icmp slt i32 %.01, %0
Visiting SSA:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
VisitInstr:   %87 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 2
Visiting SSA:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
VisitInstr:   %85 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 5
Visiting SSA:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
VisitInstr:   %82 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 1
Visiting SSA:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
VisitInstr:   %80 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 4
Visiting SSA:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
VisitInstr:   %76 = getelementptr inbounds %struct.planet, ptr %1, i64 %74, i32 3
Visiting SSA:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
VisitInstr:   %75 = getelementptr inbounds %struct.planet, ptr %1, i64 %74
Visiting SSA:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
VisitInstr:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
Visiting SSA:   %.0 = add nuw nsw i32 %.0.in, 1
VisitInstr:   %.0 = add nuw nsw i32 %.0.in, 1
BinaryOp:   %.0 = add nuw nsw i32 %.0.in, 1
Check LatCell: 1
In Meet:   %.0 = add nuw nsw i32 %.0.in, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = add nuw nsw i32 %.0.in, 1
Adding SSA:   %12 = zext i32 %.0 to i64
Adding SSA:   %10 = icmp slt i32 %.0, %0
Adding SSA:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
Visiting SSA:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
VisitInstr:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
Visiting SSA:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
VisitInstr:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
Visiting SSA:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
VisitInstr:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
Visiting SSA:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
VisitInstr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
Visiting SSA:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
VisitInstr:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
Visiting SSA:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
Visiting SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Visiting SSA:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
Visiting SSA:   %12 = zext i32 %.0 to i64
VisitInstr:   %12 = zext i32 %.0 to i64
UnaryOp:   %12 = zext i32 %.0 to i64
Check LatCell: 1
In Meet:   %12 = zext i32 %.0 to i64, Lat1: (0, 0x5630a70461b0), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 1 to i32)
Meet:   %12 = zext i32 %.0 to i64
Adding SSA:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
Adding SSA:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
Adding SSA:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
Adding SSA:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
Adding SSA:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
Adding SSA:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
Adding SSA:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
Visiting SSA:   %10 = icmp slt i32 %.0, %0
VisitInstr:   %10 = icmp slt i32 %.0, %0
Visiting SSA:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
VisitInstr:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
Visiting SSA:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
VisitInstr:   %66 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 5
Visiting SSA:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
VisitInstr:   %61 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 4
Visiting SSA:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
VisitInstr:   %56 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 3
Visiting SSA:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 6
Visiting SSA:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
VisitInstr:   %24 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 2
Visiting SSA:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
VisitInstr:   %19 = getelementptr inbounds %struct.planet, ptr %1, i64 %12, i32 1
Visiting SSA:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
VisitInstr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %12
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on advance
******************************************************
UnitLoopAnalysis running on advance
[LoopLoopAnalysis] parent loop header is:   %.01 = phi i32 [ 0, %3 ], [ %70, %69 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi i32 [ %90, %73 ], [ 0, %4 ]
[LoopLoopAnalysis] parent loop header is:   %.0.in = phi i32 [ %.01, %6 ], [ %.0, %11 ]
Instruction to be moved:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 1
Instruction to be moved:   %22 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 2
Instruction to be moved:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 3
Instruction to be moved:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 4
Instruction to be moved:   %48 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 5
Instruction to be moved:   %53 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, i32 6
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 6
UnitSCCP running on energy
Visiting BB: 
VisitInstr:   br label %3
BranchInst:   br label %3
In AddEdge: 0x5630a70449a0, 0x5630a7048510, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
PHI LatOp: 0, 0x5630a703d1b0
Check LatCell: 0
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703d1b0)
Lat2.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
PHI:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
VisitInstr:   %4 = icmp slt i32 %.01, %0
CmpInst:   %4 = icmp slt i32 %.01, %0
Check LatCell: 0
In Meet:   %4 = icmp slt i32 %.01, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = icmp slt i32 %.01, %0
VisitInstr:   br i1 %4, label %5, label %51
BranchInst:   br i1 %4, label %5, label %51
In BranchInst: -1, 0x0
In AddEdge: 0x5630a7044ad0, 0x5630a7048730, 0
Adding edge:  -> 
In AddEdge: 0x5630a7044ad0, 0x5630a7048730, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = zext i32 %.01 to i64
UnaryOp:   %6 = zext i32 %.01 to i64
Check LatCell: 0
In Meet:   %6 = zext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a7046170)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %6 = zext i32 %.01 to i64
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
GetElementPtr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
GetElementPtr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
VisitInstr:   %9 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %9 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load double, ptr %8, align 8
VisitInstr:   %10 = fmul double %9, 5.000000e-01
BinaryOp:   %10 = fmul double %9, 5.000000e-01
Check LatCell: 0
In Meet:   %10 = fmul double %9, 5.000000e-01, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = fmul double %9, 5.000000e-01
VisitInstr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
GetElementPtr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
VisitInstr:   %12 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %12 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load double, ptr %11, align 8
VisitInstr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
GetElementPtr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
VisitInstr:   %14 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %13, align 8
VisitInstr:   %15 = fmul double %14, %14
BinaryOp:   %15 = fmul double %14, %14
Check LatCell: 0
In Meet:   %15 = fmul double %14, %14, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = fmul double %14, %14
VisitInstr:   %16 = call double @llvm.fmuladd.f64(double %12, double %12, double %15)
Check LatCell: 0
In Meet:   %16 = call double @llvm.fmuladd.f64(double %12, double %12, double %15), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = call double @llvm.fmuladd.f64(double %12, double %12, double %15)
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
GetElementPtr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = call double @llvm.fmuladd.f64(double %18, double %18, double %16)
Check LatCell: 0
In Meet:   %19 = call double @llvm.fmuladd.f64(double %18, double %18, double %16), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = call double @llvm.fmuladd.f64(double %18, double %18, double %16)
VisitInstr:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02)
Check LatCell: 0
In Meet:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02)
VisitInstr:   br label %21
BranchInst:   br label %21
In AddEdge: 0x5630a7044ce0, 0x5630a704f8c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   ret double %.02
Check LatCell: 0
In Meet:   ret double %.02, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %.02
Visiting BB: 
VisitInstr:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
PHI:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.1 = phi double [ %20, %5 ], [ %48, %23 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
Adding SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
VisitInstr:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
PHI:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
VisitInstr:   %.0 = add nuw nsw i32 %.0.in, 1
BinaryOp:   %.0 = add nuw nsw i32 %.0.in, 1
Check LatCell: 0
In Meet:   %.0 = add nuw nsw i32 %.0.in, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %.0 = add nuw nsw i32 %.0.in, 1
VisitInstr:   %22 = icmp slt i32 %.0, %0
CmpInst:   %22 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %22 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %22, label %23, label %49
BranchInst:   br i1 %22, label %23, label %49
In BranchInst: -1, 0x0
In AddEdge: 0x5630a704f810, 0x5630a704fbc0, 0
Adding edge:  -> 
In AddEdge: 0x5630a704f810, 0x5630a704fbc0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %24 = zext i32 %.0 to i64
UnaryOp:   %24 = zext i32 %.0 to i64
Check LatCell: 0
In Meet:   %24 = zext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a70461b0)
Lat2.second: i32 zext (i32 1 to i32)
Meet:   %24 = zext i32 %.0 to i64
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
GetElementPtr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
VisitInstr:   %26 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %26 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = load double, ptr %7, align 8
VisitInstr:   %27 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %27 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = load double, ptr %25, align 8
VisitInstr:   %28 = fsub double %26, %27
BinaryOp:   %28 = fsub double %26, %27
Check LatCell: 0
In Meet:   %28 = fsub double %26, %27, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = fsub double %26, %27
VisitInstr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
GetElementPtr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
VisitInstr:   %30 = load double, ptr %29, align 8
Check LatCell: 0
In Meet:   %30 = load double, ptr %29, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = load double, ptr %29, align 8
VisitInstr:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
GetElementPtr:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
Check LatCell: 0
In Meet:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
VisitInstr:   %32 = load double, ptr %31, align 8
Check LatCell: 0
In Meet:   %32 = load double, ptr %31, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = load double, ptr %31, align 8
VisitInstr:   %33 = fsub double %30, %32
BinaryOp:   %33 = fsub double %30, %32
Check LatCell: 0
In Meet:   %33 = fsub double %30, %32, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = fsub double %30, %32
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
GetElementPtr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
VisitInstr:   %35 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %35 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load double, ptr %34, align 8
VisitInstr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
GetElementPtr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
VisitInstr:   %37 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %37 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = load double, ptr %36, align 8
VisitInstr:   %38 = fsub double %35, %37
BinaryOp:   %38 = fsub double %35, %37
Check LatCell: 0
In Meet:   %38 = fsub double %35, %37, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = fsub double %35, %37
VisitInstr:   %39 = fmul double %33, %33
BinaryOp:   %39 = fmul double %33, %33
Check LatCell: 0
In Meet:   %39 = fmul double %33, %33, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = fmul double %33, %33
VisitInstr:   %40 = call double @llvm.fmuladd.f64(double %28, double %28, double %39)
Check LatCell: 0
In Meet:   %40 = call double @llvm.fmuladd.f64(double %28, double %28, double %39), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = call double @llvm.fmuladd.f64(double %28, double %28, double %39)
VisitInstr:   %41 = call double @llvm.fmuladd.f64(double %38, double %38, double %40)
Check LatCell: 0
In Meet:   %41 = call double @llvm.fmuladd.f64(double %38, double %38, double %40), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = call double @llvm.fmuladd.f64(double %38, double %38, double %40)
VisitInstr:   %42 = call double @sqrt(double noundef %41) #4
Check LatCell: 0
In Meet:   %42 = call double @sqrt(double noundef %41) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = call double @sqrt(double noundef %41) #4
VisitInstr:   %43 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %43 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = load double, ptr %8, align 8
VisitInstr:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
GetElementPtr:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
VisitInstr:   %45 = load double, ptr %44, align 8
Check LatCell: 0
In Meet:   %45 = load double, ptr %44, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load double, ptr %44, align 8
VisitInstr:   %46 = fmul double %43, %45
BinaryOp:   %46 = fmul double %43, %45
Check LatCell: 0
In Meet:   %46 = fmul double %43, %45, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = fmul double %43, %45
VisitInstr:   %47 = fdiv double %46, %42
BinaryOp:   %47 = fdiv double %46, %42
Check LatCell: 0
In Meet:   %47 = fdiv double %46, %42, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = fdiv double %46, %42
VisitInstr:   %48 = fsub double %.1, %47
BinaryOp:   %48 = fsub double %.1, %47
Check LatCell: 0
In Meet:   %48 = fsub double %.1, %47, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = fsub double %.1, %47
Adding SSA:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
VisitInstr:   br label %21, !llvm.loop !6
BranchInst:   br label %21, !llvm.loop !6
In AddEdge: 0x5630a704fa80, 0x5630a7051b90, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %50 = add nuw nsw i32 %.01, 1
BinaryOp:   %50 = add nuw nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %50 = add nuw nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %50 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
VisitInstr:   br label %3, !llvm.loop !8
BranchInst:   br label %3, !llvm.loop !8
In AddEdge: 0x5630a7051c60, 0x5630a7051ed0, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
PHI LatOp: 0, 0x5630a703d1b0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ], Lat1: (0, 0x5630a703d1b0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
Adding SSA:   ret double %.02
Adding SSA:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02)
Visiting SSA:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
VisitInstr:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
Visiting SSA:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
PHI:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
PHI LatOp: 0, 0x5630a703e800
PHI LatOp: 0, 0x5630a703f1d0
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
Adding SSA:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
Adding SSA:   %6 = zext i32 %.01 to i64
Adding SSA:   %50 = add nuw nsw i32 %.01, 1
Adding SSA:   %4 = icmp slt i32 %.01, %0
Visiting SSA:   ret double %.02
VisitInstr:   ret double %.02
Visiting SSA:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02)
VisitInstr:   %20 = call double @llvm.fmuladd.f64(double %10, double %19, double %.02)
Visiting SSA:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
VisitInstr:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
PHI:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
Adding SSA:   %.0 = add nuw nsw i32 %.0.in, 1
Visiting SSA:   %6 = zext i32 %.01 to i64
VisitInstr:   %6 = zext i32 %.01 to i64
UnaryOp:   %6 = zext i32 %.01 to i64
Check LatCell: 1
In Meet:   %6 = zext i32 %.01 to i64, Lat1: (0, 0x5630a7046170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %6 = zext i32 %.01 to i64
Adding SSA:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
Adding SSA:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
Adding SSA:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Adding SSA:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Adding SSA:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Adding SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Adding SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Visiting SSA:   %50 = add nuw nsw i32 %.01, 1
VisitInstr:   %50 = add nuw nsw i32 %.01, 1
BinaryOp:   %50 = add nuw nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %50 = add nuw nsw i32 %.01, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %50 = add nuw nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
Visiting SSA:   %4 = icmp slt i32 %.01, %0
VisitInstr:   %4 = icmp slt i32 %.01, %0
Visiting SSA:   %.0 = add nuw nsw i32 %.0.in, 1
VisitInstr:   %.0 = add nuw nsw i32 %.0.in, 1
BinaryOp:   %.0 = add nuw nsw i32 %.0.in, 1
Check LatCell: 1
In Meet:   %.0 = add nuw nsw i32 %.0.in, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = add nuw nsw i32 %.0.in, 1
Adding SSA:   %24 = zext i32 %.0 to i64
Adding SSA:   %22 = icmp slt i32 %.0, %0
Adding SSA:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
Visiting SSA:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
Visiting SSA:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
VisitInstr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
Visiting SSA:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Visiting SSA:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
VisitInstr:   %13 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Visiting SSA:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
VisitInstr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Visiting SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Visiting SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Visiting SSA:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %50, %49 ]
Visiting SSA:   %24 = zext i32 %.0 to i64
VisitInstr:   %24 = zext i32 %.0 to i64
UnaryOp:   %24 = zext i32 %.0 to i64
Check LatCell: 1
In Meet:   %24 = zext i32 %.0 to i64, Lat1: (0, 0x5630a70461b0), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 1 to i32)
Meet:   %24 = zext i32 %.0 to i64
Adding SSA:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
Adding SSA:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
Adding SSA:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
Adding SSA:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
Visiting SSA:   %22 = icmp slt i32 %.0, %0
VisitInstr:   %22 = icmp slt i32 %.0, %0
Visiting SSA:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
VisitInstr:   %.0.in = phi i32 [ %.01, %5 ], [ %.0, %23 ]
Visiting SSA:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
VisitInstr:   %44 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 6
Visiting SSA:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
VisitInstr:   %36 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 2
Visiting SSA:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
VisitInstr:   %31 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, i32 1
Visiting SSA:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on energy
******************************************************
UnitLoopAnalysis running on energy
[LoopLoopAnalysis] parent loop header is:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %49 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.1 = phi double [ %20, %5 ], [ %48, %23 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi double [ %20, %5 ], [ %48, %23 ]
Instruction to be moved:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 1
Instruction to be moved:   %34 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 2
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 8
UnitSCCP running on offset_momentum
Visiting BB: 
VisitInstr:   br label %3
BranchInst:   br label %3
In AddEdge: 0x5630a7052220, 0x5630a7052970, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
PHI:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
Check LatCell: 0
In Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703d1b0)
Lat2.second: double 0.000000e+00
Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
Check LatCell: 0
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703d1b0)
Lat2.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
VisitInstr:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
PHI:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
Check LatCell: 0
In Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703d1b0)
Lat2.second: double 0.000000e+00
Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
PHI:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
PHI LatOp: 0, 0x5630a703e800
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703e800)
Lat2.second: i32 0
Meet:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
VisitInstr:   %4 = icmp slt i32 %.0, %0
CmpInst:   %4 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %4 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %4, label %5, label %19
BranchInst:   br i1 %4, label %5, label %19
In BranchInst: -1, 0x0
In AddEdge: 0x5630a7052350, 0x5630a7052c70, 0
Adding edge:  -> 
In AddEdge: 0x5630a7052350, 0x5630a7052c70, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = zext i32 %.0 to i64
UnaryOp:   %6 = zext i32 %.0 to i64
Check LatCell: 0
In Meet:   %6 = zext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x5630a7046170)
Lat2.second: i32 zext (i32 0 to i32)
Meet:   %6 = zext i32 %.0 to i64
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
GetElementPtr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
VisitInstr:   %8 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %8 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = load double, ptr %7, align 8
VisitInstr:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
GetElementPtr:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Check LatCell: 0
In Meet:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
VisitInstr:   %10 = load double, ptr %9, align 8
Check LatCell: 0
In Meet:   %10 = load double, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = load double, ptr %9, align 8
VisitInstr:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01)
Check LatCell: 0
In Meet:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01)
Adding SSA:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
VisitInstr:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
GetElementPtr:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Check LatCell: 0
In Meet:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
VisitInstr:   %13 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %13 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load double, ptr %12, align 8
VisitInstr:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03)
Check LatCell: 0
In Meet:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03)
Adding SSA:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
VisitInstr:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
GetElementPtr:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
VisitInstr:   %16 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %16 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load double, ptr %15, align 8
VisitInstr:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02)
Check LatCell: 0
In Meet:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02)
Adding SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
VisitInstr:   %18 = add nuw nsw i32 %.0, 1
BinaryOp:   %18 = add nuw nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %18 = add nuw nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %18 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
VisitInstr:   br label %3, !llvm.loop !6
BranchInst:   br label %3, !llvm.loop !6
In AddEdge: 0x5630a70545b0, 0x5630a7054820, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
BinaryOp:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x5630a7090cf0)
Lat2.second: double -0.000000e+00
Meet:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
VisitInstr:   %21 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 3
GetElementPtr:   %21 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 3
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 3
VisitInstr:   store double %20, ptr %21, align 8
Check LatCell: 0
In Meet:   store double %20, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %20, ptr %21, align 8
VisitInstr:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
BinaryOp:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x5630a7090cf0)
Lat2.second: double -0.000000e+00
Meet:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
VisitInstr:   %23 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 4
GetElementPtr:   %23 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 4
Check LatCell: 0
In Meet:   %23 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 4
VisitInstr:   store double %22, ptr %23, align 8
Check LatCell: 0
In Meet:   store double %22, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %22, ptr %23, align 8
VisitInstr:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
BinaryOp:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x5630a7090cf0)
Lat2.second: double -0.000000e+00
Meet:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 5
GetElementPtr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 5
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 0, i32 5
VisitInstr:   store double %24, ptr %25, align 8
Check LatCell: 0
In Meet:   store double %24, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %24, ptr %25, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting SSA:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
VisitInstr:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
PHI:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ], Lat1: (0, 0x5630a703d1b0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %11, %5 ]
Adding SSA:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
Adding SSA:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01)
Visiting SSA:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
VisitInstr:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
PHI:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ], Lat1: (0, 0x5630a703d1b0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
Adding SSA:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
Adding SSA:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03)
Visiting SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
PHI LatOp: 0, 0x5630a703d1b0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ], Lat1: (0, 0x5630a703d1b0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %17, %5 ]
Adding SSA:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
Adding SSA:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02)
Visiting SSA:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
PHI:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
PHI LatOp: 0, 0x5630a703e800
PHI LatOp: 0, 0x5630a703f1d0
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ], Lat1: (0, 0x5630a703e800), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
Adding SSA:   %6 = zext i32 %.0 to i64
Adding SSA:   %18 = add nuw nsw i32 %.0, 1
Adding SSA:   %4 = icmp slt i32 %.0, %0
Visiting SSA:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
VisitInstr:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
BinaryOp:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE, Lat1: (0, 0x5630a7090cf0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %24 = fdiv double %.01, 0xC043BD3CC9BE45DE
Adding SSA:   store double %24, ptr %25, align 8
Visiting SSA:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01)
VisitInstr:   %11 = call double @llvm.fmuladd.f64(double %8, double %10, double %.01)
Visiting SSA:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
VisitInstr:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
BinaryOp:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE, Lat1: (0, 0x5630a7090cf0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %22 = fdiv double %.03, 0xC043BD3CC9BE45DE
Adding SSA:   store double %22, ptr %23, align 8
Visiting SSA:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03)
VisitInstr:   %14 = call double @llvm.fmuladd.f64(double %13, double %10, double %.03)
Visiting SSA:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
VisitInstr:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
BinaryOp:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE, Lat1: (0, 0x5630a7090cf0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %20 = fdiv double %.02, 0xC043BD3CC9BE45DE
Adding SSA:   store double %20, ptr %21, align 8
Visiting SSA:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02)
VisitInstr:   %17 = call double @llvm.fmuladd.f64(double %16, double %10, double %.02)
Visiting SSA:   %6 = zext i32 %.0 to i64
VisitInstr:   %6 = zext i32 %.0 to i64
UnaryOp:   %6 = zext i32 %.0 to i64
Check LatCell: 1
In Meet:   %6 = zext i32 %.0 to i64, Lat1: (0, 0x5630a7046170), Lat2: (-1, 0x0)
Lat1.second: i32 zext (i32 0 to i32)
Meet:   %6 = zext i32 %.0 to i64
Adding SSA:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Adding SSA:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Adding SSA:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Adding SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Visiting SSA:   %18 = add nuw nsw i32 %.0, 1
VisitInstr:   %18 = add nuw nsw i32 %.0, 1
BinaryOp:   %18 = add nuw nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %18 = add nuw nsw i32 %.0, 1, Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %18 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
Visiting SSA:   %4 = icmp slt i32 %.0, %0
VisitInstr:   %4 = icmp slt i32 %.0, %0
Visiting SSA:   store double %24, ptr %25, align 8
VisitInstr:   store double %24, ptr %25, align 8
Visiting SSA:   store double %22, ptr %23, align 8
VisitInstr:   store double %22, ptr %23, align 8
Visiting SSA:   store double %20, ptr %21, align 8
VisitInstr:   store double %20, ptr %21, align 8
Visiting SSA:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
VisitInstr:   %15 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 3
Visiting SSA:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
VisitInstr:   %12 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 4
Visiting SSA:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
VisitInstr:   %9 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 6
Visiting SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, i32 5
Visiting SSA:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %18, %5 ]
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on offset_momentum
******************************************************
UnitLoopAnalysis running on offset_momentum
[LoopLoopAnalysis] parent loop header is:   %.03 = phi double [ 0.000000e+00, %2 ], [ %14, %5 ]
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 8
UnitSCCP running on main
Visiting BB: 
VisitInstr:   call void @offset_momentum(i32 noundef 5, ptr noundef nonnull @bodies)
Check LatCell: 0
In Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef nonnull @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef nonnull @bodies)
VisitInstr:   %3 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies)
Check LatCell: 0
In Meet:   %3 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies)
VisitInstr:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %3) #4
Check LatCell: 0
In Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %3) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %3) #4
VisitInstr:   br label %5
BranchInst:   br label %5
In AddEdge: 0x5630a70556b0, 0x5630a7056170, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
PHI:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
PHI LatOp: 0, 0x5630a703f1d0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ], Lat1: (1, 0x0), Lat2: (0, 0x5630a703f1d0)
Lat2.second: i32 1
Meet:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
VisitInstr:   %6 = icmp ult i32 %.0, 5000001
CmpInst:   %6 = icmp ult i32 %.0, 5000001
Check LatCell: 0
In Meet:   %6 = icmp ult i32 %.0, 5000001, Lat1: (1, 0x0), Lat2: (0, 0x5630a7053ec0)
Lat2.second: i1 true
Meet:   %6 = icmp ult i32 %.0, 5000001
VisitInstr:   br i1 %6, label %7, label %9
BranchInst:   br i1 %6, label %7, label %9
In BranchInst: 0, 0x5630a7053ec0
In AddEdge: 0x5630a7056100, 0x5630a7056470, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   call void @advance(i32 noundef 5, ptr noundef nonnull @bodies, double noundef 1.000000e-02)
Check LatCell: 0
In Meet:   call void @advance(i32 noundef 5, ptr noundef nonnull @bodies, double noundef 1.000000e-02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @advance(i32 noundef 5, ptr noundef nonnull @bodies, double noundef 1.000000e-02)
VisitInstr:   %8 = add nuw nsw i32 %.0, 1
BinaryOp:   %8 = add nuw nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %8 = add nuw nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x5630a7040f70)
Lat2.second: i32 2
Meet:   %8 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
VisitInstr:   br label %5, !llvm.loop !6
BranchInst:   br label %5, !llvm.loop !6
In AddEdge: 0x5630a7056330, 0x5630a7056810, 0
Adding edge:  -> 
Visiting SSA:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
PHI:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
PHI LatOp: 0, 0x5630a703f1d0
PHI LatOp: 0, 0x5630a7040f70
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ], Lat1: (0, 0x5630a703f1d0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
Adding SSA:   %6 = icmp ult i32 %.0, 5000001
Adding SSA:   %8 = add nuw nsw i32 %.0, 1
Visiting SSA:   %6 = icmp ult i32 %.0, 5000001
VisitInstr:   %6 = icmp ult i32 %.0, 5000001
CmpInst:   %6 = icmp ult i32 %.0, 5000001
Check LatCell: 1
In Meet:   %6 = icmp ult i32 %.0, 5000001, Lat1: (0, 0x5630a7053ec0), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %6 = icmp ult i32 %.0, 5000001
Adding SSA:   br i1 %6, label %7, label %9
Visiting SSA:   %8 = add nuw nsw i32 %.0, 1
VisitInstr:   %8 = add nuw nsw i32 %.0, 1
BinaryOp:   %8 = add nuw nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %8 = add nuw nsw i32 %.0, 1, Lat1: (0, 0x5630a7040f70), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %8 = add nuw nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
Visiting SSA:   br i1 %6, label %7, label %9
VisitInstr:   br i1 %6, label %7, label %9
BranchInst:   br i1 %6, label %7, label %9
In BranchInst: -1, 0x0
In AddEdge: 0x5630a7056100, 0x5630a7056470, 0
In AddEdge: 0x5630a7056100, 0x5630a7056470, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %10 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies)
Check LatCell: 0
In Meet:   %10 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = call double @energy(i32 noundef 5, ptr noundef nonnull @bodies)
VisitInstr:   %11 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %10) #4
Check LatCell: 0
In Meet:   %11 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %10) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, double noundef %10) #4
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
Visiting SSA:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %.0 = phi i32 [ 1, %2 ], [ %8, %7 ]
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 8
----------------------------------------
Running sccp only: n-body.c
UnitSCCP running on advance
Visiting BB: 
VisitInstr:   br label %4
BranchInst:   br label %4
In AddEdge: 0x56435d5fbd20, 0x56435d5ff6d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
PHI:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
PHI LatOp: 0, 0x56435d5fe720
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fe720)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
VisitInstr:   %5 = icmp slt i32 %.01, %0
CmpInst:   %5 = icmp slt i32 %.01, %0
Check LatCell: 0
In Meet:   %5 = icmp slt i32 %.01, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = icmp slt i32 %.01, %0
VisitInstr:   br i1 %5, label %6, label %81
BranchInst:   br i1 %5, label %6, label %81
In BranchInst: -1, 0x0
In AddEdge: 0x56435d5ff120, 0x56435d5ff940, 0
Adding edge:  -> 
In AddEdge: 0x56435d5ff120, 0x56435d5ff940, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %7 = sext i32 %.01 to i64
UnaryOp:   %7 = sext i32 %.01 to i64
Check LatCell: 0
In Meet:   %7 = sext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %7 = sext i32 %.01 to i64
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
GetElementPtr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
VisitInstr:   %9 = add nsw i32 %.01, 1
BinaryOp:   %9 = add nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %9 = add nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %9 = add nsw i32 %.01, 1
VisitInstr:   br label %10
BranchInst:   br label %10
In AddEdge: 0x56435d5ff800, 0x56435d5ffd80, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %82
BranchInst:   br label %82
In AddEdge: 0x56435d5ff850, 0x56435d6064e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
PHI:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
VisitInstr:   %11 = icmp slt i32 %.0, %0
CmpInst:   %11 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %11 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %11, label %12, label %78
BranchInst:   br i1 %11, label %12, label %78
In BranchInst: -1, 0x0
In AddEdge: 0x56435d5ffd10, 0x56435d600080, 0
Adding edge:  -> 
In AddEdge: 0x56435d5ffd10, 0x56435d600080, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
PHI:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
PHI LatOp: 0, 0x56435d5fe720
Check LatCell: 0
In Meet:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fe720)
Lat2.second: i32 0
Meet:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
VisitInstr:   %83 = icmp slt i32 %.1, %0
CmpInst:   %83 = icmp slt i32 %.1, %0
Check LatCell: 0
In Meet:   %83 = icmp slt i32 %.1, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = icmp slt i32 %.1, %0
VisitInstr:   br i1 %83, label %84, label %104
BranchInst:   br i1 %83, label %84, label %104
In BranchInst: -1, 0x0
In AddEdge: 0x56435d606470, 0x56435d6067e0, 0
Adding edge:  -> 
In AddEdge: 0x56435d606470, 0x56435d6067e0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %13 = sext i32 %.0 to i64
UnaryOp:   %13 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %13 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d6016b0)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %13 = sext i32 %.0 to i64
VisitInstr:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
GetElementPtr:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
Check LatCell: 0
In Meet:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
VisitInstr:   %15 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 0
GetElementPtr:   %15 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 0
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 0
VisitInstr:   %16 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %16 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load double, ptr %15, align 8
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 0
GetElementPtr:   %17 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 0
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 0
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = fsub double %16, %18
BinaryOp:   %19 = fsub double %16, %18
Check LatCell: 0
In Meet:   %19 = fsub double %16, %18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = fsub double %16, %18
VisitInstr:   %20 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 1
GetElementPtr:   %20 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 1
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 1
VisitInstr:   %21 = load double, ptr %20, align 8
Check LatCell: 0
In Meet:   %21 = load double, ptr %20, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = load double, ptr %20, align 8
VisitInstr:   %22 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 1
GetElementPtr:   %22 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 1
Check LatCell: 0
In Meet:   %22 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 1
VisitInstr:   %23 = load double, ptr %22, align 8
Check LatCell: 0
In Meet:   %23 = load double, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load double, ptr %22, align 8
VisitInstr:   %24 = fsub double %21, %23
BinaryOp:   %24 = fsub double %21, %23
Check LatCell: 0
In Meet:   %24 = fsub double %21, %23, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = fsub double %21, %23
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 2
GetElementPtr:   %25 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 2
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 2
VisitInstr:   %26 = load double, ptr %25, align 8
Check LatCell: 0
In Meet:   %26 = load double, ptr %25, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = load double, ptr %25, align 8
VisitInstr:   %27 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 2
GetElementPtr:   %27 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 2
Check LatCell: 0
In Meet:   %27 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 2
VisitInstr:   %28 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %28 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = load double, ptr %27, align 8
VisitInstr:   %29 = fsub double %26, %28
BinaryOp:   %29 = fsub double %26, %28
Check LatCell: 0
In Meet:   %29 = fsub double %26, %28, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = fsub double %26, %28
VisitInstr:   %30 = fmul double %24, %24
BinaryOp:   %30 = fmul double %24, %24
Check LatCell: 0
In Meet:   %30 = fmul double %24, %24, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = fmul double %24, %24
VisitInstr:   %31 = call double @llvm.fmuladd.f64(double %19, double %19, double %30)
Check LatCell: 0
In Meet:   %31 = call double @llvm.fmuladd.f64(double %19, double %19, double %30), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = call double @llvm.fmuladd.f64(double %19, double %19, double %30)
VisitInstr:   %32 = call double @llvm.fmuladd.f64(double %29, double %29, double %31)
Check LatCell: 0
In Meet:   %32 = call double @llvm.fmuladd.f64(double %29, double %29, double %31), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = call double @llvm.fmuladd.f64(double %29, double %29, double %31)
VisitInstr:   %33 = call double @sqrt(double noundef %32) #4
Check LatCell: 0
In Meet:   %33 = call double @sqrt(double noundef %32) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = call double @sqrt(double noundef %32) #4
VisitInstr:   %34 = fmul double %33, %33
BinaryOp:   %34 = fmul double %33, %33
Check LatCell: 0
In Meet:   %34 = fmul double %33, %33, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = fmul double %33, %33
VisitInstr:   %35 = fmul double %34, %33
BinaryOp:   %35 = fmul double %34, %33
Check LatCell: 0
In Meet:   %35 = fmul double %34, %33, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = fmul double %34, %33
VisitInstr:   %36 = fdiv double %2, %35
BinaryOp:   %36 = fdiv double %2, %35
Check LatCell: 0
In Meet:   %36 = fdiv double %2, %35, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = fdiv double %2, %35
VisitInstr:   %37 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
GetElementPtr:   %37 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
Check LatCell: 0
In Meet:   %37 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
VisitInstr:   %38 = load double, ptr %37, align 8
Check LatCell: 0
In Meet:   %38 = load double, ptr %37, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = load double, ptr %37, align 8
VisitInstr:   %39 = fmul double %19, %38
BinaryOp:   %39 = fmul double %19, %38
Check LatCell: 0
In Meet:   %39 = fmul double %19, %38, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = fmul double %19, %38
VisitInstr:   %40 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 3
GetElementPtr:   %40 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 3
Check LatCell: 0
In Meet:   %40 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 3
VisitInstr:   %41 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %41 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = load double, ptr %40, align 8
VisitInstr:   %42 = fneg double %39
UnaryOp:   %42 = fneg double %39
Check LatCell: 0
In Meet:   %42 = fneg double %39, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = fneg double %39
VisitInstr:   %43 = call double @llvm.fmuladd.f64(double %42, double %36, double %41)
Check LatCell: 0
In Meet:   %43 = call double @llvm.fmuladd.f64(double %42, double %36, double %41), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = call double @llvm.fmuladd.f64(double %42, double %36, double %41)
VisitInstr:   store double %43, ptr %40, align 8
Check LatCell: 0
In Meet:   store double %43, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %43, ptr %40, align 8
VisitInstr:   %44 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
GetElementPtr:   %44 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
VisitInstr:   %45 = load double, ptr %44, align 8
Check LatCell: 0
In Meet:   %45 = load double, ptr %44, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load double, ptr %44, align 8
VisitInstr:   %46 = fmul double %24, %45
BinaryOp:   %46 = fmul double %24, %45
Check LatCell: 0
In Meet:   %46 = fmul double %24, %45, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = fmul double %24, %45
VisitInstr:   %47 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 4
GetElementPtr:   %47 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 4
Check LatCell: 0
In Meet:   %47 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 4
VisitInstr:   %48 = load double, ptr %47, align 8
Check LatCell: 0
In Meet:   %48 = load double, ptr %47, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load double, ptr %47, align 8
VisitInstr:   %49 = fneg double %46
UnaryOp:   %49 = fneg double %46
Check LatCell: 0
In Meet:   %49 = fneg double %46, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = fneg double %46
VisitInstr:   %50 = call double @llvm.fmuladd.f64(double %49, double %36, double %48)
Check LatCell: 0
In Meet:   %50 = call double @llvm.fmuladd.f64(double %49, double %36, double %48), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = call double @llvm.fmuladd.f64(double %49, double %36, double %48)
VisitInstr:   store double %50, ptr %47, align 8
Check LatCell: 0
In Meet:   store double %50, ptr %47, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %50, ptr %47, align 8
VisitInstr:   %51 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
GetElementPtr:   %51 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
Check LatCell: 0
In Meet:   %51 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 6
VisitInstr:   %52 = load double, ptr %51, align 8
Check LatCell: 0
In Meet:   %52 = load double, ptr %51, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load double, ptr %51, align 8
VisitInstr:   %53 = fmul double %29, %52
BinaryOp:   %53 = fmul double %29, %52
Check LatCell: 0
In Meet:   %53 = fmul double %29, %52, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = fmul double %29, %52
VisitInstr:   %54 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 5
GetElementPtr:   %54 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 5
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 5
VisitInstr:   %55 = load double, ptr %54, align 8
Check LatCell: 0
In Meet:   %55 = load double, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load double, ptr %54, align 8
VisitInstr:   %56 = fneg double %53
UnaryOp:   %56 = fneg double %53
Check LatCell: 0
In Meet:   %56 = fneg double %53, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = fneg double %53
VisitInstr:   %57 = call double @llvm.fmuladd.f64(double %56, double %36, double %55)
Check LatCell: 0
In Meet:   %57 = call double @llvm.fmuladd.f64(double %56, double %36, double %55), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = call double @llvm.fmuladd.f64(double %56, double %36, double %55)
VisitInstr:   store double %57, ptr %54, align 8
Check LatCell: 0
In Meet:   store double %57, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %57, ptr %54, align 8
VisitInstr:   %58 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
GetElementPtr:   %58 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
Check LatCell: 0
In Meet:   %58 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
VisitInstr:   %59 = load double, ptr %58, align 8
Check LatCell: 0
In Meet:   %59 = load double, ptr %58, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = load double, ptr %58, align 8
VisitInstr:   %60 = fmul double %19, %59
BinaryOp:   %60 = fmul double %19, %59
Check LatCell: 0
In Meet:   %60 = fmul double %19, %59, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = fmul double %19, %59
VisitInstr:   %61 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 3
GetElementPtr:   %61 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 3
Check LatCell: 0
In Meet:   %61 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 3
VisitInstr:   %62 = load double, ptr %61, align 8
Check LatCell: 0
In Meet:   %62 = load double, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load double, ptr %61, align 8
VisitInstr:   %63 = call double @llvm.fmuladd.f64(double %60, double %36, double %62)
Check LatCell: 0
In Meet:   %63 = call double @llvm.fmuladd.f64(double %60, double %36, double %62), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = call double @llvm.fmuladd.f64(double %60, double %36, double %62)
VisitInstr:   store double %63, ptr %61, align 8
Check LatCell: 0
In Meet:   store double %63, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %63, ptr %61, align 8
VisitInstr:   %64 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
GetElementPtr:   %64 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
Check LatCell: 0
In Meet:   %64 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
VisitInstr:   %65 = load double, ptr %64, align 8
Check LatCell: 0
In Meet:   %65 = load double, ptr %64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = load double, ptr %64, align 8
VisitInstr:   %66 = fmul double %24, %65
BinaryOp:   %66 = fmul double %24, %65
Check LatCell: 0
In Meet:   %66 = fmul double %24, %65, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = fmul double %24, %65
VisitInstr:   %67 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 4
GetElementPtr:   %67 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 4
Check LatCell: 0
In Meet:   %67 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 4
VisitInstr:   %68 = load double, ptr %67, align 8
Check LatCell: 0
In Meet:   %68 = load double, ptr %67, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = load double, ptr %67, align 8
VisitInstr:   %69 = call double @llvm.fmuladd.f64(double %66, double %36, double %68)
Check LatCell: 0
In Meet:   %69 = call double @llvm.fmuladd.f64(double %66, double %36, double %68), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = call double @llvm.fmuladd.f64(double %66, double %36, double %68)
VisitInstr:   store double %69, ptr %67, align 8
Check LatCell: 0
In Meet:   store double %69, ptr %67, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %69, ptr %67, align 8
VisitInstr:   %70 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
GetElementPtr:   %70 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
Check LatCell: 0
In Meet:   %70 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
VisitInstr:   %71 = load double, ptr %70, align 8
Check LatCell: 0
In Meet:   %71 = load double, ptr %70, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = load double, ptr %70, align 8
VisitInstr:   %72 = fmul double %29, %71
BinaryOp:   %72 = fmul double %29, %71
Check LatCell: 0
In Meet:   %72 = fmul double %29, %71, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = fmul double %29, %71
VisitInstr:   %73 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 5
GetElementPtr:   %73 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 5
Check LatCell: 0
In Meet:   %73 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = getelementptr inbounds %struct.planet, ptr %14, i32 0, i32 5
VisitInstr:   %74 = load double, ptr %73, align 8
Check LatCell: 0
In Meet:   %74 = load double, ptr %73, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = load double, ptr %73, align 8
VisitInstr:   %75 = call double @llvm.fmuladd.f64(double %72, double %36, double %74)
Check LatCell: 0
In Meet:   %75 = call double @llvm.fmuladd.f64(double %72, double %36, double %74), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = call double @llvm.fmuladd.f64(double %72, double %36, double %74)
VisitInstr:   store double %75, ptr %73, align 8
Check LatCell: 0
In Meet:   store double %75, ptr %73, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %75, ptr %73, align 8
VisitInstr:   br label %76
BranchInst:   br label %76
In AddEdge: 0x56435d5fff40, 0x56435d6052c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %79
BranchInst:   br label %79
In AddEdge: 0x56435d5fff90, 0x56435d606090, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %85 = sext i32 %.1 to i64
UnaryOp:   %85 = sext i32 %.1 to i64
Check LatCell: 0
In Meet:   %85 = sext i32 %.1 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %85 = sext i32 %.1 to i64
VisitInstr:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
GetElementPtr:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
Check LatCell: 0
In Meet:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
VisitInstr:   %87 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 3
GetElementPtr:   %87 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 3
Check LatCell: 0
In Meet:   %87 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 3
VisitInstr:   %88 = load double, ptr %87, align 8
Check LatCell: 0
In Meet:   %88 = load double, ptr %87, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = load double, ptr %87, align 8
VisitInstr:   %89 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 0
GetElementPtr:   %89 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 0
Check LatCell: 0
In Meet:   %89 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 0
VisitInstr:   %90 = load double, ptr %89, align 8
Check LatCell: 0
In Meet:   %90 = load double, ptr %89, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = load double, ptr %89, align 8
VisitInstr:   %91 = call double @llvm.fmuladd.f64(double %2, double %88, double %90)
Check LatCell: 0
In Meet:   %91 = call double @llvm.fmuladd.f64(double %2, double %88, double %90), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = call double @llvm.fmuladd.f64(double %2, double %88, double %90)
VisitInstr:   store double %91, ptr %89, align 8
Check LatCell: 0
In Meet:   store double %91, ptr %89, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %91, ptr %89, align 8
VisitInstr:   %92 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 4
GetElementPtr:   %92 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 4
Check LatCell: 0
In Meet:   %92 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 4
VisitInstr:   %93 = load double, ptr %92, align 8
Check LatCell: 0
In Meet:   %93 = load double, ptr %92, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = load double, ptr %92, align 8
VisitInstr:   %94 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 1
GetElementPtr:   %94 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 1
Check LatCell: 0
In Meet:   %94 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 1
VisitInstr:   %95 = load double, ptr %94, align 8
Check LatCell: 0
In Meet:   %95 = load double, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = load double, ptr %94, align 8
VisitInstr:   %96 = call double @llvm.fmuladd.f64(double %2, double %93, double %95)
Check LatCell: 0
In Meet:   %96 = call double @llvm.fmuladd.f64(double %2, double %93, double %95), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = call double @llvm.fmuladd.f64(double %2, double %93, double %95)
VisitInstr:   store double %96, ptr %94, align 8
Check LatCell: 0
In Meet:   store double %96, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %96, ptr %94, align 8
VisitInstr:   %97 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 5
GetElementPtr:   %97 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 5
Check LatCell: 0
In Meet:   %97 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 5
VisitInstr:   %98 = load double, ptr %97, align 8
Check LatCell: 0
In Meet:   %98 = load double, ptr %97, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = load double, ptr %97, align 8
VisitInstr:   %99 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 2
GetElementPtr:   %99 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 2
Check LatCell: 0
In Meet:   %99 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 2
VisitInstr:   %100 = load double, ptr %99, align 8
Check LatCell: 0
In Meet:   %100 = load double, ptr %99, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = load double, ptr %99, align 8
VisitInstr:   %101 = call double @llvm.fmuladd.f64(double %2, double %98, double %100)
Check LatCell: 0
In Meet:   %101 = call double @llvm.fmuladd.f64(double %2, double %98, double %100), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = call double @llvm.fmuladd.f64(double %2, double %98, double %100)
VisitInstr:   store double %101, ptr %99, align 8
Check LatCell: 0
In Meet:   store double %101, ptr %99, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %101, ptr %99, align 8
VisitInstr:   br label %102
BranchInst:   br label %102
In AddEdge: 0x56435d6066a0, 0x56435d607b70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %77 = add nsw i32 %.0, 1
BinaryOp:   %77 = add nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %77 = add nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d600e90)
Lat2.second: i32 2
Meet:   %77 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
VisitInstr:   br label %10, !llvm.loop !6
BranchInst:   br label %10, !llvm.loop !6
In AddEdge: 0x56435d605250, 0x56435d6054c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %80 = add nsw i32 %.01, 1
BinaryOp:   %80 = add nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %80 = add nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %80 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
VisitInstr:   br label %4, !llvm.loop !8
BranchInst:   br label %4, !llvm.loop !8
In AddEdge: 0x56435d606020, 0x56435d606290, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %103 = add nsw i32 %.1, 1
BinaryOp:   %103 = add nsw i32 %.1, 1
Check LatCell: 0
In Meet:   %103 = add nsw i32 %.1, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %103 = add nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
VisitInstr:   br label %82, !llvm.loop !9
BranchInst:   br label %82, !llvm.loop !9
In AddEdge: 0x56435d607b00, 0x56435d607d70, 0
Adding edge:  -> 
Visiting SSA:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
VisitInstr:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
PHI:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
PHI LatOp: 0, 0x56435d5ff0f0
PHI LatOp: 0, 0x56435d600e90
Check LatCell: 1
In Meet:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ], Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
Adding SSA:   %77 = add nsw i32 %.0, 1
Adding SSA:   %13 = sext i32 %.0 to i64
Adding SSA:   %11 = icmp slt i32 %.0, %0
Visiting SSA:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
PHI:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
PHI LatOp: 0, 0x56435d5fe720
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ], Lat1: (0, 0x56435d5fe720), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
Adding SSA:   %80 = add nsw i32 %.01, 1
Adding SSA:   %9 = add nsw i32 %.01, 1
Adding SSA:   %7 = sext i32 %.01 to i64
Adding SSA:   %5 = icmp slt i32 %.01, %0
Visiting SSA:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
VisitInstr:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
PHI:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
PHI LatOp: 0, 0x56435d5fe720
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 1
In Meet:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ], Lat1: (0, 0x56435d5fe720), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
Adding SSA:   %103 = add nsw i32 %.1, 1
Adding SSA:   %85 = sext i32 %.1 to i64
Adding SSA:   %83 = icmp slt i32 %.1, %0
Visiting SSA:   %77 = add nsw i32 %.0, 1
VisitInstr:   %77 = add nsw i32 %.0, 1
BinaryOp:   %77 = add nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %77 = add nsw i32 %.0, 1, Lat1: (0, 0x56435d600e90), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %77 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
Visiting SSA:   %13 = sext i32 %.0 to i64
VisitInstr:   %13 = sext i32 %.0 to i64
UnaryOp:   %13 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %13 = sext i32 %.0 to i64, Lat1: (0, 0x56435d6016b0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %13 = sext i32 %.0 to i64
Adding SSA:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
Visiting SSA:   %11 = icmp slt i32 %.0, %0
VisitInstr:   %11 = icmp slt i32 %.0, %0
Visiting SSA:   %80 = add nsw i32 %.01, 1
VisitInstr:   %80 = add nsw i32 %.01, 1
BinaryOp:   %80 = add nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %80 = add nsw i32 %.01, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %80 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
Visiting SSA:   %9 = add nsw i32 %.01, 1
VisitInstr:   %9 = add nsw i32 %.01, 1
BinaryOp:   %9 = add nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %9 = add nsw i32 %.01, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %9 = add nsw i32 %.01, 1
Visiting SSA:   %7 = sext i32 %.01 to i64
VisitInstr:   %7 = sext i32 %.01 to i64
UnaryOp:   %7 = sext i32 %.01 to i64
Check LatCell: 1
In Meet:   %7 = sext i32 %.01 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %7 = sext i32 %.01 to i64
Adding SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Visiting SSA:   %5 = icmp slt i32 %.01, %0
VisitInstr:   %5 = icmp slt i32 %.01, %0
Visiting SSA:   %103 = add nsw i32 %.1, 1
VisitInstr:   %103 = add nsw i32 %.1, 1
BinaryOp:   %103 = add nsw i32 %.1, 1
Check LatCell: 1
In Meet:   %103 = add nsw i32 %.1, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %103 = add nsw i32 %.1, 1
Adding SSA:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
Visiting SSA:   %85 = sext i32 %.1 to i64
VisitInstr:   %85 = sext i32 %.1 to i64
UnaryOp:   %85 = sext i32 %.1 to i64
Check LatCell: 1
In Meet:   %85 = sext i32 %.1 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %85 = sext i32 %.1 to i64
Adding SSA:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
Visiting SSA:   %83 = icmp slt i32 %.1, %0
VisitInstr:   %83 = icmp slt i32 %.1, %0
Visiting SSA:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
VisitInstr:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
Visiting SSA:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
VisitInstr:   %14 = getelementptr inbounds %struct.planet, ptr %1, i64 %13
Visiting SSA:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
VisitInstr:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
Visiting SSA:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %1, i64 %7
Visiting SSA:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
VisitInstr:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
Visiting SSA:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
VisitInstr:   %86 = getelementptr inbounds %struct.planet, ptr %1, i64 %85
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitSCCP running on energy
Visiting BB: 
VisitInstr:   br label %3
BranchInst:   br label %3
In AddEdge: 0x56435d6048c0, 0x56435d608430, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
PHI LatOp: 0, 0x56435d5fcfd0
Check LatCell: 0
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fcfd0)
Lat2.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
PHI:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
PHI LatOp: 0, 0x56435d5fe720
Check LatCell: 0
In Meet:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fe720)
Lat2.second: i32 0
Meet:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
VisitInstr:   %4 = icmp slt i32 %.01, %0
CmpInst:   %4 = icmp slt i32 %.01, %0
Check LatCell: 0
In Meet:   %4 = icmp slt i32 %.01, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = icmp slt i32 %.01, %0
VisitInstr:   br i1 %4, label %5, label %64
BranchInst:   br i1 %4, label %5, label %64
In BranchInst: -1, 0x0
In AddEdge: 0x56435d6049f0, 0x56435d608650, 0
Adding edge:  -> 
In AddEdge: 0x56435d6049f0, 0x56435d608650, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = sext i32 %.01 to i64
UnaryOp:   %6 = sext i32 %.01 to i64
Check LatCell: 0
In Meet:   %6 = sext i32 %.01 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %6 = sext i32 %.01 to i64
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
GetElementPtr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
GetElementPtr:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
VisitInstr:   %9 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %9 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load double, ptr %8, align 8
VisitInstr:   %10 = fmul double 5.000000e-01, %9
BinaryOp:   %10 = fmul double 5.000000e-01, %9
Check LatCell: 0
In Meet:   %10 = fmul double 5.000000e-01, %9, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = fmul double 5.000000e-01, %9
VisitInstr:   %11 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
GetElementPtr:   %11 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
VisitInstr:   %12 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %12 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load double, ptr %11, align 8
VisitInstr:   %13 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
GetElementPtr:   %13 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
Check LatCell: 0
In Meet:   %13 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
VisitInstr:   %14 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %14 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load double, ptr %13, align 8
VisitInstr:   %15 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
GetElementPtr:   %15 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
VisitInstr:   %16 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %16 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = load double, ptr %15, align 8
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
GetElementPtr:   %17 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 4
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = fmul double %16, %18
BinaryOp:   %19 = fmul double %16, %18
Check LatCell: 0
In Meet:   %19 = fmul double %16, %18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = fmul double %16, %18
VisitInstr:   %20 = call double @llvm.fmuladd.f64(double %12, double %14, double %19)
Check LatCell: 0
In Meet:   %20 = call double @llvm.fmuladd.f64(double %12, double %14, double %19), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = call double @llvm.fmuladd.f64(double %12, double %14, double %19)
VisitInstr:   %21 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
GetElementPtr:   %21 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
VisitInstr:   %22 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %21, align 8
VisitInstr:   %23 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
GetElementPtr:   %23 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
Check LatCell: 0
In Meet:   %23 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 5
VisitInstr:   %24 = load double, ptr %23, align 8
Check LatCell: 0
In Meet:   %24 = load double, ptr %23, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = load double, ptr %23, align 8
VisitInstr:   %25 = call double @llvm.fmuladd.f64(double %22, double %24, double %20)
Check LatCell: 0
In Meet:   %25 = call double @llvm.fmuladd.f64(double %22, double %24, double %20), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = call double @llvm.fmuladd.f64(double %22, double %24, double %20)
VisitInstr:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02)
Check LatCell: 0
In Meet:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02)
VisitInstr:   %27 = add nsw i32 %.01, 1
BinaryOp:   %27 = add nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %27 = add nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %27 = add nsw i32 %.01, 1
VisitInstr:   br label %28
BranchInst:   br label %28
In AddEdge: 0x56435d604c00, 0x56435d60f7e0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   ret double %.02
Check LatCell: 0
In Meet:   ret double %.02, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %.02
Visiting BB: 
VisitInstr:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
PHI:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
PHI LatOp: -1, 0x0
Check LatCell: 0
In Meet:   %.1 = phi double [ %26, %5 ], [ %58, %59 ], Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
Adding SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
VisitInstr:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
PHI:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
VisitInstr:   %29 = icmp slt i32 %.0, %0
CmpInst:   %29 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %29 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %29, label %30, label %61
BranchInst:   br i1 %29, label %30, label %61
In BranchInst: -1, 0x0
In AddEdge: 0x56435d60f730, 0x56435d60fae0, 0
Adding edge:  -> 
In AddEdge: 0x56435d60f730, 0x56435d60fae0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %31 = sext i32 %.0 to i64
UnaryOp:   %31 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %31 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d6016b0)
Lat2.second: i32 sext (i32 1 to i32)
Meet:   %31 = sext i32 %.0 to i64
VisitInstr:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
GetElementPtr:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
Check LatCell: 0
In Meet:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
VisitInstr:   %33 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 0
GetElementPtr:   %33 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 0
Check LatCell: 0
In Meet:   %33 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 0
VisitInstr:   %34 = load double, ptr %33, align 8
Check LatCell: 0
In Meet:   %34 = load double, ptr %33, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = load double, ptr %33, align 8
VisitInstr:   %35 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 0
GetElementPtr:   %35 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 0
Check LatCell: 0
In Meet:   %35 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 0
VisitInstr:   %36 = load double, ptr %35, align 8
Check LatCell: 0
In Meet:   %36 = load double, ptr %35, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = load double, ptr %35, align 8
VisitInstr:   %37 = fsub double %34, %36
BinaryOp:   %37 = fsub double %34, %36
Check LatCell: 0
In Meet:   %37 = fsub double %34, %36, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = fsub double %34, %36
VisitInstr:   %38 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 1
GetElementPtr:   %38 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 1
Check LatCell: 0
In Meet:   %38 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 1
VisitInstr:   %39 = load double, ptr %38, align 8
Check LatCell: 0
In Meet:   %39 = load double, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = load double, ptr %38, align 8
VisitInstr:   %40 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 1
GetElementPtr:   %40 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 1
Check LatCell: 0
In Meet:   %40 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 1
VisitInstr:   %41 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %41 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = load double, ptr %40, align 8
VisitInstr:   %42 = fsub double %39, %41
BinaryOp:   %42 = fsub double %39, %41
Check LatCell: 0
In Meet:   %42 = fsub double %39, %41, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = fsub double %39, %41
VisitInstr:   %43 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 2
GetElementPtr:   %43 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 2
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 2
VisitInstr:   %44 = load double, ptr %43, align 8
Check LatCell: 0
In Meet:   %44 = load double, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = load double, ptr %43, align 8
VisitInstr:   %45 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 2
GetElementPtr:   %45 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 2
Check LatCell: 0
In Meet:   %45 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 2
VisitInstr:   %46 = load double, ptr %45, align 8
Check LatCell: 0
In Meet:   %46 = load double, ptr %45, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = load double, ptr %45, align 8
VisitInstr:   %47 = fsub double %44, %46
BinaryOp:   %47 = fsub double %44, %46
Check LatCell: 0
In Meet:   %47 = fsub double %44, %46, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = fsub double %44, %46
VisitInstr:   %48 = fmul double %42, %42
BinaryOp:   %48 = fmul double %42, %42
Check LatCell: 0
In Meet:   %48 = fmul double %42, %42, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = fmul double %42, %42
VisitInstr:   %49 = call double @llvm.fmuladd.f64(double %37, double %37, double %48)
Check LatCell: 0
In Meet:   %49 = call double @llvm.fmuladd.f64(double %37, double %37, double %48), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = call double @llvm.fmuladd.f64(double %37, double %37, double %48)
VisitInstr:   %50 = call double @llvm.fmuladd.f64(double %47, double %47, double %49)
Check LatCell: 0
In Meet:   %50 = call double @llvm.fmuladd.f64(double %47, double %47, double %49), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = call double @llvm.fmuladd.f64(double %47, double %47, double %49)
VisitInstr:   %51 = call double @sqrt(double noundef %50) #4
Check LatCell: 0
In Meet:   %51 = call double @sqrt(double noundef %50) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = call double @sqrt(double noundef %50) #4
VisitInstr:   %52 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
GetElementPtr:   %52 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
Check LatCell: 0
In Meet:   %52 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
VisitInstr:   %53 = load double, ptr %52, align 8
Check LatCell: 0
In Meet:   %53 = load double, ptr %52, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load double, ptr %52, align 8
VisitInstr:   %54 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 6
GetElementPtr:   %54 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 6
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds %struct.planet, ptr %32, i32 0, i32 6
VisitInstr:   %55 = load double, ptr %54, align 8
Check LatCell: 0
In Meet:   %55 = load double, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load double, ptr %54, align 8
VisitInstr:   %56 = fmul double %53, %55
BinaryOp:   %56 = fmul double %53, %55
Check LatCell: 0
In Meet:   %56 = fmul double %53, %55, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = fmul double %53, %55
VisitInstr:   %57 = fdiv double %56, %51
BinaryOp:   %57 = fdiv double %56, %51
Check LatCell: 0
In Meet:   %57 = fdiv double %56, %51, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = fdiv double %56, %51
VisitInstr:   %58 = fsub double %.1, %57
BinaryOp:   %58 = fsub double %.1, %57
Check LatCell: 0
In Meet:   %58 = fsub double %.1, %57, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = fsub double %.1, %57
Adding SSA:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
VisitInstr:   br label %59
BranchInst:   br label %59
In AddEdge: 0x56435d60f9a0, 0x56435d6118b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %62
BranchInst:   br label %62
In AddEdge: 0x56435d60f9f0, 0x56435d611bf0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %60 = add nsw i32 %.0, 1
BinaryOp:   %60 = add nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %60 = add nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d600e90)
Lat2.second: i32 2
Meet:   %60 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
VisitInstr:   br label %28, !llvm.loop !6
BranchInst:   br label %28, !llvm.loop !6
In AddEdge: 0x56435d611840, 0x56435d611ab0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %63 = add nsw i32 %.01, 1
BinaryOp:   %63 = add nsw i32 %.01, 1
Check LatCell: 0
In Meet:   %63 = add nsw i32 %.01, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %63 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
VisitInstr:   br label %3, !llvm.loop !8
BranchInst:   br label %3, !llvm.loop !8
In AddEdge: 0x56435d611b80, 0x56435d611df0, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
PHI LatOp: 0, 0x56435d5fcfd0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ], Lat1: (0, 0x56435d5fcfd0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
Adding SSA:   ret double %.02
Adding SSA:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02)
Visiting SSA:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
VisitInstr:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
Visiting SSA:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
VisitInstr:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
PHI:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
PHI LatOp: 0, 0x56435d5ff0f0
PHI LatOp: 0, 0x56435d600e90
Check LatCell: 1
In Meet:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ], Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
Adding SSA:   %60 = add nsw i32 %.0, 1
Adding SSA:   %31 = sext i32 %.0 to i64
Adding SSA:   %29 = icmp slt i32 %.0, %0
Visiting SSA:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
PHI:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
PHI LatOp: 0, 0x56435d5fe720
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 1
In Meet:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ], Lat1: (0, 0x56435d5fe720), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
Adding SSA:   %63 = add nsw i32 %.01, 1
Adding SSA:   %27 = add nsw i32 %.01, 1
Adding SSA:   %6 = sext i32 %.01 to i64
Adding SSA:   %4 = icmp slt i32 %.01, %0
Visiting SSA:   ret double %.02
VisitInstr:   ret double %.02
Visiting SSA:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02)
VisitInstr:   %26 = call double @llvm.fmuladd.f64(double %10, double %25, double %.02)
Visiting SSA:   %60 = add nsw i32 %.0, 1
VisitInstr:   %60 = add nsw i32 %.0, 1
BinaryOp:   %60 = add nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %60 = add nsw i32 %.0, 1, Lat1: (0, 0x56435d600e90), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %60 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
Visiting SSA:   %31 = sext i32 %.0 to i64
VisitInstr:   %31 = sext i32 %.0 to i64
UnaryOp:   %31 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %31 = sext i32 %.0 to i64, Lat1: (0, 0x56435d6016b0), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 1 to i32)
Meet:   %31 = sext i32 %.0 to i64
Adding SSA:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
Visiting SSA:   %29 = icmp slt i32 %.0, %0
VisitInstr:   %29 = icmp slt i32 %.0, %0
Visiting SSA:   %63 = add nsw i32 %.01, 1
VisitInstr:   %63 = add nsw i32 %.01, 1
BinaryOp:   %63 = add nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %63 = add nsw i32 %.01, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %63 = add nsw i32 %.01, 1
Adding SSA:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
Visiting SSA:   %27 = add nsw i32 %.01, 1
VisitInstr:   %27 = add nsw i32 %.01, 1
BinaryOp:   %27 = add nsw i32 %.01, 1
Check LatCell: 1
In Meet:   %27 = add nsw i32 %.01, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %27 = add nsw i32 %.01, 1
Visiting SSA:   %6 = sext i32 %.01 to i64
VisitInstr:   %6 = sext i32 %.01 to i64
UnaryOp:   %6 = sext i32 %.01 to i64
Check LatCell: 1
In Meet:   %6 = sext i32 %.01 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %6 = sext i32 %.01 to i64
Adding SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Visiting SSA:   %4 = icmp slt i32 %.01, %0
VisitInstr:   %4 = icmp slt i32 %.01, %0
Visiting SSA:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
VisitInstr:   %.0 = phi i32 [ %27, %5 ], [ %60, %59 ]
Visiting SSA:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
VisitInstr:   %32 = getelementptr inbounds %struct.planet, ptr %1, i64 %31
Visiting SSA:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
VisitInstr:   %.01 = phi i32 [ 0, %2 ], [ %63, %62 ]
Visiting SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitSCCP running on offset_momentum
Visiting BB: 
VisitInstr:   br label %3
BranchInst:   br label %3
In AddEdge: 0x56435d612140, 0x56435d612890, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
PHI:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
Check LatCell: 0
In Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fcfd0)
Lat2.second: double 0.000000e+00
Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
Check LatCell: 0
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fcfd0)
Lat2.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
VisitInstr:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
PHI:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
Check LatCell: 0
In Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fcfd0)
Lat2.second: double 0.000000e+00
Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
PHI:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
PHI LatOp: 0, 0x56435d5fe720
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5fe720)
Lat2.second: i32 0
Meet:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
VisitInstr:   %4 = icmp slt i32 %.0, %0
CmpInst:   %4 = icmp slt i32 %.0, %0
Check LatCell: 0
In Meet:   %4 = icmp slt i32 %.0, %0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = icmp slt i32 %.0, %0
VisitInstr:   br i1 %4, label %5, label %35
BranchInst:   br i1 %4, label %5, label %35
In BranchInst: -1, 0x0
In AddEdge: 0x56435d612270, 0x56435d612b90, 0
Adding edge:  -> 
In AddEdge: 0x56435d612270, 0x56435d612b90, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %6 = sext i32 %.0 to i64
UnaryOp:   %6 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %6 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %6 = sext i32 %.0 to i64
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
GetElementPtr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Check LatCell: 0
In Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
GetElementPtr:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
Check LatCell: 0
In Meet:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 3
VisitInstr:   %9 = load double, ptr %8, align 8
Check LatCell: 0
In Meet:   %9 = load double, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load double, ptr %8, align 8
VisitInstr:   %10 = sext i32 %.0 to i64
UnaryOp:   %10 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %10 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %10 = sext i32 %.0 to i64
VisitInstr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
GetElementPtr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
Check LatCell: 0
In Meet:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
VisitInstr:   %12 = getelementptr inbounds %struct.planet, ptr %11, i32 0, i32 6
GetElementPtr:   %12 = getelementptr inbounds %struct.planet, ptr %11, i32 0, i32 6
Check LatCell: 0
In Meet:   %12 = getelementptr inbounds %struct.planet, ptr %11, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = getelementptr inbounds %struct.planet, ptr %11, i32 0, i32 6
VisitInstr:   %13 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %13 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load double, ptr %12, align 8
VisitInstr:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02)
Check LatCell: 0
In Meet:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02)
Adding SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
VisitInstr:   %15 = sext i32 %.0 to i64
UnaryOp:   %15 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %15 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %15 = sext i32 %.0 to i64
VisitInstr:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
GetElementPtr:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
Check LatCell: 0
In Meet:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
VisitInstr:   %17 = getelementptr inbounds %struct.planet, ptr %16, i32 0, i32 4
GetElementPtr:   %17 = getelementptr inbounds %struct.planet, ptr %16, i32 0, i32 4
Check LatCell: 0
In Meet:   %17 = getelementptr inbounds %struct.planet, ptr %16, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = getelementptr inbounds %struct.planet, ptr %16, i32 0, i32 4
VisitInstr:   %18 = load double, ptr %17, align 8
Check LatCell: 0
In Meet:   %18 = load double, ptr %17, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load double, ptr %17, align 8
VisitInstr:   %19 = sext i32 %.0 to i64
UnaryOp:   %19 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %19 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %19 = sext i32 %.0 to i64
VisitInstr:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
GetElementPtr:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
VisitInstr:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
GetElementPtr:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
VisitInstr:   %22 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %21, align 8
VisitInstr:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03)
Check LatCell: 0
In Meet:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03)
Adding SSA:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
VisitInstr:   %24 = sext i32 %.0 to i64
UnaryOp:   %24 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %24 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %24 = sext i32 %.0 to i64
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
GetElementPtr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
Check LatCell: 0
In Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
VisitInstr:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 5
GetElementPtr:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 5
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 5
VisitInstr:   %27 = load double, ptr %26, align 8
Check LatCell: 0
In Meet:   %27 = load double, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = load double, ptr %26, align 8
VisitInstr:   %28 = sext i32 %.0 to i64
UnaryOp:   %28 = sext i32 %.0 to i64
Check LatCell: 0
In Meet:   %28 = sext i32 %.0 to i64, Lat1: (1, 0x0), Lat2: (0, 0x56435d601010)
Lat2.second: i32 sext (i32 0 to i32)
Meet:   %28 = sext i32 %.0 to i64
VisitInstr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
GetElementPtr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
Check LatCell: 0
In Meet:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
VisitInstr:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 6
GetElementPtr:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 6
Check LatCell: 0
In Meet:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 6
VisitInstr:   %31 = load double, ptr %30, align 8
Check LatCell: 0
In Meet:   %31 = load double, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = load double, ptr %30, align 8
VisitInstr:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01)
Check LatCell: 0
In Meet:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01)
Adding SSA:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
VisitInstr:   br label %33
BranchInst:   br label %33
In AddEdge: 0x56435d612a50, 0x56435d614540, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %36 = fneg double %.02
UnaryOp:   %36 = fneg double %.02
Check LatCell: 0
In Meet:   %36 = fneg double %.02, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %36 = fneg double %.02
VisitInstr:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
BinaryOp:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
VisitInstr:   %38 = getelementptr inbounds %struct.planet, ptr %1, i64 0
GetElementPtr:   %38 = getelementptr inbounds %struct.planet, ptr %1, i64 0
Check LatCell: 0
In Meet:   %38 = getelementptr inbounds %struct.planet, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = getelementptr inbounds %struct.planet, ptr %1, i64 0
VisitInstr:   %39 = getelementptr inbounds %struct.planet, ptr %38, i32 0, i32 3
GetElementPtr:   %39 = getelementptr inbounds %struct.planet, ptr %38, i32 0, i32 3
Check LatCell: 0
In Meet:   %39 = getelementptr inbounds %struct.planet, ptr %38, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = getelementptr inbounds %struct.planet, ptr %38, i32 0, i32 3
VisitInstr:   store double %37, ptr %39, align 8
Check LatCell: 0
In Meet:   store double %37, ptr %39, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %37, ptr %39, align 8
VisitInstr:   %40 = fneg double %.03
UnaryOp:   %40 = fneg double %.03
Check LatCell: 0
In Meet:   %40 = fneg double %.03, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %40 = fneg double %.03
VisitInstr:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
BinaryOp:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
VisitInstr:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 0
GetElementPtr:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 0
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds %struct.planet, ptr %1, i64 0
VisitInstr:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 4
GetElementPtr:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 4
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 4
VisitInstr:   store double %41, ptr %43, align 8
Check LatCell: 0
In Meet:   store double %41, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %41, ptr %43, align 8
VisitInstr:   %44 = fneg double %.01
UnaryOp:   %44 = fneg double %.01
Check LatCell: 0
In Meet:   %44 = fneg double %.01, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %44 = fneg double %.01
VisitInstr:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
BinaryOp:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (0, 0x56435d6116e0)
Lat2.second: double -0.000000e+00
Meet:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
VisitInstr:   %46 = getelementptr inbounds %struct.planet, ptr %1, i64 0
GetElementPtr:   %46 = getelementptr inbounds %struct.planet, ptr %1, i64 0
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds %struct.planet, ptr %1, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds %struct.planet, ptr %1, i64 0
VisitInstr:   %47 = getelementptr inbounds %struct.planet, ptr %46, i32 0, i32 5
GetElementPtr:   %47 = getelementptr inbounds %struct.planet, ptr %46, i32 0, i32 5
Check LatCell: 0
In Meet:   %47 = getelementptr inbounds %struct.planet, ptr %46, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = getelementptr inbounds %struct.planet, ptr %46, i32 0, i32 5
VisitInstr:   store double %45, ptr %47, align 8
Check LatCell: 0
In Meet:   store double %45, ptr %47, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %45, ptr %47, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   %34 = add nsw i32 %.0, 1
BinaryOp:   %34 = add nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %34 = add nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %34 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
VisitInstr:   br label %3, !llvm.loop !6
BranchInst:   br label %3, !llvm.loop !6
In AddEdge: 0x56435d6144d0, 0x56435d614740, 0
Adding edge:  -> 
Visiting SSA:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
VisitInstr:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
PHI:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ], Lat1: (0, 0x56435d5fcfd0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.02 = phi double [ 0.000000e+00, %2 ], [ %14, %33 ]
Adding SSA:   %36 = fneg double %.02
Adding SSA:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02)
Visiting SSA:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
VisitInstr:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
PHI:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ], Lat1: (0, 0x56435d5fcfd0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
Adding SSA:   %40 = fneg double %.03
Adding SSA:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03)
Visiting SSA:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
VisitInstr:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
PHI:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
PHI LatOp: 0, 0x56435d5fcfd0
PHI LatOp: -1, 0x0
Check LatCell: 1
In Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ], Lat1: (0, 0x56435d5fcfd0), Lat2: (-1, 0x0)
Lat1.second: double 0.000000e+00
Meet:   %.01 = phi double [ 0.000000e+00, %2 ], [ %32, %33 ]
Adding SSA:   %44 = fneg double %.01
Adding SSA:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01)
Visiting SSA:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
PHI:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
PHI LatOp: 0, 0x56435d5fe720
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ], Lat1: (0, 0x56435d5fe720), Lat2: (-1, 0x0)
Lat1.second: i32 0
Meet:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
Adding SSA:   %34 = add nsw i32 %.0, 1
Adding SSA:   %28 = sext i32 %.0 to i64
Adding SSA:   %24 = sext i32 %.0 to i64
Adding SSA:   %19 = sext i32 %.0 to i64
Adding SSA:   %15 = sext i32 %.0 to i64
Adding SSA:   %10 = sext i32 %.0 to i64
Adding SSA:   %6 = sext i32 %.0 to i64
Adding SSA:   %4 = icmp slt i32 %.0, %0
Visiting SSA:   %36 = fneg double %.02
VisitInstr:   %36 = fneg double %.02
UnaryOp:   %36 = fneg double %.02
Check LatCell: 1
In Meet:   %36 = fneg double %.02, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %36 = fneg double %.02
Adding SSA:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
Visiting SSA:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02)
VisitInstr:   %14 = call double @llvm.fmuladd.f64(double %9, double %13, double %.02)
Visiting SSA:   %40 = fneg double %.03
VisitInstr:   %40 = fneg double %.03
UnaryOp:   %40 = fneg double %.03
Check LatCell: 1
In Meet:   %40 = fneg double %.03, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %40 = fneg double %.03
Adding SSA:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
Visiting SSA:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03)
VisitInstr:   %23 = call double @llvm.fmuladd.f64(double %18, double %22, double %.03)
Visiting SSA:   %44 = fneg double %.01
VisitInstr:   %44 = fneg double %.01
UnaryOp:   %44 = fneg double %.01
Check LatCell: 1
In Meet:   %44 = fneg double %.01, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %44 = fneg double %.01
Adding SSA:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
Visiting SSA:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01)
VisitInstr:   %32 = call double @llvm.fmuladd.f64(double %27, double %31, double %.01)
Visiting SSA:   %34 = add nsw i32 %.0, 1
VisitInstr:   %34 = add nsw i32 %.0, 1
BinaryOp:   %34 = add nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %34 = add nsw i32 %.0, 1, Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %34 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
Visiting SSA:   %28 = sext i32 %.0 to i64
VisitInstr:   %28 = sext i32 %.0 to i64
UnaryOp:   %28 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %28 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %28 = sext i32 %.0 to i64
Adding SSA:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
Visiting SSA:   %24 = sext i32 %.0 to i64
VisitInstr:   %24 = sext i32 %.0 to i64
UnaryOp:   %24 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %24 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %24 = sext i32 %.0 to i64
Adding SSA:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
Visiting SSA:   %19 = sext i32 %.0 to i64
VisitInstr:   %19 = sext i32 %.0 to i64
UnaryOp:   %19 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %19 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %19 = sext i32 %.0 to i64
Adding SSA:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
Visiting SSA:   %15 = sext i32 %.0 to i64
VisitInstr:   %15 = sext i32 %.0 to i64
UnaryOp:   %15 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %15 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %15 = sext i32 %.0 to i64
Adding SSA:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
Visiting SSA:   %10 = sext i32 %.0 to i64
VisitInstr:   %10 = sext i32 %.0 to i64
UnaryOp:   %10 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %10 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %10 = sext i32 %.0 to i64
Adding SSA:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
Visiting SSA:   %6 = sext i32 %.0 to i64
VisitInstr:   %6 = sext i32 %.0 to i64
UnaryOp:   %6 = sext i32 %.0 to i64
Check LatCell: 1
In Meet:   %6 = sext i32 %.0 to i64, Lat1: (0, 0x56435d601010), Lat2: (-1, 0x0)
Lat1.second: i32 sext (i32 0 to i32)
Meet:   %6 = sext i32 %.0 to i64
Adding SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Visiting SSA:   %4 = icmp slt i32 %.0, %0
VisitInstr:   %4 = icmp slt i32 %.0, %0
Visiting SSA:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
VisitInstr:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
BinaryOp:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %37 = fdiv double %36, 0x4043BD3CC9BE45DE
Adding SSA:   store double %37, ptr %39, align 8
Visiting SSA:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
VisitInstr:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
BinaryOp:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %41 = fdiv double %40, 0x4043BD3CC9BE45DE
Adding SSA:   store double %41, ptr %43, align 8
Visiting SSA:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
VisitInstr:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
BinaryOp:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
Check LatCell: 1
In Meet:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE, Lat1: (0, 0x56435d6116e0), Lat2: (-1, 0x0)
Lat1.second: double -0.000000e+00
Meet:   %45 = fdiv double %44, 0x4043BD3CC9BE45DE
Adding SSA:   store double %45, ptr %47, align 8
Visiting SSA:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
VisitInstr:   %.0 = phi i32 [ 0, %2 ], [ %34, %33 ]
Visiting SSA:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
VisitInstr:   %29 = getelementptr inbounds %struct.planet, ptr %1, i64 %28
Visiting SSA:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
VisitInstr:   %25 = getelementptr inbounds %struct.planet, ptr %1, i64 %24
Visiting SSA:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
VisitInstr:   %20 = getelementptr inbounds %struct.planet, ptr %1, i64 %19
Visiting SSA:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
VisitInstr:   %16 = getelementptr inbounds %struct.planet, ptr %1, i64 %15
Visiting SSA:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
VisitInstr:   %11 = getelementptr inbounds %struct.planet, ptr %1, i64 %10
Visiting SSA:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
VisitInstr:   %7 = getelementptr inbounds %struct.planet, ptr %1, i64 %6
Visiting SSA:   store double %37, ptr %39, align 8
VisitInstr:   store double %37, ptr %39, align 8
Visiting SSA:   store double %41, ptr %43, align 8
VisitInstr:   store double %41, ptr %43, align 8
Visiting SSA:   store double %45, ptr %47, align 8
VisitInstr:   store double %45, ptr %47, align 8
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitSCCP running on main
Visiting BB: 
VisitInstr:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %3 = call double @energy(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   %3 = call double @energy(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = call double @energy(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %3)
Check LatCell: 0
In Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %3), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %3)
VisitInstr:   br label %5
BranchInst:   br label %5
In AddEdge: 0x56435d6155d0, 0x56435d616090, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
PHI:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
PHI LatOp: 0, 0x56435d5ff0f0
Check LatCell: 0
In Meet:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ], Lat1: (1, 0x0), Lat2: (0, 0x56435d5ff0f0)
Lat2.second: i32 1
Meet:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
VisitInstr:   %6 = icmp sle i32 %.0, 5000000
CmpInst:   %6 = icmp sle i32 %.0, 5000000
Check LatCell: 0
In Meet:   %6 = icmp sle i32 %.0, 5000000, Lat1: (1, 0x0), Lat2: (0, 0x56435d58c260)
Lat2.second: i1 true
Meet:   %6 = icmp sle i32 %.0, 5000000
VisitInstr:   br i1 %6, label %7, label %10
BranchInst:   br i1 %6, label %7, label %10
In BranchInst: 0, 0x56435d58c260
In AddEdge: 0x56435d616020, 0x56435d616390, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02)
Check LatCell: 0
In Meet:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02)
VisitInstr:   br label %8
BranchInst:   br label %8
In AddEdge: 0x56435d616250, 0x56435d6165c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %9 = add nsw i32 %.0, 1
BinaryOp:   %9 = add nsw i32 %.0, 1
Check LatCell: 0
In Meet:   %9 = add nsw i32 %.0, 1, Lat1: (1, 0x0), Lat2: (0, 0x56435d600e90)
Lat2.second: i32 2
Meet:   %9 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
VisitInstr:   br label %5, !llvm.loop !6
BranchInst:   br label %5, !llvm.loop !6
In AddEdge: 0x56435d616510, 0x56435d616730, 0
Adding edge:  -> 
Visiting SSA:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
PHI:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
PHI LatOp: 0, 0x56435d5ff0f0
PHI LatOp: 0, 0x56435d600e90
Check LatCell: 1
In Meet:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ], Lat1: (0, 0x56435d5ff0f0), Lat2: (-1, 0x0)
Lat1.second: i32 1
Meet:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
Adding SSA:   %9 = add nsw i32 %.0, 1
Adding SSA:   %6 = icmp sle i32 %.0, 5000000
Visiting SSA:   %9 = add nsw i32 %.0, 1
VisitInstr:   %9 = add nsw i32 %.0, 1
BinaryOp:   %9 = add nsw i32 %.0, 1
Check LatCell: 1
In Meet:   %9 = add nsw i32 %.0, 1, Lat1: (0, 0x56435d600e90), Lat2: (-1, 0x0)
Lat1.second: i32 2
Meet:   %9 = add nsw i32 %.0, 1
Adding SSA:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
Visiting SSA:   %6 = icmp sle i32 %.0, 5000000
VisitInstr:   %6 = icmp sle i32 %.0, 5000000
CmpInst:   %6 = icmp sle i32 %.0, 5000000
Check LatCell: 1
In Meet:   %6 = icmp sle i32 %.0, 5000000, Lat1: (0, 0x56435d58c260), Lat2: (-1, 0x0)
Lat1.second: i1 true
Meet:   %6 = icmp sle i32 %.0, 5000000
Adding SSA:   br i1 %6, label %7, label %10
Visiting SSA:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
VisitInstr:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
Visiting SSA:   br i1 %6, label %7, label %10
VisitInstr:   br i1 %6, label %7, label %10
BranchInst:   br i1 %6, label %7, label %10
In BranchInst: -1, 0x0
In AddEdge: 0x56435d616020, 0x56435d616390, 0
In AddEdge: 0x56435d616020, 0x56435d616390, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %11 = call double @energy(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   %11 = call double @energy(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = call double @energy(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %12 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %11)
Check LatCell: 0
In Meet:   %12 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %11), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %11)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
----------------------------------------
Running licm only: n-body.c
UnitLICM running on advance
******************************************************
UnitLoopAnalysis running on advance
[LoopLoopAnalysis] parent loop header is:   %.01 = phi i32 [ 0, %3 ], [ %80, %79 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi i32 [ 0, %81 ], [ %103, %102 ]
[LoopLoopAnalysis] parent loop header is:   %.0 = phi i32 [ %9, %6 ], [ %77, %76 ]
Instruction to be moved:   %15 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 0
Instruction to be moved:   %20 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 1
Instruction to be moved:   %25 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 2
Instruction to be moved:   %40 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 3
Instruction to be moved:   %47 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 4
Instruction to be moved:   %54 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 5
Instruction to be moved:   %58 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
Instruction to be moved:   %64 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
Instruction to be moved:   %70 = getelementptr inbounds %struct.planet, ptr %8, i32 0, i32 6
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 9
UnitLICM running on energy
******************************************************
UnitLoopAnalysis running on energy
[LoopLoopAnalysis] parent loop header is:   %.02 = phi double [ 0.000000e+00, %2 ], [ %.1, %62 ]
[LoopLoopAnalysis] It has child loop header : ^-  %.1 = phi double [ %26, %5 ], [ %58, %59 ]
[LoopLoopAnalysis] parent loop header is:   %.1 = phi double [ %26, %5 ], [ %58, %59 ]
Instruction to be moved:   %33 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 0
Instruction to be moved:   %38 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 1
Instruction to be moved:   %43 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 2
Instruction to be moved:   %52 = getelementptr inbounds %struct.planet, ptr %7, i32 0, i32 6
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 13
UnitLICM running on offset_momentum
******************************************************
UnitLoopAnalysis running on offset_momentum
[LoopLoopAnalysis] parent loop header is:   %.03 = phi double [ 0.000000e+00, %2 ], [ %23, %33 ]
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 13
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %.0 = phi i32 [ 1, %2 ], [ %9, %8 ]
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 0
[UnitLICM]: NumComputeHoisted: 0
[UnitLICM]: Total: 13
----------------------------------------
Running sccp and licm: n-body.c
UnitLICM running on advance
******************************************************
UnitLoopAnalysis running on advance
[LoopLoopAnalysis] parent loop header is:   %18 = load i32, ptr %7, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %29 = load i32, ptr %8, align 4
[LoopLoopAnalysis] parent loop header is:   %147 = load i32, ptr %7, align 4
[LoopLoopAnalysis] parent loop header is:   %29 = load i32, ptr %8, align 4
Instruction to be moved:   %29 = load i32, ptr %8, align 4
Instruction to be moved:   %30 = load i32, ptr %4, align 4
Instruction to be moved:   %31 = icmp slt i32 %28, %29
Instruction to be moved:   %33 = load ptr, ptr %5, align 8
Instruction to be moved:   %34 = load i32, ptr %8, align 4
Instruction to be moved:   %35 = sext i32 %32 to i64
Instruction to be moved:   %36 = getelementptr inbounds %struct.planet, ptr %31, i64 %33
Instruction to be moved:   %37 = load ptr, ptr %9, align 8
Instruction to be moved:   %38 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0
Instruction to be moved:   %40 = load ptr, ptr %10, align 8
Instruction to be moved:   %41 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 0
Instruction to be moved:   %44 = load ptr, ptr %9, align 8
Instruction to be moved:   %45 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1
Instruction to be moved:   %47 = load ptr, ptr %10, align 8
Instruction to be moved:   %48 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 1
Instruction to be moved:   %51 = load ptr, ptr %9, align 8
Instruction to be moved:   %52 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2
Instruction to be moved:   %54 = load ptr, ptr %10, align 8
Instruction to be moved:   %55 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 2
Instruction to be moved:   %58 = load double, ptr %11, align 8
Instruction to be moved:   %59 = load double, ptr %11, align 8
Instruction to be moved:   %60 = load double, ptr %12, align 8
Instruction to be moved:   %61 = load double, ptr %12, align 8
Instruction to be moved:   %62 = fmul double %49, %50
Instruction to be moved:   %64 = load double, ptr %13, align 8
Instruction to be moved:   %65 = load double, ptr %13, align 8
Instruction to be moved:   %68 = load double, ptr %6, align 8
Instruction to be moved:   %69 = load double, ptr %14, align 8
Instruction to be moved:   %70 = load double, ptr %14, align 8
Instruction to be moved:   %71 = fmul double %55, %56
Instruction to be moved:   %72 = load double, ptr %14, align 8
Instruction to be moved:   %73 = fmul double %57, %58
Instruction to be moved:   %74 = fdiv double %54, %59
Instruction to be moved:   %75 = load double, ptr %11, align 8
Instruction to be moved:   %76 = load ptr, ptr %10, align 8
Instruction to be moved:   %77 = getelementptr inbounds %struct.planet, ptr %62, i32 0, i32 6
Instruction to be moved:   %80 = load double, ptr %15, align 8
Instruction to be moved:   %81 = load ptr, ptr %9, align 8
Instruction to be moved:   %82 = getelementptr inbounds %struct.planet, ptr %65, i32 0, i32 3
Instruction to be moved:   %86 = load double, ptr %12, align 8
Instruction to be moved:   %87 = load ptr, ptr %10, align 8
Instruction to be moved:   %88 = getelementptr inbounds %struct.planet, ptr %68, i32 0, i32 6
Instruction to be moved:   %91 = load double, ptr %15, align 8
Instruction to be moved:   %92 = load ptr, ptr %9, align 8
Instruction to be moved:   %93 = getelementptr inbounds %struct.planet, ptr %71, i32 0, i32 4
Instruction to be moved:   %97 = load double, ptr %13, align 8
Instruction to be moved:   %98 = load ptr, ptr %10, align 8
Instruction to be moved:   %99 = getelementptr inbounds %struct.planet, ptr %74, i32 0, i32 6
Instruction to be moved:   %102 = load double, ptr %15, align 8
Instruction to be moved:   %103 = load ptr, ptr %9, align 8
Instruction to be moved:   %104 = getelementptr inbounds %struct.planet, ptr %77, i32 0, i32 5
Instruction to be moved:   %108 = load double, ptr %11, align 8
Instruction to be moved:   %109 = load ptr, ptr %9, align 8
Instruction to be moved:   %110 = getelementptr inbounds %struct.planet, ptr %80, i32 0, i32 6
Instruction to be moved:   %113 = load double, ptr %15, align 8
Instruction to be moved:   %114 = load ptr, ptr %10, align 8
Instruction to be moved:   %115 = getelementptr inbounds %struct.planet, ptr %83, i32 0, i32 3
Instruction to be moved:   %118 = load double, ptr %12, align 8
Instruction to be moved:   %119 = load ptr, ptr %9, align 8
Instruction to be moved:   %120 = getelementptr inbounds %struct.planet, ptr %86, i32 0, i32 6
Instruction to be moved:   %123 = load double, ptr %15, align 8
Instruction to be moved:   %124 = load ptr, ptr %10, align 8
Instruction to be moved:   %125 = getelementptr inbounds %struct.planet, ptr %89, i32 0, i32 4
Instruction to be moved:   %128 = load double, ptr %13, align 8
Instruction to be moved:   %129 = load ptr, ptr %9, align 8
Instruction to be moved:   %130 = getelementptr inbounds %struct.planet, ptr %92, i32 0, i32 6
Instruction to be moved:   %133 = load double, ptr %15, align 8
Instruction to be moved:   %134 = load ptr, ptr %10, align 8
Instruction to be moved:   %135 = getelementptr inbounds %struct.planet, ptr %95, i32 0, i32 5
Instruction to be moved:   %139 = load i32, ptr %8, align 4
Instruction to be moved:   %140 = add nsw i32 %97, 1
Instruction to be moved:   %18 = load i32, ptr %7, align 4
Instruction to be moved:   %19 = load i32, ptr %4, align 4
Instruction to be moved:   %20 = icmp slt i32 %17, %18
Instruction to be moved:   %22 = load ptr, ptr %5, align 8
Instruction to be moved:   %23 = load i32, ptr %7, align 4
Instruction to be moved:   %24 = sext i32 %21 to i64
Instruction to be moved:   %25 = getelementptr inbounds %struct.planet, ptr %20, i64 %22
Instruction to be moved:   %26 = load i32, ptr %7, align 4
Instruction to be moved:   %27 = add nsw i32 %24, 1
Instruction to be moved:   %28 = load i32, ptr %8, align 4
Instruction to be moved:   %29 = load i32, ptr %4, align 4
Instruction to be moved:   %30 = icmp slt i32 %26, %27
Instruction to be moved:   %31 = load ptr, ptr %5, align 8
Instruction to be moved:   %32 = load i32, ptr %8, align 4
Instruction to be moved:   %33 = sext i32 %30 to i64
Instruction to be moved:   %34 = getelementptr inbounds %struct.planet, ptr %29, i64 %31
Instruction to be moved:   %35 = load ptr, ptr %9, align 8
Instruction to be moved:   %36 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 0
Instruction to be moved:   %37 = load ptr, ptr %10, align 8
Instruction to be moved:   %38 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0
Instruction to be moved:   %39 = load ptr, ptr %9, align 8
Instruction to be moved:   %40 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 1
Instruction to be moved:   %41 = load ptr, ptr %10, align 8
Instruction to be moved:   %42 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1
Instruction to be moved:   %43 = load ptr, ptr %9, align 8
Instruction to be moved:   %44 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 2
Instruction to be moved:   %45 = load ptr, ptr %10, align 8
Instruction to be moved:   %46 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2
Instruction to be moved:   %47 = load double, ptr %11, align 8
Instruction to be moved:   %48 = load double, ptr %11, align 8
Instruction to be moved:   %49 = load double, ptr %12, align 8
Instruction to be moved:   %50 = load double, ptr %12, align 8
Instruction to be moved:   %51 = fmul double %47, %48
Instruction to be moved:   %52 = load double, ptr %13, align 8
Instruction to be moved:   %53 = load double, ptr %13, align 8
Instruction to be moved:   %54 = load double, ptr %6, align 8
Instruction to be moved:   %55 = load double, ptr %14, align 8
Instruction to be moved:   %56 = load double, ptr %14, align 8
Instruction to be moved:   %57 = fmul double %53, %54
Instruction to be moved:   %58 = load double, ptr %14, align 8
Instruction to be moved:   %59 = fmul double %55, %56
Instruction to be moved:   %60 = fdiv double %52, %57
Instruction to be moved:   %61 = load double, ptr %11, align 8
Instruction to be moved:   %62 = load ptr, ptr %10, align 8
Instruction to be moved:   %63 = getelementptr inbounds %struct.planet, ptr %60, i32 0, i32 6
Instruction to be moved:   %64 = load double, ptr %15, align 8
Instruction to be moved:   %65 = load ptr, ptr %9, align 8
Instruction to be moved:   %66 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 3
Instruction to be moved:   %67 = load double, ptr %12, align 8
Instruction to be moved:   %68 = load ptr, ptr %10, align 8
Instruction to be moved:   %69 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
Instruction to be moved:   %70 = load double, ptr %15, align 8
Instruction to be moved:   %71 = load ptr, ptr %9, align 8
Instruction to be moved:   %72 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 4
Instruction to be moved:   %73 = load double, ptr %13, align 8
Instruction to be moved:   %74 = load ptr, ptr %10, align 8
Instruction to be moved:   %75 = getelementptr inbounds %struct.planet, ptr %72, i32 0, i32 6
Instruction to be moved:   %76 = load double, ptr %15, align 8
Instruction to be moved:   %77 = load ptr, ptr %9, align 8
Instruction to be moved:   %78 = getelementptr inbounds %struct.planet, ptr %75, i32 0, i32 5
Instruction to be moved:   %79 = load double, ptr %11, align 8
Instruction to be moved:   %80 = load ptr, ptr %9, align 8
Instruction to be moved:   %81 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6
Instruction to be moved:   %82 = load double, ptr %15, align 8
Instruction to be moved:   %83 = load ptr, ptr %10, align 8
Instruction to be moved:   %84 = getelementptr inbounds %struct.planet, ptr %81, i32 0, i32 3
Instruction to be moved:   %85 = load double, ptr %12, align 8
Instruction to be moved:   %86 = load ptr, ptr %9, align 8
Instruction to be moved:   %87 = getelementptr inbounds %struct.planet, ptr %84, i32 0, i32 6
Instruction to be moved:   %88 = load double, ptr %15, align 8
Instruction to be moved:   %89 = load ptr, ptr %10, align 8
Instruction to be moved:   %90 = getelementptr inbounds %struct.planet, ptr %87, i32 0, i32 4
Instruction to be moved:   %91 = load double, ptr %13, align 8
Instruction to be moved:   %92 = load ptr, ptr %9, align 8
Instruction to be moved:   %93 = getelementptr inbounds %struct.planet, ptr %90, i32 0, i32 6
Instruction to be moved:   %94 = load double, ptr %15, align 8
Instruction to be moved:   %95 = load ptr, ptr %10, align 8
Instruction to be moved:   %96 = getelementptr inbounds %struct.planet, ptr %93, i32 0, i32 5
Instruction to be moved:   %97 = load i32, ptr %8, align 4
Instruction to be moved:   %98 = add nsw i32 %95, 1
Instruction to be moved:   %143 = load i32, ptr %7, align 4
Instruction to be moved:   %144 = add nsw i32 %97, 1
Instruction to be moved:   %147 = load i32, ptr %7, align 4
Instruction to be moved:   %148 = load i32, ptr %4, align 4
Instruction to be moved:   %149 = icmp slt i32 %146, %147
Instruction to be moved:   %151 = load ptr, ptr %5, align 8
Instruction to be moved:   %152 = load i32, ptr %7, align 4
Instruction to be moved:   %153 = sext i32 %150 to i64
Instruction to be moved:   %154 = getelementptr inbounds %struct.planet, ptr %149, i64 %151
Instruction to be moved:   %155 = load double, ptr %6, align 8
Instruction to be moved:   %156 = load ptr, ptr %16, align 8
Instruction to be moved:   %157 = getelementptr inbounds %struct.planet, ptr %154, i32 0, i32 3
Instruction to be moved:   %159 = load ptr, ptr %16, align 8
Instruction to be moved:   %160 = getelementptr inbounds %struct.planet, ptr %156, i32 0, i32 0
Instruction to be moved:   %163 = load double, ptr %6, align 8
Instruction to be moved:   %164 = load ptr, ptr %16, align 8
Instruction to be moved:   %165 = getelementptr inbounds %struct.planet, ptr %159, i32 0, i32 4
Instruction to be moved:   %167 = load ptr, ptr %16, align 8
Instruction to be moved:   %168 = getelementptr inbounds %struct.planet, ptr %161, i32 0, i32 1
Instruction to be moved:   %171 = load double, ptr %6, align 8
Instruction to be moved:   %172 = load ptr, ptr %16, align 8
Instruction to be moved:   %173 = getelementptr inbounds %struct.planet, ptr %164, i32 0, i32 5
Instruction to be moved:   %175 = load ptr, ptr %16, align 8
Instruction to be moved:   %176 = getelementptr inbounds %struct.planet, ptr %166, i32 0, i32 2
Instruction to be moved:   %180 = load i32, ptr %7, align 4
Instruction to be moved:   %181 = add nsw i32 %168, 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 110
[UnitLICM]: NumComputeHoisted: 17
[UnitLICM]: Total: 177
UnitSCCP running on advance
Visiting BB: 
VisitInstr:   %4 = alloca i32, align 4
Check LatCell: 0
In Meet:   %4 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca i32, align 4
VisitInstr:   %5 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %5 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca ptr, align 8
VisitInstr:   %6 = alloca double, align 8
Check LatCell: 0
In Meet:   %6 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca double, align 8
VisitInstr:   %7 = alloca i32, align 4
Check LatCell: 0
In Meet:   %7 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i32, align 4
VisitInstr:   %8 = alloca i32, align 4
Check LatCell: 0
In Meet:   %8 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca i32, align 4
VisitInstr:   %9 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %9 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = alloca ptr, align 8
VisitInstr:   %10 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %10 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = alloca ptr, align 8
VisitInstr:   %11 = alloca double, align 8
Check LatCell: 0
In Meet:   %11 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = alloca double, align 8
VisitInstr:   %12 = alloca double, align 8
Check LatCell: 0
In Meet:   %12 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = alloca double, align 8
VisitInstr:   %13 = alloca double, align 8
Check LatCell: 0
In Meet:   %13 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = alloca double, align 8
VisitInstr:   %14 = alloca double, align 8
Check LatCell: 0
In Meet:   %14 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = alloca double, align 8
VisitInstr:   %15 = alloca double, align 8
Check LatCell: 0
In Meet:   %15 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = alloca double, align 8
VisitInstr:   %16 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %16 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = alloca ptr, align 8
VisitInstr:   store i32 %0, ptr %4, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %4, align 4
VisitInstr:   store ptr %1, ptr %5, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %5, align 8
VisitInstr:   store double %2, ptr %6, align 8
Check LatCell: 0
In Meet:   store double %2, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %2, ptr %6, align 8
VisitInstr:   store i32 0, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %7, align 4
VisitInstr:   %17 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %17 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load i32, ptr %7, align 4
VisitInstr:   %18 = load i32, ptr %4, align 4
Check LatCell: 0
In Meet:   %18 = load i32, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load i32, ptr %4, align 4
VisitInstr:   %19 = icmp slt i32 %17, %18
CmpInst:   %19 = icmp slt i32 %17, %18
Check LatCell: 0
In Meet:   %19 = icmp slt i32 %17, %18, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = icmp slt i32 %17, %18
VisitInstr:   %20 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %20 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = load ptr, ptr %5, align 8
VisitInstr:   %21 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %21 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = load i32, ptr %7, align 4
VisitInstr:   %22 = sext i32 %21 to i64
UnaryOp:   %22 = sext i32 %21 to i64
Check LatCell: 0
In Meet:   %22 = sext i32 %21 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = sext i32 %21 to i64
VisitInstr:   %23 = getelementptr inbounds %struct.planet, ptr %20, i64 %22
GetElementPtr:   %23 = getelementptr inbounds %struct.planet, ptr %20, i64 %22
Check LatCell: 0
In Meet:   %23 = getelementptr inbounds %struct.planet, ptr %20, i64 %22, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = getelementptr inbounds %struct.planet, ptr %20, i64 %22
VisitInstr:   %24 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %24 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = load i32, ptr %7, align 4
VisitInstr:   %25 = add nsw i32 %24, 1
BinaryOp:   %25 = add nsw i32 %24, 1
Check LatCell: 0
In Meet:   %25 = add nsw i32 %24, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = add nsw i32 %24, 1
VisitInstr:   %26 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %26 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = load i32, ptr %8, align 4
VisitInstr:   %27 = load i32, ptr %4, align 4
Check LatCell: 0
In Meet:   %27 = load i32, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = load i32, ptr %4, align 4
VisitInstr:   %28 = icmp slt i32 %26, %27
CmpInst:   %28 = icmp slt i32 %26, %27
Check LatCell: 0
In Meet:   %28 = icmp slt i32 %26, %27, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = icmp slt i32 %26, %27
VisitInstr:   %29 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %29 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = load ptr, ptr %5, align 8
VisitInstr:   %30 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %30 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = load i32, ptr %8, align 4
VisitInstr:   %31 = sext i32 %30 to i64
UnaryOp:   %31 = sext i32 %30 to i64
Check LatCell: 0
In Meet:   %31 = sext i32 %30 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = sext i32 %30 to i64
VisitInstr:   %32 = getelementptr inbounds %struct.planet, ptr %29, i64 %31
GetElementPtr:   %32 = getelementptr inbounds %struct.planet, ptr %29, i64 %31
Check LatCell: 0
In Meet:   %32 = getelementptr inbounds %struct.planet, ptr %29, i64 %31, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = getelementptr inbounds %struct.planet, ptr %29, i64 %31
VisitInstr:   %33 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %33 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load ptr, ptr %9, align 8
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 0
GetElementPtr:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 0
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 0
VisitInstr:   %35 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %35 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load ptr, ptr %10, align 8
VisitInstr:   %36 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0
GetElementPtr:   %36 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0
Check LatCell: 0
In Meet:   %36 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = getelementptr inbounds %struct.planet, ptr %35, i32 0, i32 0
VisitInstr:   %37 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %37 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = load ptr, ptr %9, align 8
VisitInstr:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 1
GetElementPtr:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 1
Check LatCell: 0
In Meet:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 1
VisitInstr:   %39 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %39 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = load ptr, ptr %10, align 8
VisitInstr:   %40 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1
GetElementPtr:   %40 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1
Check LatCell: 0
In Meet:   %40 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = getelementptr inbounds %struct.planet, ptr %39, i32 0, i32 1
VisitInstr:   %41 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %41 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = load ptr, ptr %9, align 8
VisitInstr:   %42 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 2
GetElementPtr:   %42 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 2
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds %struct.planet, ptr %41, i32 0, i32 2
VisitInstr:   %43 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %43 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = load ptr, ptr %10, align 8
VisitInstr:   %44 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2
GetElementPtr:   %44 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds %struct.planet, ptr %43, i32 0, i32 2
VisitInstr:   %45 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %45 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load double, ptr %11, align 8
VisitInstr:   %46 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %46 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = load double, ptr %11, align 8
VisitInstr:   %47 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %47 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load double, ptr %12, align 8
VisitInstr:   %48 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %48 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = load double, ptr %12, align 8
VisitInstr:   %49 = fmul double %47, %48
BinaryOp:   %49 = fmul double %47, %48
Check LatCell: 0
In Meet:   %49 = fmul double %47, %48, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = fmul double %47, %48
VisitInstr:   %50 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %50 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = load double, ptr %13, align 8
VisitInstr:   %51 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %51 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = load double, ptr %13, align 8
VisitInstr:   %52 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %52 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load double, ptr %6, align 8
VisitInstr:   %53 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %53 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load double, ptr %14, align 8
VisitInstr:   %54 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %54 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = load double, ptr %14, align 8
VisitInstr:   %55 = fmul double %53, %54
BinaryOp:   %55 = fmul double %53, %54
Check LatCell: 0
In Meet:   %55 = fmul double %53, %54, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = fmul double %53, %54
VisitInstr:   %56 = load double, ptr %14, align 8
Check LatCell: 0
In Meet:   %56 = load double, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load double, ptr %14, align 8
VisitInstr:   %57 = fmul double %55, %56
BinaryOp:   %57 = fmul double %55, %56
Check LatCell: 0
In Meet:   %57 = fmul double %55, %56, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = fmul double %55, %56
VisitInstr:   %58 = fdiv double %52, %57
BinaryOp:   %58 = fdiv double %52, %57
Check LatCell: 0
In Meet:   %58 = fdiv double %52, %57, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = fdiv double %52, %57
VisitInstr:   %59 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %59 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = load double, ptr %11, align 8
VisitInstr:   %60 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %60 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load ptr, ptr %10, align 8
VisitInstr:   %61 = getelementptr inbounds %struct.planet, ptr %60, i32 0, i32 6
GetElementPtr:   %61 = getelementptr inbounds %struct.planet, ptr %60, i32 0, i32 6
Check LatCell: 0
In Meet:   %61 = getelementptr inbounds %struct.planet, ptr %60, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = getelementptr inbounds %struct.planet, ptr %60, i32 0, i32 6
VisitInstr:   %62 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %62 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load double, ptr %15, align 8
VisitInstr:   %63 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %63 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = load ptr, ptr %9, align 8
VisitInstr:   %64 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 3
GetElementPtr:   %64 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 3
Check LatCell: 0
In Meet:   %64 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 3
VisitInstr:   %65 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %65 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = load double, ptr %12, align 8
VisitInstr:   %66 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %66 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load ptr, ptr %10, align 8
VisitInstr:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
GetElementPtr:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
Check LatCell: 0
In Meet:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
VisitInstr:   %68 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %68 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = load double, ptr %15, align 8
VisitInstr:   %69 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %69 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = load ptr, ptr %9, align 8
VisitInstr:   %70 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 4
GetElementPtr:   %70 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 4
Check LatCell: 0
In Meet:   %70 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 4
VisitInstr:   %71 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %71 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = load double, ptr %13, align 8
VisitInstr:   %72 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %72 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = load ptr, ptr %10, align 8
VisitInstr:   %73 = getelementptr inbounds %struct.planet, ptr %72, i32 0, i32 6
GetElementPtr:   %73 = getelementptr inbounds %struct.planet, ptr %72, i32 0, i32 6
Check LatCell: 0
In Meet:   %73 = getelementptr inbounds %struct.planet, ptr %72, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = getelementptr inbounds %struct.planet, ptr %72, i32 0, i32 6
VisitInstr:   %74 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %74 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = load double, ptr %15, align 8
VisitInstr:   %75 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %75 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load ptr, ptr %9, align 8
VisitInstr:   %76 = getelementptr inbounds %struct.planet, ptr %75, i32 0, i32 5
GetElementPtr:   %76 = getelementptr inbounds %struct.planet, ptr %75, i32 0, i32 5
Check LatCell: 0
In Meet:   %76 = getelementptr inbounds %struct.planet, ptr %75, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = getelementptr inbounds %struct.planet, ptr %75, i32 0, i32 5
VisitInstr:   %77 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %77 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = load double, ptr %11, align 8
VisitInstr:   %78 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %78 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = load ptr, ptr %9, align 8
VisitInstr:   %79 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6
GetElementPtr:   %79 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6
Check LatCell: 0
In Meet:   %79 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6
VisitInstr:   %80 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %80 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load double, ptr %15, align 8
VisitInstr:   %81 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %81 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = load ptr, ptr %10, align 8
VisitInstr:   %82 = getelementptr inbounds %struct.planet, ptr %81, i32 0, i32 3
GetElementPtr:   %82 = getelementptr inbounds %struct.planet, ptr %81, i32 0, i32 3
Check LatCell: 0
In Meet:   %82 = getelementptr inbounds %struct.planet, ptr %81, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = getelementptr inbounds %struct.planet, ptr %81, i32 0, i32 3
VisitInstr:   %83 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %83 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = load double, ptr %12, align 8
VisitInstr:   %84 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %84 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = load ptr, ptr %9, align 8
VisitInstr:   %85 = getelementptr inbounds %struct.planet, ptr %84, i32 0, i32 6
GetElementPtr:   %85 = getelementptr inbounds %struct.planet, ptr %84, i32 0, i32 6
Check LatCell: 0
In Meet:   %85 = getelementptr inbounds %struct.planet, ptr %84, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = getelementptr inbounds %struct.planet, ptr %84, i32 0, i32 6
VisitInstr:   %86 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %86 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = load double, ptr %15, align 8
VisitInstr:   %87 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %87 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = load ptr, ptr %10, align 8
VisitInstr:   %88 = getelementptr inbounds %struct.planet, ptr %87, i32 0, i32 4
GetElementPtr:   %88 = getelementptr inbounds %struct.planet, ptr %87, i32 0, i32 4
Check LatCell: 0
In Meet:   %88 = getelementptr inbounds %struct.planet, ptr %87, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %88 = getelementptr inbounds %struct.planet, ptr %87, i32 0, i32 4
VisitInstr:   %89 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %89 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %89 = load double, ptr %13, align 8
VisitInstr:   %90 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %90 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = load ptr, ptr %9, align 8
VisitInstr:   %91 = getelementptr inbounds %struct.planet, ptr %90, i32 0, i32 6
GetElementPtr:   %91 = getelementptr inbounds %struct.planet, ptr %90, i32 0, i32 6
Check LatCell: 0
In Meet:   %91 = getelementptr inbounds %struct.planet, ptr %90, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = getelementptr inbounds %struct.planet, ptr %90, i32 0, i32 6
VisitInstr:   %92 = load double, ptr %15, align 8
Check LatCell: 0
In Meet:   %92 = load double, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = load double, ptr %15, align 8
VisitInstr:   %93 = load ptr, ptr %10, align 8
Check LatCell: 0
In Meet:   %93 = load ptr, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = load ptr, ptr %10, align 8
VisitInstr:   %94 = getelementptr inbounds %struct.planet, ptr %93, i32 0, i32 5
GetElementPtr:   %94 = getelementptr inbounds %struct.planet, ptr %93, i32 0, i32 5
Check LatCell: 0
In Meet:   %94 = getelementptr inbounds %struct.planet, ptr %93, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = getelementptr inbounds %struct.planet, ptr %93, i32 0, i32 5
VisitInstr:   %95 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %95 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = load i32, ptr %8, align 4
VisitInstr:   %96 = add nsw i32 %95, 1
BinaryOp:   %96 = add nsw i32 %95, 1
Check LatCell: 0
In Meet:   %96 = add nsw i32 %95, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = add nsw i32 %95, 1
VisitInstr:   %97 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %97 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = load i32, ptr %7, align 4
VisitInstr:   %98 = add nsw i32 %97, 1
BinaryOp:   %98 = add nsw i32 %97, 1
Check LatCell: 0
In Meet:   %98 = add nsw i32 %97, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = add nsw i32 %97, 1
VisitInstr:   br label %99
BranchInst:   br label %99
In AddEdge: 0x559dc7b05d10, 0x559dc7b096c0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %19, label %100, label %145
BranchInst:   br i1 %19, label %100, label %145
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b09110, 0x559dc7b09930, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b09110, 0x559dc7b09930, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store ptr %23, ptr %9, align 8
Check LatCell: 0
In Meet:   store ptr %23, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %23, ptr %9, align 8
VisitInstr:   store i32 %25, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 %25, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %25, ptr %8, align 4
VisitInstr:   br label %101
BranchInst:   br label %101
In AddEdge: 0x559dc7b097f0, 0x559dc7b09d70, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 0, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %7, align 4
VisitInstr:   %146 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %146 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %146 = load i32, ptr %7, align 4
VisitInstr:   %147 = load i32, ptr %4, align 4
Check LatCell: 0
In Meet:   %147 = load i32, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %147 = load i32, ptr %4, align 4
VisitInstr:   %148 = icmp slt i32 %146, %147
CmpInst:   %148 = icmp slt i32 %146, %147
Check LatCell: 0
In Meet:   %148 = icmp slt i32 %146, %147, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %148 = icmp slt i32 %146, %147
VisitInstr:   %149 = load ptr, ptr %5, align 8
Check LatCell: 0
In Meet:   %149 = load ptr, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %149 = load ptr, ptr %5, align 8
VisitInstr:   %150 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %150 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %150 = load i32, ptr %7, align 4
VisitInstr:   %151 = sext i32 %150 to i64
UnaryOp:   %151 = sext i32 %150 to i64
Check LatCell: 0
In Meet:   %151 = sext i32 %150 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %151 = sext i32 %150 to i64
VisitInstr:   %152 = getelementptr inbounds %struct.planet, ptr %149, i64 %151
GetElementPtr:   %152 = getelementptr inbounds %struct.planet, ptr %149, i64 %151
Check LatCell: 0
In Meet:   %152 = getelementptr inbounds %struct.planet, ptr %149, i64 %151, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %152 = getelementptr inbounds %struct.planet, ptr %149, i64 %151
VisitInstr:   %153 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %153 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %153 = load double, ptr %6, align 8
VisitInstr:   %154 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %154 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %154 = load ptr, ptr %16, align 8
VisitInstr:   %155 = getelementptr inbounds %struct.planet, ptr %154, i32 0, i32 3
GetElementPtr:   %155 = getelementptr inbounds %struct.planet, ptr %154, i32 0, i32 3
Check LatCell: 0
In Meet:   %155 = getelementptr inbounds %struct.planet, ptr %154, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %155 = getelementptr inbounds %struct.planet, ptr %154, i32 0, i32 3
VisitInstr:   %156 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %156 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %156 = load ptr, ptr %16, align 8
VisitInstr:   %157 = getelementptr inbounds %struct.planet, ptr %156, i32 0, i32 0
GetElementPtr:   %157 = getelementptr inbounds %struct.planet, ptr %156, i32 0, i32 0
Check LatCell: 0
In Meet:   %157 = getelementptr inbounds %struct.planet, ptr %156, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %157 = getelementptr inbounds %struct.planet, ptr %156, i32 0, i32 0
VisitInstr:   %158 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %158 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %158 = load double, ptr %6, align 8
VisitInstr:   %159 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %159 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %159 = load ptr, ptr %16, align 8
VisitInstr:   %160 = getelementptr inbounds %struct.planet, ptr %159, i32 0, i32 4
GetElementPtr:   %160 = getelementptr inbounds %struct.planet, ptr %159, i32 0, i32 4
Check LatCell: 0
In Meet:   %160 = getelementptr inbounds %struct.planet, ptr %159, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %160 = getelementptr inbounds %struct.planet, ptr %159, i32 0, i32 4
VisitInstr:   %161 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %161 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %161 = load ptr, ptr %16, align 8
VisitInstr:   %162 = getelementptr inbounds %struct.planet, ptr %161, i32 0, i32 1
GetElementPtr:   %162 = getelementptr inbounds %struct.planet, ptr %161, i32 0, i32 1
Check LatCell: 0
In Meet:   %162 = getelementptr inbounds %struct.planet, ptr %161, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %162 = getelementptr inbounds %struct.planet, ptr %161, i32 0, i32 1
VisitInstr:   %163 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %163 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %163 = load double, ptr %6, align 8
VisitInstr:   %164 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %164 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %164 = load ptr, ptr %16, align 8
VisitInstr:   %165 = getelementptr inbounds %struct.planet, ptr %164, i32 0, i32 5
GetElementPtr:   %165 = getelementptr inbounds %struct.planet, ptr %164, i32 0, i32 5
Check LatCell: 0
In Meet:   %165 = getelementptr inbounds %struct.planet, ptr %164, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %165 = getelementptr inbounds %struct.planet, ptr %164, i32 0, i32 5
VisitInstr:   %166 = load ptr, ptr %16, align 8
Check LatCell: 0
In Meet:   %166 = load ptr, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %166 = load ptr, ptr %16, align 8
VisitInstr:   %167 = getelementptr inbounds %struct.planet, ptr %166, i32 0, i32 2
GetElementPtr:   %167 = getelementptr inbounds %struct.planet, ptr %166, i32 0, i32 2
Check LatCell: 0
In Meet:   %167 = getelementptr inbounds %struct.planet, ptr %166, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %167 = getelementptr inbounds %struct.planet, ptr %166, i32 0, i32 2
VisitInstr:   %168 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %168 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %168 = load i32, ptr %7, align 4
VisitInstr:   %169 = add nsw i32 %168, 1
BinaryOp:   %169 = add nsw i32 %168, 1
Check LatCell: 0
In Meet:   %169 = add nsw i32 %168, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %169 = add nsw i32 %168, 1
VisitInstr:   br label %170
BranchInst:   br label %170
In AddEdge: 0x559dc7b09840, 0x559dc7b104d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %28, label %102, label %143
BranchInst:   br i1 %28, label %102, label %143
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b09d00, 0x559dc7b0a070, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b09d00, 0x559dc7b0a070, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %148, label %171, label %182
BranchInst:   br i1 %148, label %171, label %182
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b10460, 0x559dc7b107d0, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b10460, 0x559dc7b107d0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store ptr %32, ptr %10, align 8
Check LatCell: 0
In Meet:   store ptr %32, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %32, ptr %10, align 8
VisitInstr:   %103 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %103 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = load double, ptr %34, align 8
VisitInstr:   %104 = load double, ptr %36, align 8
Check LatCell: 0
In Meet:   %104 = load double, ptr %36, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = load double, ptr %36, align 8
VisitInstr:   %105 = fsub double %103, %104
BinaryOp:   %105 = fsub double %103, %104
Check LatCell: 0
In Meet:   %105 = fsub double %103, %104, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = fsub double %103, %104
VisitInstr:   store double %105, ptr %11, align 8
Check LatCell: 0
In Meet:   store double %105, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %105, ptr %11, align 8
VisitInstr:   %106 = load double, ptr %38, align 8
Check LatCell: 0
In Meet:   %106 = load double, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %106 = load double, ptr %38, align 8
VisitInstr:   %107 = load double, ptr %40, align 8
Check LatCell: 0
In Meet:   %107 = load double, ptr %40, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %107 = load double, ptr %40, align 8
VisitInstr:   %108 = fsub double %106, %107
BinaryOp:   %108 = fsub double %106, %107
Check LatCell: 0
In Meet:   %108 = fsub double %106, %107, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %108 = fsub double %106, %107
VisitInstr:   store double %108, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %108, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %108, ptr %12, align 8
VisitInstr:   %109 = load double, ptr %42, align 8
Check LatCell: 0
In Meet:   %109 = load double, ptr %42, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %109 = load double, ptr %42, align 8
VisitInstr:   %110 = load double, ptr %44, align 8
Check LatCell: 0
In Meet:   %110 = load double, ptr %44, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %110 = load double, ptr %44, align 8
VisitInstr:   %111 = fsub double %109, %110
BinaryOp:   %111 = fsub double %109, %110
Check LatCell: 0
In Meet:   %111 = fsub double %109, %110, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = fsub double %109, %110
VisitInstr:   store double %111, ptr %13, align 8
Check LatCell: 0
In Meet:   store double %111, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %111, ptr %13, align 8
VisitInstr:   %112 = call double @llvm.fmuladd.f64(double %45, double %46, double %49)
Check LatCell: 0
In Meet:   %112 = call double @llvm.fmuladd.f64(double %45, double %46, double %49), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %112 = call double @llvm.fmuladd.f64(double %45, double %46, double %49)
VisitInstr:   %113 = call double @llvm.fmuladd.f64(double %50, double %51, double %112)
Check LatCell: 0
In Meet:   %113 = call double @llvm.fmuladd.f64(double %50, double %51, double %112), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %113 = call double @llvm.fmuladd.f64(double %50, double %51, double %112)
VisitInstr:   %114 = call double @sqrt(double noundef %113) #4
Check LatCell: 0
In Meet:   %114 = call double @sqrt(double noundef %113) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %114 = call double @sqrt(double noundef %113) #4
VisitInstr:   store double %114, ptr %14, align 8
Check LatCell: 0
In Meet:   store double %114, ptr %14, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %114, ptr %14, align 8
VisitInstr:   store double %58, ptr %15, align 8
Check LatCell: 0
In Meet:   store double %58, ptr %15, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %58, ptr %15, align 8
VisitInstr:   %115 = load double, ptr %61, align 8
Check LatCell: 0
In Meet:   %115 = load double, ptr %61, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %115 = load double, ptr %61, align 8
VisitInstr:   %116 = fmul double %59, %115
BinaryOp:   %116 = fmul double %59, %115
Check LatCell: 0
In Meet:   %116 = fmul double %59, %115, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %116 = fmul double %59, %115
VisitInstr:   %117 = load double, ptr %64, align 8
Check LatCell: 0
In Meet:   %117 = load double, ptr %64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %117 = load double, ptr %64, align 8
VisitInstr:   %118 = fneg double %116
UnaryOp:   %118 = fneg double %116
Check LatCell: 0
In Meet:   %118 = fneg double %116, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %118 = fneg double %116
VisitInstr:   %119 = call double @llvm.fmuladd.f64(double %118, double %62, double %117)
Check LatCell: 0
In Meet:   %119 = call double @llvm.fmuladd.f64(double %118, double %62, double %117), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %119 = call double @llvm.fmuladd.f64(double %118, double %62, double %117)
VisitInstr:   store double %119, ptr %64, align 8
Check LatCell: 0
In Meet:   store double %119, ptr %64, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %119, ptr %64, align 8
VisitInstr:   %120 = load double, ptr %67, align 8
Check LatCell: 0
In Meet:   %120 = load double, ptr %67, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %120 = load double, ptr %67, align 8
VisitInstr:   %121 = fmul double %65, %120
BinaryOp:   %121 = fmul double %65, %120
Check LatCell: 0
In Meet:   %121 = fmul double %65, %120, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %121 = fmul double %65, %120
VisitInstr:   %122 = load double, ptr %70, align 8
Check LatCell: 0
In Meet:   %122 = load double, ptr %70, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %122 = load double, ptr %70, align 8
VisitInstr:   %123 = fneg double %121
UnaryOp:   %123 = fneg double %121
Check LatCell: 0
In Meet:   %123 = fneg double %121, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %123 = fneg double %121
VisitInstr:   %124 = call double @llvm.fmuladd.f64(double %123, double %68, double %122)
Check LatCell: 0
In Meet:   %124 = call double @llvm.fmuladd.f64(double %123, double %68, double %122), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %124 = call double @llvm.fmuladd.f64(double %123, double %68, double %122)
VisitInstr:   store double %124, ptr %70, align 8
Check LatCell: 0
In Meet:   store double %124, ptr %70, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %124, ptr %70, align 8
VisitInstr:   %125 = load double, ptr %73, align 8
Check LatCell: 0
In Meet:   %125 = load double, ptr %73, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %125 = load double, ptr %73, align 8
VisitInstr:   %126 = fmul double %71, %125
BinaryOp:   %126 = fmul double %71, %125
Check LatCell: 0
In Meet:   %126 = fmul double %71, %125, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %126 = fmul double %71, %125
VisitInstr:   %127 = load double, ptr %76, align 8
Check LatCell: 0
In Meet:   %127 = load double, ptr %76, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %127 = load double, ptr %76, align 8
VisitInstr:   %128 = fneg double %126
UnaryOp:   %128 = fneg double %126
Check LatCell: 0
In Meet:   %128 = fneg double %126, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %128 = fneg double %126
VisitInstr:   %129 = call double @llvm.fmuladd.f64(double %128, double %74, double %127)
Check LatCell: 0
In Meet:   %129 = call double @llvm.fmuladd.f64(double %128, double %74, double %127), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %129 = call double @llvm.fmuladd.f64(double %128, double %74, double %127)
VisitInstr:   store double %129, ptr %76, align 8
Check LatCell: 0
In Meet:   store double %129, ptr %76, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %129, ptr %76, align 8
VisitInstr:   %130 = load double, ptr %79, align 8
Check LatCell: 0
In Meet:   %130 = load double, ptr %79, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %130 = load double, ptr %79, align 8
VisitInstr:   %131 = fmul double %77, %130
BinaryOp:   %131 = fmul double %77, %130
Check LatCell: 0
In Meet:   %131 = fmul double %77, %130, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %131 = fmul double %77, %130
VisitInstr:   %132 = load double, ptr %82, align 8
Check LatCell: 0
In Meet:   %132 = load double, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %132 = load double, ptr %82, align 8
VisitInstr:   %133 = call double @llvm.fmuladd.f64(double %131, double %80, double %132)
Check LatCell: 0
In Meet:   %133 = call double @llvm.fmuladd.f64(double %131, double %80, double %132), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %133 = call double @llvm.fmuladd.f64(double %131, double %80, double %132)
VisitInstr:   store double %133, ptr %82, align 8
Check LatCell: 0
In Meet:   store double %133, ptr %82, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %133, ptr %82, align 8
VisitInstr:   %134 = load double, ptr %85, align 8
Check LatCell: 0
In Meet:   %134 = load double, ptr %85, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %134 = load double, ptr %85, align 8
VisitInstr:   %135 = fmul double %83, %134
BinaryOp:   %135 = fmul double %83, %134
Check LatCell: 0
In Meet:   %135 = fmul double %83, %134, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %135 = fmul double %83, %134
VisitInstr:   %136 = load double, ptr %88, align 8
Check LatCell: 0
In Meet:   %136 = load double, ptr %88, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %136 = load double, ptr %88, align 8
VisitInstr:   %137 = call double @llvm.fmuladd.f64(double %135, double %86, double %136)
Check LatCell: 0
In Meet:   %137 = call double @llvm.fmuladd.f64(double %135, double %86, double %136), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %137 = call double @llvm.fmuladd.f64(double %135, double %86, double %136)
VisitInstr:   store double %137, ptr %88, align 8
Check LatCell: 0
In Meet:   store double %137, ptr %88, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %137, ptr %88, align 8
VisitInstr:   %138 = load double, ptr %91, align 8
Check LatCell: 0
In Meet:   %138 = load double, ptr %91, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %138 = load double, ptr %91, align 8
VisitInstr:   %139 = fmul double %89, %138
BinaryOp:   %139 = fmul double %89, %138
Check LatCell: 0
In Meet:   %139 = fmul double %89, %138, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %139 = fmul double %89, %138
VisitInstr:   %140 = load double, ptr %94, align 8
Check LatCell: 0
In Meet:   %140 = load double, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %140 = load double, ptr %94, align 8
VisitInstr:   %141 = call double @llvm.fmuladd.f64(double %139, double %92, double %140)
Check LatCell: 0
In Meet:   %141 = call double @llvm.fmuladd.f64(double %139, double %92, double %140), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %141 = call double @llvm.fmuladd.f64(double %139, double %92, double %140)
VisitInstr:   store double %141, ptr %94, align 8
Check LatCell: 0
In Meet:   store double %141, ptr %94, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %141, ptr %94, align 8
VisitInstr:   br label %142
BranchInst:   br label %142
In AddEdge: 0x559dc7b09f30, 0x559dc7b0f2b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %144
BranchInst:   br label %144
In AddEdge: 0x559dc7b09f80, 0x559dc7b10080, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store ptr %152, ptr %16, align 8
Check LatCell: 0
In Meet:   store ptr %152, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %152, ptr %16, align 8
VisitInstr:   %172 = load double, ptr %155, align 8
Check LatCell: 0
In Meet:   %172 = load double, ptr %155, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %172 = load double, ptr %155, align 8
VisitInstr:   %173 = load double, ptr %157, align 8
Check LatCell: 0
In Meet:   %173 = load double, ptr %157, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %173 = load double, ptr %157, align 8
VisitInstr:   %174 = call double @llvm.fmuladd.f64(double %153, double %172, double %173)
Check LatCell: 0
In Meet:   %174 = call double @llvm.fmuladd.f64(double %153, double %172, double %173), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %174 = call double @llvm.fmuladd.f64(double %153, double %172, double %173)
VisitInstr:   store double %174, ptr %157, align 8
Check LatCell: 0
In Meet:   store double %174, ptr %157, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %174, ptr %157, align 8
VisitInstr:   %175 = load double, ptr %160, align 8
Check LatCell: 0
In Meet:   %175 = load double, ptr %160, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %175 = load double, ptr %160, align 8
VisitInstr:   %176 = load double, ptr %162, align 8
Check LatCell: 0
In Meet:   %176 = load double, ptr %162, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %176 = load double, ptr %162, align 8
VisitInstr:   %177 = call double @llvm.fmuladd.f64(double %158, double %175, double %176)
Check LatCell: 0
In Meet:   %177 = call double @llvm.fmuladd.f64(double %158, double %175, double %176), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %177 = call double @llvm.fmuladd.f64(double %158, double %175, double %176)
VisitInstr:   store double %177, ptr %162, align 8
Check LatCell: 0
In Meet:   store double %177, ptr %162, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %177, ptr %162, align 8
VisitInstr:   %178 = load double, ptr %165, align 8
Check LatCell: 0
In Meet:   %178 = load double, ptr %165, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %178 = load double, ptr %165, align 8
VisitInstr:   %179 = load double, ptr %167, align 8
Check LatCell: 0
In Meet:   %179 = load double, ptr %167, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %179 = load double, ptr %167, align 8
VisitInstr:   %180 = call double @llvm.fmuladd.f64(double %163, double %178, double %179)
Check LatCell: 0
In Meet:   %180 = call double @llvm.fmuladd.f64(double %163, double %178, double %179), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %180 = call double @llvm.fmuladd.f64(double %163, double %178, double %179)
VisitInstr:   store double %180, ptr %167, align 8
Check LatCell: 0
In Meet:   store double %180, ptr %167, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %180, ptr %167, align 8
VisitInstr:   br label %181
BranchInst:   br label %181
In AddEdge: 0x559dc7b10690, 0x559dc7b11b60, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   store i32 %96, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 %96, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %96, ptr %8, align 4
VisitInstr:   br label %101, !llvm.loop !6
BranchInst:   br label %101, !llvm.loop !6
In AddEdge: 0x559dc7b0f240, 0x559dc7b0f4b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %98, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %98, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %98, ptr %7, align 4
VisitInstr:   br label %99, !llvm.loop !8
BranchInst:   br label %99, !llvm.loop !8
In AddEdge: 0x559dc7b10010, 0x559dc7b10280, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %169, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %169, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %169, ptr %7, align 4
VisitInstr:   br label %170, !llvm.loop !9
BranchInst:   br label %170, !llvm.loop !9
In AddEdge: 0x559dc7b11af0, 0x559dc7b11d60, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on energy
******************************************************
UnitLoopAnalysis running on energy
[LoopLoopAnalysis] parent loop header is:   %15 = load i32, ptr %6, align 4
[LoopLoopAnalysis] It has child loop header : ^-  %53 = load i32, ptr %7, align 4
[LoopLoopAnalysis] parent loop header is:   %53 = load i32, ptr %7, align 4
Instruction to be moved:   %53 = load i32, ptr %7, align 4
Instruction to be moved:   %54 = load i32, ptr %3, align 4
Instruction to be moved:   %55 = icmp slt i32 %52, %53
Instruction to be moved:   %57 = load ptr, ptr %4, align 8
Instruction to be moved:   %58 = load i32, ptr %7, align 4
Instruction to be moved:   %59 = sext i32 %56 to i64
Instruction to be moved:   %60 = getelementptr inbounds %struct.planet, ptr %55, i64 %57
Instruction to be moved:   %61 = load ptr, ptr %8, align 8
Instruction to be moved:   %62 = getelementptr inbounds %struct.planet, ptr %59, i32 0, i32 0
Instruction to be moved:   %64 = load ptr, ptr %9, align 8
Instruction to be moved:   %65 = getelementptr inbounds %struct.planet, ptr %61, i32 0, i32 0
Instruction to be moved:   %68 = load ptr, ptr %8, align 8
Instruction to be moved:   %69 = getelementptr inbounds %struct.planet, ptr %63, i32 0, i32 1
Instruction to be moved:   %71 = load ptr, ptr %9, align 8
Instruction to be moved:   %72 = getelementptr inbounds %struct.planet, ptr %65, i32 0, i32 1
Instruction to be moved:   %75 = load ptr, ptr %8, align 8
Instruction to be moved:   %76 = getelementptr inbounds %struct.planet, ptr %67, i32 0, i32 2
Instruction to be moved:   %78 = load ptr, ptr %9, align 8
Instruction to be moved:   %79 = getelementptr inbounds %struct.planet, ptr %69, i32 0, i32 2
Instruction to be moved:   %82 = load double, ptr %10, align 8
Instruction to be moved:   %83 = load double, ptr %10, align 8
Instruction to be moved:   %84 = load double, ptr %11, align 8
Instruction to be moved:   %85 = load double, ptr %11, align 8
Instruction to be moved:   %86 = fmul double %73, %74
Instruction to be moved:   %88 = load double, ptr %12, align 8
Instruction to be moved:   %89 = load double, ptr %12, align 8
Instruction to be moved:   %92 = load ptr, ptr %8, align 8
Instruction to be moved:   %93 = getelementptr inbounds %struct.planet, ptr %78, i32 0, i32 6
Instruction to be moved:   %95 = load ptr, ptr %9, align 8
Instruction to be moved:   %96 = getelementptr inbounds %struct.planet, ptr %80, i32 0, i32 6
Instruction to be moved:   %99 = load double, ptr %13, align 8
Instruction to be moved:   %101 = load double, ptr %5, align 8
Instruction to be moved:   %104 = load i32, ptr %7, align 4
Instruction to be moved:   %105 = add nsw i32 %84, 1
Instruction to be moved:   %15 = load i32, ptr %6, align 4
Instruction to be moved:   %16 = load i32, ptr %3, align 4
Instruction to be moved:   %17 = icmp slt i32 %14, %15
Instruction to be moved:   %19 = load ptr, ptr %4, align 8
Instruction to be moved:   %20 = load i32, ptr %6, align 4
Instruction to be moved:   %21 = sext i32 %18 to i64
Instruction to be moved:   %22 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
Instruction to be moved:   %23 = load ptr, ptr %8, align 8
Instruction to be moved:   %24 = getelementptr inbounds %struct.planet, ptr %21, i32 0, i32 6
Instruction to be moved:   %27 = load ptr, ptr %8, align 8
Instruction to be moved:   %28 = getelementptr inbounds %struct.planet, ptr %23, i32 0, i32 3
Instruction to be moved:   %30 = load ptr, ptr %8, align 8
Instruction to be moved:   %31 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 3
Instruction to be moved:   %33 = load ptr, ptr %8, align 8
Instruction to be moved:   %34 = getelementptr inbounds %struct.planet, ptr %27, i32 0, i32 4
Instruction to be moved:   %36 = load ptr, ptr %8, align 8
Instruction to be moved:   %37 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 4
Instruction to be moved:   %41 = load ptr, ptr %8, align 8
Instruction to be moved:   %42 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 5
Instruction to be moved:   %44 = load ptr, ptr %8, align 8
Instruction to be moved:   %45 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 5
Instruction to be moved:   %48 = load double, ptr %5, align 8
Instruction to be moved:   %50 = load i32, ptr %6, align 4
Instruction to be moved:   %51 = add nsw i32 %36, 1
Instruction to be moved:   %52 = load i32, ptr %7, align 4
Instruction to be moved:   %53 = load i32, ptr %3, align 4
Instruction to be moved:   %54 = icmp slt i32 %38, %39
Instruction to be moved:   %55 = load ptr, ptr %4, align 8
Instruction to be moved:   %56 = load i32, ptr %7, align 4
Instruction to be moved:   %57 = sext i32 %42 to i64
Instruction to be moved:   %58 = getelementptr inbounds %struct.planet, ptr %41, i64 %43
Instruction to be moved:   %59 = load ptr, ptr %8, align 8
Instruction to be moved:   %60 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 0
Instruction to be moved:   %61 = load ptr, ptr %9, align 8
Instruction to be moved:   %62 = getelementptr inbounds %struct.planet, ptr %47, i32 0, i32 0
Instruction to be moved:   %63 = load ptr, ptr %8, align 8
Instruction to be moved:   %64 = getelementptr inbounds %struct.planet, ptr %49, i32 0, i32 1
Instruction to be moved:   %65 = load ptr, ptr %9, align 8
Instruction to be moved:   %66 = getelementptr inbounds %struct.planet, ptr %51, i32 0, i32 1
Instruction to be moved:   %67 = load ptr, ptr %8, align 8
Instruction to be moved:   %68 = getelementptr inbounds %struct.planet, ptr %53, i32 0, i32 2
Instruction to be moved:   %69 = load ptr, ptr %9, align 8
Instruction to be moved:   %70 = getelementptr inbounds %struct.planet, ptr %55, i32 0, i32 2
Instruction to be moved:   %71 = load double, ptr %10, align 8
Instruction to be moved:   %72 = load double, ptr %10, align 8
Instruction to be moved:   %73 = load double, ptr %11, align 8
Instruction to be moved:   %74 = load double, ptr %11, align 8
Instruction to be moved:   %75 = fmul double %59, %60
Instruction to be moved:   %76 = load double, ptr %12, align 8
Instruction to be moved:   %77 = load double, ptr %12, align 8
Instruction to be moved:   %78 = load ptr, ptr %8, align 8
Instruction to be moved:   %79 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 6
Instruction to be moved:   %80 = load ptr, ptr %9, align 8
Instruction to be moved:   %81 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
Instruction to be moved:   %82 = load double, ptr %13, align 8
Instruction to be moved:   %83 = load double, ptr %5, align 8
Instruction to be moved:   %84 = load i32, ptr %7, align 4
Instruction to be moved:   %85 = add nsw i32 %70, 1
Instruction to be moved:   %108 = load i32, ptr %6, align 4
Instruction to be moved:   %109 = add nsw i32 %72, 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 166
[UnitLICM]: NumComputeHoisted: 26
[UnitLICM]: Total: 271
UnitSCCP running on energy
Visiting BB: 
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %4 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca ptr, align 8
VisitInstr:   %5 = alloca double, align 8
Check LatCell: 0
In Meet:   %5 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca double, align 8
VisitInstr:   %6 = alloca i32, align 4
Check LatCell: 0
In Meet:   %6 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca i32, align 4
VisitInstr:   %7 = alloca i32, align 4
Check LatCell: 0
In Meet:   %7 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i32, align 4
VisitInstr:   %8 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %8 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca ptr, align 8
VisitInstr:   %9 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %9 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = alloca ptr, align 8
VisitInstr:   %10 = alloca double, align 8
Check LatCell: 0
In Meet:   %10 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = alloca double, align 8
VisitInstr:   %11 = alloca double, align 8
Check LatCell: 0
In Meet:   %11 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = alloca double, align 8
VisitInstr:   %12 = alloca double, align 8
Check LatCell: 0
In Meet:   %12 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = alloca double, align 8
VisitInstr:   %13 = alloca double, align 8
Check LatCell: 0
In Meet:   %13 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = alloca double, align 8
VisitInstr:   store i32 %0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %3, align 4
VisitInstr:   store ptr %1, ptr %4, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %4, align 8
VisitInstr:   store double 0.000000e+00, ptr %5, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %5, align 8
VisitInstr:   store i32 0, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %6, align 4
VisitInstr:   %14 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %14 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = load i32, ptr %6, align 4
VisitInstr:   %15 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %15 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = load i32, ptr %3, align 4
VisitInstr:   %16 = icmp slt i32 %14, %15
CmpInst:   %16 = icmp slt i32 %14, %15
Check LatCell: 0
In Meet:   %16 = icmp slt i32 %14, %15, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = icmp slt i32 %14, %15
VisitInstr:   %17 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %17 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load ptr, ptr %4, align 8
VisitInstr:   %18 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %18 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load i32, ptr %6, align 4
VisitInstr:   %19 = sext i32 %18 to i64
UnaryOp:   %19 = sext i32 %18 to i64
Check LatCell: 0
In Meet:   %19 = sext i32 %18 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = sext i32 %18 to i64
VisitInstr:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
GetElementPtr:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
VisitInstr:   %21 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %21 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = load ptr, ptr %8, align 8
VisitInstr:   %22 = getelementptr inbounds %struct.planet, ptr %21, i32 0, i32 6
GetElementPtr:   %22 = getelementptr inbounds %struct.planet, ptr %21, i32 0, i32 6
Check LatCell: 0
In Meet:   %22 = getelementptr inbounds %struct.planet, ptr %21, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = getelementptr inbounds %struct.planet, ptr %21, i32 0, i32 6
VisitInstr:   %23 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %23 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load ptr, ptr %8, align 8
VisitInstr:   %24 = getelementptr inbounds %struct.planet, ptr %23, i32 0, i32 3
GetElementPtr:   %24 = getelementptr inbounds %struct.planet, ptr %23, i32 0, i32 3
Check LatCell: 0
In Meet:   %24 = getelementptr inbounds %struct.planet, ptr %23, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = getelementptr inbounds %struct.planet, ptr %23, i32 0, i32 3
VisitInstr:   %25 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %25 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = load ptr, ptr %8, align 8
VisitInstr:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 3
GetElementPtr:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 3
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds %struct.planet, ptr %25, i32 0, i32 3
VisitInstr:   %27 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %27 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = load ptr, ptr %8, align 8
VisitInstr:   %28 = getelementptr inbounds %struct.planet, ptr %27, i32 0, i32 4
GetElementPtr:   %28 = getelementptr inbounds %struct.planet, ptr %27, i32 0, i32 4
Check LatCell: 0
In Meet:   %28 = getelementptr inbounds %struct.planet, ptr %27, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = getelementptr inbounds %struct.planet, ptr %27, i32 0, i32 4
VisitInstr:   %29 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %29 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = load ptr, ptr %8, align 8
VisitInstr:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 4
GetElementPtr:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 4
Check LatCell: 0
In Meet:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = getelementptr inbounds %struct.planet, ptr %29, i32 0, i32 4
VisitInstr:   %31 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %31 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = load ptr, ptr %8, align 8
VisitInstr:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 5
GetElementPtr:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 5
Check LatCell: 0
In Meet:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 5
VisitInstr:   %33 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %33 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load ptr, ptr %8, align 8
VisitInstr:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 5
GetElementPtr:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 5
Check LatCell: 0
In Meet:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = getelementptr inbounds %struct.planet, ptr %33, i32 0, i32 5
VisitInstr:   %35 = load double, ptr %5, align 8
Check LatCell: 0
In Meet:   %35 = load double, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load double, ptr %5, align 8
VisitInstr:   %36 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %36 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = load i32, ptr %6, align 4
VisitInstr:   %37 = add nsw i32 %36, 1
BinaryOp:   %37 = add nsw i32 %36, 1
Check LatCell: 0
In Meet:   %37 = add nsw i32 %36, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = add nsw i32 %36, 1
VisitInstr:   %38 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %38 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = load i32, ptr %7, align 4
VisitInstr:   %39 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %39 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = load i32, ptr %3, align 4
VisitInstr:   %40 = icmp slt i32 %38, %39
CmpInst:   %40 = icmp slt i32 %38, %39
Check LatCell: 0
In Meet:   %40 = icmp slt i32 %38, %39, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = icmp slt i32 %38, %39
VisitInstr:   %41 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %41 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = load ptr, ptr %4, align 8
VisitInstr:   %42 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %42 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = load i32, ptr %7, align 4
VisitInstr:   %43 = sext i32 %42 to i64
UnaryOp:   %43 = sext i32 %42 to i64
Check LatCell: 0
In Meet:   %43 = sext i32 %42 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = sext i32 %42 to i64
VisitInstr:   %44 = getelementptr inbounds %struct.planet, ptr %41, i64 %43
GetElementPtr:   %44 = getelementptr inbounds %struct.planet, ptr %41, i64 %43
Check LatCell: 0
In Meet:   %44 = getelementptr inbounds %struct.planet, ptr %41, i64 %43, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = getelementptr inbounds %struct.planet, ptr %41, i64 %43
VisitInstr:   %45 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %45 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load ptr, ptr %8, align 8
VisitInstr:   %46 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 0
GetElementPtr:   %46 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 0
Check LatCell: 0
In Meet:   %46 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = getelementptr inbounds %struct.planet, ptr %45, i32 0, i32 0
VisitInstr:   %47 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %47 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %47 = load ptr, ptr %9, align 8
VisitInstr:   %48 = getelementptr inbounds %struct.planet, ptr %47, i32 0, i32 0
GetElementPtr:   %48 = getelementptr inbounds %struct.planet, ptr %47, i32 0, i32 0
Check LatCell: 0
In Meet:   %48 = getelementptr inbounds %struct.planet, ptr %47, i32 0, i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %48 = getelementptr inbounds %struct.planet, ptr %47, i32 0, i32 0
VisitInstr:   %49 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %49 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load ptr, ptr %8, align 8
VisitInstr:   %50 = getelementptr inbounds %struct.planet, ptr %49, i32 0, i32 1
GetElementPtr:   %50 = getelementptr inbounds %struct.planet, ptr %49, i32 0, i32 1
Check LatCell: 0
In Meet:   %50 = getelementptr inbounds %struct.planet, ptr %49, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = getelementptr inbounds %struct.planet, ptr %49, i32 0, i32 1
VisitInstr:   %51 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %51 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = load ptr, ptr %9, align 8
VisitInstr:   %52 = getelementptr inbounds %struct.planet, ptr %51, i32 0, i32 1
GetElementPtr:   %52 = getelementptr inbounds %struct.planet, ptr %51, i32 0, i32 1
Check LatCell: 0
In Meet:   %52 = getelementptr inbounds %struct.planet, ptr %51, i32 0, i32 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = getelementptr inbounds %struct.planet, ptr %51, i32 0, i32 1
VisitInstr:   %53 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %53 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load ptr, ptr %8, align 8
VisitInstr:   %54 = getelementptr inbounds %struct.planet, ptr %53, i32 0, i32 2
GetElementPtr:   %54 = getelementptr inbounds %struct.planet, ptr %53, i32 0, i32 2
Check LatCell: 0
In Meet:   %54 = getelementptr inbounds %struct.planet, ptr %53, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = getelementptr inbounds %struct.planet, ptr %53, i32 0, i32 2
VisitInstr:   %55 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %55 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load ptr, ptr %9, align 8
VisitInstr:   %56 = getelementptr inbounds %struct.planet, ptr %55, i32 0, i32 2
GetElementPtr:   %56 = getelementptr inbounds %struct.planet, ptr %55, i32 0, i32 2
Check LatCell: 0
In Meet:   %56 = getelementptr inbounds %struct.planet, ptr %55, i32 0, i32 2, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = getelementptr inbounds %struct.planet, ptr %55, i32 0, i32 2
VisitInstr:   %57 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %57 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = load double, ptr %10, align 8
VisitInstr:   %58 = load double, ptr %10, align 8
Check LatCell: 0
In Meet:   %58 = load double, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %58 = load double, ptr %10, align 8
VisitInstr:   %59 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %59 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %59 = load double, ptr %11, align 8
VisitInstr:   %60 = load double, ptr %11, align 8
Check LatCell: 0
In Meet:   %60 = load double, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load double, ptr %11, align 8
VisitInstr:   %61 = fmul double %59, %60
BinaryOp:   %61 = fmul double %59, %60
Check LatCell: 0
In Meet:   %61 = fmul double %59, %60, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = fmul double %59, %60
VisitInstr:   %62 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %62 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = load double, ptr %12, align 8
VisitInstr:   %63 = load double, ptr %12, align 8
Check LatCell: 0
In Meet:   %63 = load double, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = load double, ptr %12, align 8
VisitInstr:   %64 = load ptr, ptr %8, align 8
Check LatCell: 0
In Meet:   %64 = load ptr, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = load ptr, ptr %8, align 8
VisitInstr:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 6
GetElementPtr:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 6
Check LatCell: 0
In Meet:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 6
VisitInstr:   %66 = load ptr, ptr %9, align 8
Check LatCell: 0
In Meet:   %66 = load ptr, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load ptr, ptr %9, align 8
VisitInstr:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
GetElementPtr:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
Check LatCell: 0
In Meet:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = getelementptr inbounds %struct.planet, ptr %66, i32 0, i32 6
VisitInstr:   %68 = load double, ptr %13, align 8
Check LatCell: 0
In Meet:   %68 = load double, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = load double, ptr %13, align 8
VisitInstr:   %69 = load double, ptr %5, align 8
Check LatCell: 0
In Meet:   %69 = load double, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = load double, ptr %5, align 8
VisitInstr:   %70 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %70 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = load i32, ptr %7, align 4
VisitInstr:   %71 = add nsw i32 %70, 1
BinaryOp:   %71 = add nsw i32 %70, 1
Check LatCell: 0
In Meet:   %71 = add nsw i32 %70, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = add nsw i32 %70, 1
VisitInstr:   %72 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %72 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = load i32, ptr %6, align 4
VisitInstr:   %73 = add nsw i32 %72, 1
BinaryOp:   %73 = add nsw i32 %72, 1
Check LatCell: 0
In Meet:   %73 = add nsw i32 %72, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = add nsw i32 %72, 1
VisitInstr:   br label %74
BranchInst:   br label %74
In AddEdge: 0x559dc7b0e8b0, 0x559dc7b12420, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %16, label %75, label %110
BranchInst:   br i1 %16, label %75, label %110
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b0e9e0, 0x559dc7b12640, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b0e9e0, 0x559dc7b12640, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store ptr %20, ptr %8, align 8
Check LatCell: 0
In Meet:   store ptr %20, ptr %8, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %20, ptr %8, align 8
VisitInstr:   %76 = load double, ptr %22, align 8
Check LatCell: 0
In Meet:   %76 = load double, ptr %22, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = load double, ptr %22, align 8
VisitInstr:   %77 = fmul double 5.000000e-01, %76
BinaryOp:   %77 = fmul double 5.000000e-01, %76
Check LatCell: 0
In Meet:   %77 = fmul double 5.000000e-01, %76, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = fmul double 5.000000e-01, %76
VisitInstr:   %78 = load double, ptr %24, align 8
Check LatCell: 0
In Meet:   %78 = load double, ptr %24, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %78 = load double, ptr %24, align 8
VisitInstr:   %79 = load double, ptr %26, align 8
Check LatCell: 0
In Meet:   %79 = load double, ptr %26, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %79 = load double, ptr %26, align 8
VisitInstr:   %80 = load double, ptr %28, align 8
Check LatCell: 0
In Meet:   %80 = load double, ptr %28, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %80 = load double, ptr %28, align 8
VisitInstr:   %81 = load double, ptr %30, align 8
Check LatCell: 0
In Meet:   %81 = load double, ptr %30, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %81 = load double, ptr %30, align 8
VisitInstr:   %82 = fmul double %80, %81
BinaryOp:   %82 = fmul double %80, %81
Check LatCell: 0
In Meet:   %82 = fmul double %80, %81, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %82 = fmul double %80, %81
VisitInstr:   %83 = call double @llvm.fmuladd.f64(double %78, double %79, double %82)
Check LatCell: 0
In Meet:   %83 = call double @llvm.fmuladd.f64(double %78, double %79, double %82), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %83 = call double @llvm.fmuladd.f64(double %78, double %79, double %82)
VisitInstr:   %84 = load double, ptr %32, align 8
Check LatCell: 0
In Meet:   %84 = load double, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %84 = load double, ptr %32, align 8
VisitInstr:   %85 = load double, ptr %34, align 8
Check LatCell: 0
In Meet:   %85 = load double, ptr %34, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %85 = load double, ptr %34, align 8
VisitInstr:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %83)
Check LatCell: 0
In Meet:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %83), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %86 = call double @llvm.fmuladd.f64(double %84, double %85, double %83)
VisitInstr:   %87 = call double @llvm.fmuladd.f64(double %77, double %86, double %35)
Check LatCell: 0
In Meet:   %87 = call double @llvm.fmuladd.f64(double %77, double %86, double %35), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %87 = call double @llvm.fmuladd.f64(double %77, double %86, double %35)
VisitInstr:   store double %87, ptr %5, align 8
Check LatCell: 0
In Meet:   store double %87, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %87, ptr %5, align 8
VisitInstr:   store i32 %37, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %37, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %37, ptr %7, align 4
VisitInstr:   br label %88
BranchInst:   br label %88
In AddEdge: 0x559dc7b0ebf0, 0x559dc7b197d0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %111 = load double, ptr %5, align 8
Check LatCell: 0
In Meet:   %111 = load double, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %111 = load double, ptr %5, align 8
VisitInstr:   ret double %111
Check LatCell: 0
In Meet:   ret double %111, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret double %111
Visiting BB: 
VisitInstr:   br i1 %40, label %89, label %108
BranchInst:   br i1 %40, label %89, label %108
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b19720, 0x559dc7b19ad0, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b19720, 0x559dc7b19ad0, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store ptr %44, ptr %9, align 8
Check LatCell: 0
In Meet:   store ptr %44, ptr %9, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %44, ptr %9, align 8
VisitInstr:   %90 = load double, ptr %46, align 8
Check LatCell: 0
In Meet:   %90 = load double, ptr %46, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %90 = load double, ptr %46, align 8
VisitInstr:   %91 = load double, ptr %48, align 8
Check LatCell: 0
In Meet:   %91 = load double, ptr %48, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %91 = load double, ptr %48, align 8
VisitInstr:   %92 = fsub double %90, %91
BinaryOp:   %92 = fsub double %90, %91
Check LatCell: 0
In Meet:   %92 = fsub double %90, %91, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %92 = fsub double %90, %91
VisitInstr:   store double %92, ptr %10, align 8
Check LatCell: 0
In Meet:   store double %92, ptr %10, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %92, ptr %10, align 8
VisitInstr:   %93 = load double, ptr %50, align 8
Check LatCell: 0
In Meet:   %93 = load double, ptr %50, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %93 = load double, ptr %50, align 8
VisitInstr:   %94 = load double, ptr %52, align 8
Check LatCell: 0
In Meet:   %94 = load double, ptr %52, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %94 = load double, ptr %52, align 8
VisitInstr:   %95 = fsub double %93, %94
BinaryOp:   %95 = fsub double %93, %94
Check LatCell: 0
In Meet:   %95 = fsub double %93, %94, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %95 = fsub double %93, %94
VisitInstr:   store double %95, ptr %11, align 8
Check LatCell: 0
In Meet:   store double %95, ptr %11, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %95, ptr %11, align 8
VisitInstr:   %96 = load double, ptr %54, align 8
Check LatCell: 0
In Meet:   %96 = load double, ptr %54, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %96 = load double, ptr %54, align 8
VisitInstr:   %97 = load double, ptr %56, align 8
Check LatCell: 0
In Meet:   %97 = load double, ptr %56, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %97 = load double, ptr %56, align 8
VisitInstr:   %98 = fsub double %96, %97
BinaryOp:   %98 = fsub double %96, %97
Check LatCell: 0
In Meet:   %98 = fsub double %96, %97, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %98 = fsub double %96, %97
VisitInstr:   store double %98, ptr %12, align 8
Check LatCell: 0
In Meet:   store double %98, ptr %12, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %98, ptr %12, align 8
VisitInstr:   %99 = call double @llvm.fmuladd.f64(double %57, double %58, double %61)
Check LatCell: 0
In Meet:   %99 = call double @llvm.fmuladd.f64(double %57, double %58, double %61), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %99 = call double @llvm.fmuladd.f64(double %57, double %58, double %61)
VisitInstr:   %100 = call double @llvm.fmuladd.f64(double %62, double %63, double %99)
Check LatCell: 0
In Meet:   %100 = call double @llvm.fmuladd.f64(double %62, double %63, double %99), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %100 = call double @llvm.fmuladd.f64(double %62, double %63, double %99)
VisitInstr:   %101 = call double @sqrt(double noundef %100) #4
Check LatCell: 0
In Meet:   %101 = call double @sqrt(double noundef %100) #4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %101 = call double @sqrt(double noundef %100) #4
VisitInstr:   store double %101, ptr %13, align 8
Check LatCell: 0
In Meet:   store double %101, ptr %13, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %101, ptr %13, align 8
VisitInstr:   %102 = load double, ptr %65, align 8
Check LatCell: 0
In Meet:   %102 = load double, ptr %65, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %102 = load double, ptr %65, align 8
VisitInstr:   %103 = load double, ptr %67, align 8
Check LatCell: 0
In Meet:   %103 = load double, ptr %67, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %103 = load double, ptr %67, align 8
VisitInstr:   %104 = fmul double %102, %103
BinaryOp:   %104 = fmul double %102, %103
Check LatCell: 0
In Meet:   %104 = fmul double %102, %103, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %104 = fmul double %102, %103
VisitInstr:   %105 = fdiv double %104, %68
BinaryOp:   %105 = fdiv double %104, %68
Check LatCell: 0
In Meet:   %105 = fdiv double %104, %68, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %105 = fdiv double %104, %68
VisitInstr:   %106 = fsub double %69, %105
BinaryOp:   %106 = fsub double %69, %105
Check LatCell: 0
In Meet:   %106 = fsub double %69, %105, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %106 = fsub double %69, %105
VisitInstr:   store double %106, ptr %5, align 8
Check LatCell: 0
In Meet:   store double %106, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %106, ptr %5, align 8
VisitInstr:   br label %107
BranchInst:   br label %107
In AddEdge: 0x559dc7b19990, 0x559dc7b1b8a0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br label %109
BranchInst:   br label %109
In AddEdge: 0x559dc7b199e0, 0x559dc7b1bbe0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %71, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %71, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %71, ptr %7, align 4
VisitInstr:   br label %88, !llvm.loop !6
BranchInst:   br label %88, !llvm.loop !6
In AddEdge: 0x559dc7b1b830, 0x559dc7b1baa0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   store i32 %73, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 %73, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %73, ptr %6, align 4
VisitInstr:   br label %74, !llvm.loop !8
BranchInst:   br label %74, !llvm.loop !8
In AddEdge: 0x559dc7b1bb70, 0x559dc7b1bde0, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on offset_momentum
******************************************************
UnitLoopAnalysis running on offset_momentum
[LoopLoopAnalysis] parent loop header is:   %10 = load i32, ptr %8, align 4
Instruction to be moved:   %10 = load i32, ptr %8, align 4
Instruction to be moved:   %11 = load i32, ptr %3, align 4
Instruction to be moved:   %12 = icmp slt i32 %9, %10
Instruction to be moved:   %14 = load ptr, ptr %4, align 8
Instruction to be moved:   %15 = load i32, ptr %8, align 4
Instruction to be moved:   %16 = sext i32 %13 to i64
Instruction to be moved:   %17 = getelementptr inbounds %struct.planet, ptr %12, i64 %14
Instruction to be moved:   %18 = getelementptr inbounds %struct.planet, ptr %15, i32 0, i32 3
Instruction to be moved:   %20 = load ptr, ptr %4, align 8
Instruction to be moved:   %21 = load i32, ptr %8, align 4
Instruction to be moved:   %22 = sext i32 %18 to i64
Instruction to be moved:   %23 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
Instruction to be moved:   %24 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
Instruction to be moved:   %26 = load double, ptr %5, align 8
Instruction to be moved:   %28 = load ptr, ptr %4, align 8
Instruction to be moved:   %29 = load i32, ptr %8, align 4
Instruction to be moved:   %30 = sext i32 %24 to i64
Instruction to be moved:   %31 = getelementptr inbounds %struct.planet, ptr %23, i64 %25
Instruction to be moved:   %32 = getelementptr inbounds %struct.planet, ptr %26, i32 0, i32 4
Instruction to be moved:   %34 = load ptr, ptr %4, align 8
Instruction to be moved:   %35 = load i32, ptr %8, align 4
Instruction to be moved:   %36 = sext i32 %29 to i64
Instruction to be moved:   %37 = getelementptr inbounds %struct.planet, ptr %28, i64 %30
Instruction to be moved:   %38 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 6
Instruction to be moved:   %40 = load double, ptr %6, align 8
Instruction to be moved:   %42 = load ptr, ptr %4, align 8
Instruction to be moved:   %43 = load i32, ptr %8, align 4
Instruction to be moved:   %44 = sext i32 %35 to i64
Instruction to be moved:   %45 = getelementptr inbounds %struct.planet, ptr %34, i64 %36
Instruction to be moved:   %46 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 5
Instruction to be moved:   %48 = load ptr, ptr %4, align 8
Instruction to be moved:   %49 = load i32, ptr %8, align 4
Instruction to be moved:   %50 = sext i32 %40 to i64
Instruction to be moved:   %51 = getelementptr inbounds %struct.planet, ptr %39, i64 %41
Instruction to be moved:   %52 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 6
Instruction to be moved:   %54 = load double, ptr %7, align 8
Instruction to be moved:   %57 = load i32, ptr %8, align 4
Instruction to be moved:   %58 = add nsw i32 %45, 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 184
[UnitLICM]: NumComputeHoisted: 28
[UnitLICM]: Total: 309
UnitSCCP running on offset_momentum
Visiting BB: 
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %4 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca ptr, align 8
VisitInstr:   %5 = alloca double, align 8
Check LatCell: 0
In Meet:   %5 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca double, align 8
VisitInstr:   %6 = alloca double, align 8
Check LatCell: 0
In Meet:   %6 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca double, align 8
VisitInstr:   %7 = alloca double, align 8
Check LatCell: 0
In Meet:   %7 = alloca double, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca double, align 8
VisitInstr:   %8 = alloca i32, align 4
Check LatCell: 0
In Meet:   %8 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = alloca i32, align 4
VisitInstr:   store i32 %0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %3, align 4
VisitInstr:   store ptr %1, ptr %4, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %4, align 8
VisitInstr:   store double 0.000000e+00, ptr %5, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %5, align 8
VisitInstr:   store double 0.000000e+00, ptr %6, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %6, align 8
VisitInstr:   store double 0.000000e+00, ptr %7, align 8
Check LatCell: 0
In Meet:   store double 0.000000e+00, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double 0.000000e+00, ptr %7, align 8
VisitInstr:   store i32 0, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %8, align 4
VisitInstr:   %9 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %9 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = load i32, ptr %8, align 4
VisitInstr:   %10 = load i32, ptr %3, align 4
Check LatCell: 0
In Meet:   %10 = load i32, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = load i32, ptr %3, align 4
VisitInstr:   %11 = icmp slt i32 %9, %10
CmpInst:   %11 = icmp slt i32 %9, %10
Check LatCell: 0
In Meet:   %11 = icmp slt i32 %9, %10, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = icmp slt i32 %9, %10
VisitInstr:   %12 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %12 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = load ptr, ptr %4, align 8
VisitInstr:   %13 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %13 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load i32, ptr %8, align 4
VisitInstr:   %14 = sext i32 %13 to i64
UnaryOp:   %14 = sext i32 %13 to i64
Check LatCell: 0
In Meet:   %14 = sext i32 %13 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = sext i32 %13 to i64
VisitInstr:   %15 = getelementptr inbounds %struct.planet, ptr %12, i64 %14
GetElementPtr:   %15 = getelementptr inbounds %struct.planet, ptr %12, i64 %14
Check LatCell: 0
In Meet:   %15 = getelementptr inbounds %struct.planet, ptr %12, i64 %14, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %15 = getelementptr inbounds %struct.planet, ptr %12, i64 %14
VisitInstr:   %16 = getelementptr inbounds %struct.planet, ptr %15, i32 0, i32 3
GetElementPtr:   %16 = getelementptr inbounds %struct.planet, ptr %15, i32 0, i32 3
Check LatCell: 0
In Meet:   %16 = getelementptr inbounds %struct.planet, ptr %15, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %16 = getelementptr inbounds %struct.planet, ptr %15, i32 0, i32 3
VisitInstr:   %17 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %17 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %17 = load ptr, ptr %4, align 8
VisitInstr:   %18 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %18 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %18 = load i32, ptr %8, align 4
VisitInstr:   %19 = sext i32 %18 to i64
UnaryOp:   %19 = sext i32 %18 to i64
Check LatCell: 0
In Meet:   %19 = sext i32 %18 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = sext i32 %18 to i64
VisitInstr:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
GetElementPtr:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
Check LatCell: 0
In Meet:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = getelementptr inbounds %struct.planet, ptr %17, i64 %19
VisitInstr:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
GetElementPtr:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
Check LatCell: 0
In Meet:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %21 = getelementptr inbounds %struct.planet, ptr %20, i32 0, i32 6
VisitInstr:   %22 = load double, ptr %5, align 8
Check LatCell: 0
In Meet:   %22 = load double, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %22 = load double, ptr %5, align 8
VisitInstr:   %23 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %23 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %23 = load ptr, ptr %4, align 8
VisitInstr:   %24 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %24 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %24 = load i32, ptr %8, align 4
VisitInstr:   %25 = sext i32 %24 to i64
UnaryOp:   %25 = sext i32 %24 to i64
Check LatCell: 0
In Meet:   %25 = sext i32 %24 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %25 = sext i32 %24 to i64
VisitInstr:   %26 = getelementptr inbounds %struct.planet, ptr %23, i64 %25
GetElementPtr:   %26 = getelementptr inbounds %struct.planet, ptr %23, i64 %25
Check LatCell: 0
In Meet:   %26 = getelementptr inbounds %struct.planet, ptr %23, i64 %25, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %26 = getelementptr inbounds %struct.planet, ptr %23, i64 %25
VisitInstr:   %27 = getelementptr inbounds %struct.planet, ptr %26, i32 0, i32 4
GetElementPtr:   %27 = getelementptr inbounds %struct.planet, ptr %26, i32 0, i32 4
Check LatCell: 0
In Meet:   %27 = getelementptr inbounds %struct.planet, ptr %26, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %27 = getelementptr inbounds %struct.planet, ptr %26, i32 0, i32 4
VisitInstr:   %28 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %28 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %28 = load ptr, ptr %4, align 8
VisitInstr:   %29 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %29 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %29 = load i32, ptr %8, align 4
VisitInstr:   %30 = sext i32 %29 to i64
UnaryOp:   %30 = sext i32 %29 to i64
Check LatCell: 0
In Meet:   %30 = sext i32 %29 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %30 = sext i32 %29 to i64
VisitInstr:   %31 = getelementptr inbounds %struct.planet, ptr %28, i64 %30
GetElementPtr:   %31 = getelementptr inbounds %struct.planet, ptr %28, i64 %30
Check LatCell: 0
In Meet:   %31 = getelementptr inbounds %struct.planet, ptr %28, i64 %30, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %31 = getelementptr inbounds %struct.planet, ptr %28, i64 %30
VisitInstr:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 6
GetElementPtr:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 6
Check LatCell: 0
In Meet:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %32 = getelementptr inbounds %struct.planet, ptr %31, i32 0, i32 6
VisitInstr:   %33 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %33 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %33 = load double, ptr %6, align 8
VisitInstr:   %34 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %34 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %34 = load ptr, ptr %4, align 8
VisitInstr:   %35 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %35 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %35 = load i32, ptr %8, align 4
VisitInstr:   %36 = sext i32 %35 to i64
UnaryOp:   %36 = sext i32 %35 to i64
Check LatCell: 0
In Meet:   %36 = sext i32 %35 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %36 = sext i32 %35 to i64
VisitInstr:   %37 = getelementptr inbounds %struct.planet, ptr %34, i64 %36
GetElementPtr:   %37 = getelementptr inbounds %struct.planet, ptr %34, i64 %36
Check LatCell: 0
In Meet:   %37 = getelementptr inbounds %struct.planet, ptr %34, i64 %36, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %37 = getelementptr inbounds %struct.planet, ptr %34, i64 %36
VisitInstr:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 5
GetElementPtr:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 5
Check LatCell: 0
In Meet:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %38 = getelementptr inbounds %struct.planet, ptr %37, i32 0, i32 5
VisitInstr:   %39 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %39 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %39 = load ptr, ptr %4, align 8
VisitInstr:   %40 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %40 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %40 = load i32, ptr %8, align 4
VisitInstr:   %41 = sext i32 %40 to i64
UnaryOp:   %41 = sext i32 %40 to i64
Check LatCell: 0
In Meet:   %41 = sext i32 %40 to i64, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %41 = sext i32 %40 to i64
VisitInstr:   %42 = getelementptr inbounds %struct.planet, ptr %39, i64 %41
GetElementPtr:   %42 = getelementptr inbounds %struct.planet, ptr %39, i64 %41
Check LatCell: 0
In Meet:   %42 = getelementptr inbounds %struct.planet, ptr %39, i64 %41, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %42 = getelementptr inbounds %struct.planet, ptr %39, i64 %41
VisitInstr:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 6
GetElementPtr:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 6
Check LatCell: 0
In Meet:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 6, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %43 = getelementptr inbounds %struct.planet, ptr %42, i32 0, i32 6
VisitInstr:   %44 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %44 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %44 = load double, ptr %7, align 8
VisitInstr:   %45 = load i32, ptr %8, align 4
Check LatCell: 0
In Meet:   %45 = load i32, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %45 = load i32, ptr %8, align 4
VisitInstr:   %46 = add nsw i32 %45, 1
BinaryOp:   %46 = add nsw i32 %45, 1
Check LatCell: 0
In Meet:   %46 = add nsw i32 %45, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %46 = add nsw i32 %45, 1
VisitInstr:   br label %47
BranchInst:   br label %47
In AddEdge: 0x559dc7b1c130, 0x559dc7b1c880, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %11, label %48, label %59
BranchInst:   br i1 %11, label %48, label %59
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b1c260, 0x559dc7b1cb80, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b1c260, 0x559dc7b1cb80, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %49 = load double, ptr %16, align 8
Check LatCell: 0
In Meet:   %49 = load double, ptr %16, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %49 = load double, ptr %16, align 8
VisitInstr:   %50 = load double, ptr %21, align 8
Check LatCell: 0
In Meet:   %50 = load double, ptr %21, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %50 = load double, ptr %21, align 8
VisitInstr:   %51 = call double @llvm.fmuladd.f64(double %49, double %50, double %22)
Check LatCell: 0
In Meet:   %51 = call double @llvm.fmuladd.f64(double %49, double %50, double %22), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %51 = call double @llvm.fmuladd.f64(double %49, double %50, double %22)
VisitInstr:   store double %51, ptr %5, align 8
Check LatCell: 0
In Meet:   store double %51, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %51, ptr %5, align 8
VisitInstr:   %52 = load double, ptr %27, align 8
Check LatCell: 0
In Meet:   %52 = load double, ptr %27, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %52 = load double, ptr %27, align 8
VisitInstr:   %53 = load double, ptr %32, align 8
Check LatCell: 0
In Meet:   %53 = load double, ptr %32, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %53 = load double, ptr %32, align 8
VisitInstr:   %54 = call double @llvm.fmuladd.f64(double %52, double %53, double %33)
Check LatCell: 0
In Meet:   %54 = call double @llvm.fmuladd.f64(double %52, double %53, double %33), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %54 = call double @llvm.fmuladd.f64(double %52, double %53, double %33)
VisitInstr:   store double %54, ptr %6, align 8
Check LatCell: 0
In Meet:   store double %54, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %54, ptr %6, align 8
VisitInstr:   %55 = load double, ptr %38, align 8
Check LatCell: 0
In Meet:   %55 = load double, ptr %38, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %55 = load double, ptr %38, align 8
VisitInstr:   %56 = load double, ptr %43, align 8
Check LatCell: 0
In Meet:   %56 = load double, ptr %43, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %56 = load double, ptr %43, align 8
VisitInstr:   %57 = call double @llvm.fmuladd.f64(double %55, double %56, double %44)
Check LatCell: 0
In Meet:   %57 = call double @llvm.fmuladd.f64(double %55, double %56, double %44), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %57 = call double @llvm.fmuladd.f64(double %55, double %56, double %44)
VisitInstr:   store double %57, ptr %7, align 8
Check LatCell: 0
In Meet:   store double %57, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %57, ptr %7, align 8
VisitInstr:   br label %58
BranchInst:   br label %58
In AddEdge: 0x559dc7b1ca40, 0x559dc7b1e530, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %60 = load double, ptr %5, align 8
Check LatCell: 0
In Meet:   %60 = load double, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %60 = load double, ptr %5, align 8
VisitInstr:   %61 = fneg double %60
UnaryOp:   %61 = fneg double %60
Check LatCell: 0
In Meet:   %61 = fneg double %60, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %61 = fneg double %60
VisitInstr:   %62 = fdiv double %61, 0x4043BD3CC9BE45DE
BinaryOp:   %62 = fdiv double %61, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %62 = fdiv double %61, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %62 = fdiv double %61, 0x4043BD3CC9BE45DE
VisitInstr:   %63 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %63 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %63 = load ptr, ptr %4, align 8
VisitInstr:   %64 = getelementptr inbounds %struct.planet, ptr %63, i64 0
GetElementPtr:   %64 = getelementptr inbounds %struct.planet, ptr %63, i64 0
Check LatCell: 0
In Meet:   %64 = getelementptr inbounds %struct.planet, ptr %63, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %64 = getelementptr inbounds %struct.planet, ptr %63, i64 0
VisitInstr:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 3
GetElementPtr:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 3
Check LatCell: 0
In Meet:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 3, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %65 = getelementptr inbounds %struct.planet, ptr %64, i32 0, i32 3
VisitInstr:   store double %62, ptr %65, align 8
Check LatCell: 0
In Meet:   store double %62, ptr %65, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %62, ptr %65, align 8
VisitInstr:   %66 = load double, ptr %6, align 8
Check LatCell: 0
In Meet:   %66 = load double, ptr %6, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %66 = load double, ptr %6, align 8
VisitInstr:   %67 = fneg double %66
UnaryOp:   %67 = fneg double %66
Check LatCell: 0
In Meet:   %67 = fneg double %66, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %67 = fneg double %66
VisitInstr:   %68 = fdiv double %67, 0x4043BD3CC9BE45DE
BinaryOp:   %68 = fdiv double %67, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %68 = fdiv double %67, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %68 = fdiv double %67, 0x4043BD3CC9BE45DE
VisitInstr:   %69 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %69 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %69 = load ptr, ptr %4, align 8
VisitInstr:   %70 = getelementptr inbounds %struct.planet, ptr %69, i64 0
GetElementPtr:   %70 = getelementptr inbounds %struct.planet, ptr %69, i64 0
Check LatCell: 0
In Meet:   %70 = getelementptr inbounds %struct.planet, ptr %69, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %70 = getelementptr inbounds %struct.planet, ptr %69, i64 0
VisitInstr:   %71 = getelementptr inbounds %struct.planet, ptr %70, i32 0, i32 4
GetElementPtr:   %71 = getelementptr inbounds %struct.planet, ptr %70, i32 0, i32 4
Check LatCell: 0
In Meet:   %71 = getelementptr inbounds %struct.planet, ptr %70, i32 0, i32 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %71 = getelementptr inbounds %struct.planet, ptr %70, i32 0, i32 4
VisitInstr:   store double %68, ptr %71, align 8
Check LatCell: 0
In Meet:   store double %68, ptr %71, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %68, ptr %71, align 8
VisitInstr:   %72 = load double, ptr %7, align 8
Check LatCell: 0
In Meet:   %72 = load double, ptr %7, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %72 = load double, ptr %7, align 8
VisitInstr:   %73 = fneg double %72
UnaryOp:   %73 = fneg double %72
Check LatCell: 0
In Meet:   %73 = fneg double %72, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %73 = fneg double %72
VisitInstr:   %74 = fdiv double %73, 0x4043BD3CC9BE45DE
BinaryOp:   %74 = fdiv double %73, 0x4043BD3CC9BE45DE
Check LatCell: 0
In Meet:   %74 = fdiv double %73, 0x4043BD3CC9BE45DE, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %74 = fdiv double %73, 0x4043BD3CC9BE45DE
VisitInstr:   %75 = load ptr, ptr %4, align 8
Check LatCell: 0
In Meet:   %75 = load ptr, ptr %4, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %75 = load ptr, ptr %4, align 8
VisitInstr:   %76 = getelementptr inbounds %struct.planet, ptr %75, i64 0
GetElementPtr:   %76 = getelementptr inbounds %struct.planet, ptr %75, i64 0
Check LatCell: 0
In Meet:   %76 = getelementptr inbounds %struct.planet, ptr %75, i64 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %76 = getelementptr inbounds %struct.planet, ptr %75, i64 0
VisitInstr:   %77 = getelementptr inbounds %struct.planet, ptr %76, i32 0, i32 5
GetElementPtr:   %77 = getelementptr inbounds %struct.planet, ptr %76, i32 0, i32 5
Check LatCell: 0
In Meet:   %77 = getelementptr inbounds %struct.planet, ptr %76, i32 0, i32 5, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %77 = getelementptr inbounds %struct.planet, ptr %76, i32 0, i32 5
VisitInstr:   store double %74, ptr %77, align 8
Check LatCell: 0
In Meet:   store double %74, ptr %77, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store double %74, ptr %77, align 8
VisitInstr:   ret void
Check LatCell: 0
In Meet:   ret void, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret void
Visiting BB: 
VisitInstr:   store i32 %46, ptr %8, align 4
Check LatCell: 0
In Meet:   store i32 %46, ptr %8, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %46, ptr %8, align 4
VisitInstr:   br label %47, !llvm.loop !6
BranchInst:   br label %47, !llvm.loop !6
In AddEdge: 0x559dc7b1e4c0, 0x559dc7b1e730, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
UnitLICM running on main
******************************************************
UnitLoopAnalysis running on main
[LoopLoopAnalysis] parent loop header is:   %11 = load i32, ptr %7, align 4
Instruction to be moved:   %11 = load i32, ptr %7, align 4
Instruction to be moved:   %12 = load i32, ptr %6, align 4
Instruction to be moved:   %13 = icmp sle i32 %10, %11
Instruction to be moved:   %16 = load i32, ptr %7, align 4
Instruction to be moved:   %17 = add nsw i32 %13, 1
[UnitLICM]: NumStoreHoisted: 0
[UnitLICM]: NumLoadHoisted: 187
[UnitLICM]: NumComputeHoisted: 30
[UnitLICM]: Total: 314
UnitSCCP running on main
Visiting BB: 
VisitInstr:   %3 = alloca i32, align 4
Check LatCell: 0
In Meet:   %3 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %3 = alloca i32, align 4
VisitInstr:   %4 = alloca i32, align 4
Check LatCell: 0
In Meet:   %4 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %4 = alloca i32, align 4
VisitInstr:   %5 = alloca ptr, align 8
Check LatCell: 0
In Meet:   %5 = alloca ptr, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %5 = alloca ptr, align 8
VisitInstr:   %6 = alloca i32, align 4
Check LatCell: 0
In Meet:   %6 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %6 = alloca i32, align 4
VisitInstr:   %7 = alloca i32, align 4
Check LatCell: 0
In Meet:   %7 = alloca i32, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %7 = alloca i32, align 4
VisitInstr:   store i32 0, ptr %3, align 4
Check LatCell: 0
In Meet:   store i32 0, ptr %3, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 0, ptr %3, align 4
VisitInstr:   store i32 %0, ptr %4, align 4
Check LatCell: 0
In Meet:   store i32 %0, ptr %4, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %0, ptr %4, align 4
VisitInstr:   store ptr %1, ptr %5, align 8
Check LatCell: 0
In Meet:   store ptr %1, ptr %5, align 8, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store ptr %1, ptr %5, align 8
VisitInstr:   store i32 5000000, ptr %6, align 4
Check LatCell: 0
In Meet:   store i32 5000000, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 5000000, ptr %6, align 4
VisitInstr:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @offset_momentum(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %8 = call double @energy(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   %8 = call double @energy(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %8 = call double @energy(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %9 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %8)
Check LatCell: 0
In Meet:   %9 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %8), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %9 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %8)
VisitInstr:   store i32 1, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 1, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 1, ptr %7, align 4
VisitInstr:   %10 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %10 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %10 = load i32, ptr %7, align 4
VisitInstr:   %11 = load i32, ptr %6, align 4
Check LatCell: 0
In Meet:   %11 = load i32, ptr %6, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %11 = load i32, ptr %6, align 4
VisitInstr:   %12 = icmp sle i32 %10, %11
CmpInst:   %12 = icmp sle i32 %10, %11
Check LatCell: 0
In Meet:   %12 = icmp sle i32 %10, %11, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %12 = icmp sle i32 %10, %11
VisitInstr:   %13 = load i32, ptr %7, align 4
Check LatCell: 0
In Meet:   %13 = load i32, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %13 = load i32, ptr %7, align 4
VisitInstr:   %14 = add nsw i32 %13, 1
BinaryOp:   %14 = add nsw i32 %13, 1
Check LatCell: 0
In Meet:   %14 = add nsw i32 %13, 1, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %14 = add nsw i32 %13, 1
VisitInstr:   br label %15
BranchInst:   br label %15
In AddEdge: 0x559dc7b1f5c0, 0x559dc7b20080, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   br i1 %12, label %16, label %18
BranchInst:   br i1 %12, label %16, label %18
In BranchInst: -1, 0x0
In AddEdge: 0x559dc7b20010, 0x559dc7b20380, 0
Adding edge:  -> 
In AddEdge: 0x559dc7b20010, 0x559dc7b20380, 1
Adding edge:  -> 
Visiting BB: 
VisitInstr:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02)
Check LatCell: 0
In Meet:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   call void @advance(i32 noundef 5, ptr noundef @bodies, double noundef 1.000000e-02)
VisitInstr:   br label %17
BranchInst:   br label %17
In AddEdge: 0x559dc7b20240, 0x559dc7b205b0, 0
Adding edge:  -> 
Visiting BB: 
VisitInstr:   %19 = call double @energy(i32 noundef 5, ptr noundef @bodies)
Check LatCell: 0
In Meet:   %19 = call double @energy(i32 noundef 5, ptr noundef @bodies), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %19 = call double @energy(i32 noundef 5, ptr noundef @bodies)
VisitInstr:   %20 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %19)
Check LatCell: 0
In Meet:   %20 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %19), Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   %20 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %19)
VisitInstr:   ret i32 0
Check LatCell: 0
In Meet:   ret i32 0, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   ret i32 0
Visiting BB: 
VisitInstr:   store i32 %14, ptr %7, align 4
Check LatCell: 0
In Meet:   store i32 %14, ptr %7, align 4, Lat1: (1, 0x0), Lat2: (-1, 0x0)
Meet:   store i32 %14, ptr %7, align 4
VisitInstr:   br label %15, !llvm.loop !6
BranchInst:   br label %15, !llvm.loop !6
In AddEdge: 0x559dc7b20500, 0x559dc7b20720, 0
Adding edge:  -> 
UnitSCCP: 0 instructions removed, 0 basic blocks unreachable, 0 instructions simplified
